//---------------------------------------------------------------------------------------
// LoadingRoot.ad
//
//
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module ROOT
{
    method open(context)
    {
        SoundUtil::BGMFadeout(0.5);

        SequenceUtil::startPage(context, ROOT);
    }

    method doNext(context)
    {
        self.startRace(context);
    }

    method startRace(context)
    {

        main::ORG.enterCourse();

        SequenceUtil::startPage(context, OnboardMeterRoot, RaceRoot);

        SoundUtil::BGMFadeout(0.5);
    }

    method on_initialize_after_checkin(context)
    {
        yield false;
    }

    method on_loading_done(context, success)
    {
        if (!success)
        {
            SoundUtil::BGMFadeout(0.5);

            finalizeOnlineRace(context);

            return;
        }

        self.doNext(context);
    }

    method on_tick(context)
    {
    }

    method finalizeOnlineRace(context)
    {
        main::RaceOperator.checkOut();
        main::ORG.exitCourse();
        main::RaceOperator.destroyRace();
        main::RaceOperator.clearResource();

        main::PDINetwork.finalizeCommunicator();
        main::PDINetwork.stopAdHocMatching();
        main::pdiext::MSystemUtility::disconnectAdHoc();


        var localizeKey = "DISCONNECTED";
        if (!main::pdistd::MNetworkInterface::isWirelessSwitchOn())
            localizeKey = "DISCONNECTED_WIRELESS_LAN_SWITCH_OFF";

        DialogUtil::openConfirmDialog(context, DialogUtil::ERROR, context.translate(ROOT, "OnlineMessageGT5M", localizeKey));
        goToMenuSequence(context);
    }

    method onInitialize(context)
    {
        if (main::RaceOperator.race_parameter.online_on && !main::ORG.isOnline())
        {
            finalizeOnlineRace(context);
            return;
        }

        LoadingUtil::start(context, self, on_initialize_after_checkin, on_loading_done, on_tick);
    }

    method onFinalize(context)
    {
        __module__.clearStatic();
    }

    method onCancel(context)
    {
        return EVENTRESULT_FILTER;
    }
}