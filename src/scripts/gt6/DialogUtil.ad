

//---------------------------------------------------------------------------------------
// DialogUtil.ad
//
// Utility module for display various built-in dialogs.
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module DialogUtil
{
    function _get_dialog_page(dialog_name)
    {
        if (!main.defined("dialog_project"))
            return nil;

        var page = main::dialog_project[dialog_name];
        if (page == nil)
            return nil;
        return page;
    }

    static OK = 0;
    static ERROR = 1;
    static QUERY = 2;
    static YESNO = 3;
    static DEFAULT_NO = 4;
    static YESNOCLOSE = 5;
    static ABORT = 6;

    static RESULT_CANCEL = 0;
    static RESULT_YES = 1;
    static RESULT_NO = 2;
    static RESULT_CLOSE = 4;

    function openConfirmDialog(context, type, message, title, yes, no, auto_close)
    {
        var page = _get_dialog_page("ConfirmDialog");
        if (page != nil)
            return page["OpenDialog"](context, type, message, title, nil, yes, no, nil, auto_close);
        return false;
    }

    function openConfirmDialogAutoClose(context, type, message, title, wait_sec)
    {
        if (wait_sec == nil)
            wait_sec = 3.0; // Default

        return openConfirmDialog(context, type, message, title, nil, nil, wait_sec);
    }

    function sayYesConfirmDialog(context)
    {
        var page = _get_dialog_page("ConfirmDialog");
        if (page != nil)
            page["ActivateOKButton"](context);
    }

    function cancelConfirmDialog(context)
    {
        var page = _get_dialog_page("ConfirmDialog");
        if (page != nil)
            return page["ForceCancel"](context);
        return false;
    }

    function setConfirmDialogActivateSound(name)
    {
        var page = _get_dialog_page("ConfirmDialog");
        if (page != nil)
        {
            var func = page["SetActivateSound"];
            if (func != nil)
                func(name);
        }
    }

    function openProgressDialog(context, message_begin, message_success, message_failed, func, arg, icon_path, hide_start, message_aborted)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["OpenDialog"](context, message_begin, message_success, message_failed, func, arg, icon_path, hide_start, message_aborted);
    }

    function closeProgressDialog(context, no_enter)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["CloseDialog"](context, no_enter);
    }

    function getProgress(context)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["GetProgress"](context);
    }

    function setProgress(context, progress)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["SetProgress"](context, progress);
    }

    function setProgressMessage(context, message)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["SetMessage"](context, message);
    }

    function setProgressRawMode(context, mode)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["SetRawMode"](context, mode);
    }

    function setProgressCancelCB(context, func, text)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["SetCancelCB"](context, func, text);
    }

    function setProgressCompleteCB(context, func)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["SetCompleteCB"](context, func);
    }

    function setRemainSecond(context, remain_second)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["SetRemainSecond"](context, remain_second);
    }

    function setProgressLabel(context, text)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["SetProgressLabel"](context, text);
    }

    function appearProgressDialog(context)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["AppearDialog"](context);
    }

    function setProgressOKButton(context)
    {
        var page = _get_dialog_page("ProgressDialog");
        if (page != nil)
            return page["SetOKButton"](context);
    }

    function openServerSelectDialog(context, region_list)
    {
        var page = _get_dialog_page("ServerSelectDialog");
        if (page != nil)
            return page["open"](context, region_list);
    }

    function openConfirmExecDialog(context, message_begin, message_waiting, message_success, message_failed, func, arg, end_time_sec, no_progress)
    {
        var page = _get_dialog_page("ConfirmExecDialog");
        if (page != nil)
            return page["OpenDialog"](context, message_begin, message_waiting, message_success, message_failed, func, arg, end_time_sec, no_progress);
    }

    function openInformationDialog(context, message, title, image_path, gpb_path_and_gpb_name, load_image_from_disk)
    {
        var page = _get_dialog_page("InformationDialog");
        if (page != nil)
            return page["open"](context, message, title, image_path, gpb_path_and_gpb_name, load_image_from_disk);
    }

    function openDimmerDialog(context)
    {
        var page = _get_dialog_page("DimmerDialog");
        if (page != nil)
            page["open"](context);
    }

    function closeDimmerDialog(context)
    {
        var page = _get_dialog_page("DimmerDialog");
        if (page != nil)
            page["close"](context);
    }

    function openPrizeDialog(context, money, and_apply, display_bonus_precent, visible_trophies, finish_result, is_championship)
    {
        var page = _get_dialog_page("PrizeDialog");
        if (page != nil)
            return page["OpenDialog"](context, [money, and_apply, display_bonus_precent, visible_trophies, finish_result, is_championship]);
    }

    function closePrizeDialog(context)
    {
        var page = _get_dialog_page("PrizeDialog");
        if (page != nil)
            page["ForceClose"](context);
        return true;
    }

    function openGameCreditDialog(context, type)
    {
        var page = _get_dialog_page("GameCreditDialog");
        if (page != nil)
            return page["OpenDialog"](context, [type]);
    }

    function closeGameCreditDialog(context)
    {
        var page = _get_dialog_page("GameCreditDialog");
        if (page != nil)
            page["ForceClose"](context);
        return true;
    }

    function openPrizeStarDialog(context, gp, result)
    {
        var page = _get_dialog_page("PrizeStarDialog");
        if (page != nil)
            return page["OpenDialog"](context, gp, result);
    }

    function closePrizeStarDialog(context)
    {
        var page = _get_dialog_page("PrizeStarDialog");
        if (page != nil)
            page["ForceClose"](context);
        return true;
    }

    function openTutorialDialog(context, message, params)
    {
        var page = _get_dialog_page("TutorialDialog");
        if (page != nil)
            return page["open"](context, message, params);
    }

    function openTextReaderDialog(context, title, read_text_list)
    {
        var page = _get_dialog_page("TextReaderDialog");
        if (page != nil)
            return page["open"](context, title, read_text_list);
    }

    function readComponentTextBox(context, textbox)
    {
        var page = _get_dialog_page("TextReaderDialog");
        if (page != nil)
            return page["open"](context, textbox.label.text, [textbox.Text.label.text]);
    }

    function openMyMenuDialog(context, no_animation)
    {
        var page = _get_dialog_page("MyMenuDialog");
        if (page != nil)
            page["modal_open"](context, no_animation);
    }

    function closeMyMenuDialog(context, no_animation)
    {
        var page = _get_dialog_page("MyMenuDialog");
        if (page != nil)
            page["modal_close"](context, no_animation);
    }

    function copyMyMenuDialog(context, root)
    {
        var page = _get_dialog_page("MyMenuDialog");
        if (page != nil)
            return page["copy"](context, root);
    }

    function finalize_copyMyMenuDialog(context, root)
    {
        var page = _get_dialog_page("MyMenuDialog");
        if (page != nil)
            page["finalize_copy"](context, root);
    }

    function setMyMenuCarSelectCB(context, func)
    {
        var page = _get_dialog_page("MyMenuDialog");
        if (page != nil)
            return page["SetCarSelectCB"](context, func);
    }

    function setInsensitiveMenus(insensitive_menus)
    {
        var page = _get_dialog_page("MyMenuDialog");
        if (page != nil)
            return page["SetInsensitiveMenus"](insensitive_menus);
    }

    function openMultiSelectDialog(context, texts, selected_indexes, values, text_all, localize_page, x, y, w, limit_count, need_count)
    {
        var page = _get_dialog_page("MultiSelectDialog");
        if (page != nil)
            return page["OpenDialog"](context, texts, selected_indexes, values, text_all, localize_page, x, y, w, limit_count, need_count);
    }

    function cancelMultiSelectDialog(context)
    {
        var page = _get_dialog_page("MultiSelectDialog");
        if (page != nil)
            return page["ForceCancel"](context);
        return false;
    }

    function createInputTextDialogParams()
    {
        var page = _get_dialog_page("InputTextDialog");
        if (page != nil)
            return page.Params();
        else
            return nil;
    }

    function openInputTextDialog(context, params)
    {
        var page = _get_dialog_page("InputTextDialog");
        if (page != nil)
            return page["open"](context, params);
        return nil;
    }
}