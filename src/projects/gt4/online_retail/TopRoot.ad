module PROJECT::ROOT
{
	function setOnlineMove(mark, mask)
	{
		var actor = main::menu::MMoveActor(mark, (mark.x + mask.w), mark.y);
		actor.out = true;
		actor.repeat = 1;
		actor.linear = true;
		actor.ratio = 0.008;
		actor.flip = 0;
		mark.actor = actor;
	
		actor = main::menu::MMoveActor(mask, (mask.x - (mask.w / 2.0)), mask.y);
		actor.out = true;
		actor.repeat = 1;
		actor.linear = true;
		actor.ratio = 0.004;
		actor.flip = 0;
		mask.actor = actor;
	}
	
	setOnlineMove(Mark::mark, Mark::mask);
	
	function setFadeActor2(widget)
	{
		var actor = main::menu::MFadeActor(widget, 1.0);
		widget.actor = actor;
		widget.actor.period = 0.5;
		widget.actor.repeat = 1;
	}



	function onLoad(update_context)
	{
		setFadeActor2(StartScroll::dec_arrow::bga);
		setFadeActor2(StartScroll::inc_arrow::bga);
	}
	
	function MakeDisable(widget, index)
	{
		if (index == 0) return !main::network.isRTIMEInitialized();
		if (index == 1) return !main::network.isRTIMEInitialized();
		if (index == 2) return !main::network.isRTIMEInitialized();
		if (index == 3) return !main::network.isRTIMEInitialized();
		if (index == 4) return !main::network.isRTIMEInitialized();
		if (index == 5) return !main::network.isRTIMEInitialized();
		if (index == 6) return  main::network.isRTIMEInitialized();
		if (index == 7) return !main::network.isRTIMEInitialized();
		if (index == 8) return main::network.isRTIMEInitialized();
		return false;
	}



	function onInitialize(context)
	{
		StartScroll::SelectBox.makeDisableList(MakeDisable);
	
		if (main::network.isRTIMEInitialized())
			StartScroll::SelectBox.index = 0;
		else
			StartScroll::SelectBox.index = 6;
	
		Mark.active = main::network.isRTIMEInitialized();
	}
}

module PROJECT::ROOT::StartScroll::SelectBox
{
	function onValueChanged(context, index)
	{
		main::sound.play("cursor");
	}
}

module PROJECT::ROOT::StartScroll::SelectBox::P2P
{
	function beginMGCL(context, arg)
	{
		var res = main::network.beginMGCL();
		return res;
	}
	
	function onActivate(context)
	{
		main::sound.play("ok");
	
		var res = openProcessDialog(context, "initialize MGCL", beginMGCL, nil);
		if (!res)
		{
			openConfirmDialog(context, DIALOG_OK, lastProcessError(context));
			restart(context);
			return EVENTRESULT_FILTER;
		}
	
		main::network.setGameListFilter("GENERIC_FIELD_2", "EQUAL_TO", 0);
		start_page(context, P2PEventRoot);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::StartScroll::SelectBox::Rally
{
	function onActivate(context)
	{
		main::sound.play("ok");
		main::network.setGameListFilter("GENERIC_FIELD_2", "EQUAL_TO", 1);
		start_page(context, RallyEventRoot);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::StartScroll::SelectBox::Ranking
{
	function onActivate(context)
	{
		main::sound.play("ok");
		start_page(context, RankingRoot);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::StartScroll::SelectBox::Profile
{
	function onActivate(context)
	{
		main::sound.play("ok");
		ProfileRoot::open(context, TopRoot, nil, -1);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::StartScroll::SelectBox::Buddy
{
	function onActivate(context)
	{
		main::sound.play("ok");
		BuddyRoot::open(context, 1);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::StartScroll::SelectBox::Ignore
{
	function onActivate(context)
	{
		main::sound.play("ok");
		BuddyRoot::open(context, 0);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::StartScroll::SelectBox::Connect
{
    function onActivate(context)
    {
        if (!main::network.isRTIMEInitialized())
        {
            main::sound.play("ok");
            main::game.next_menu_project  = "network";
            main::game.major_menu_project = "online";
            main::game.major_menu_page    = "";
            start_page(context, nil);
        }
		return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::StartScroll::SelectBox::Disconnect
{
    function onActivate(context)
    {
        if (main::network.isRTIMEInitialized())
        {
            main::sound.play("ok");
            var res = openConfirmDialog(context, DIALOG_QUERY, context.translate(TopRoot, "DISCONNECT"));
            if (res)
            {
                restart(context);
            }
        }
		return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::StartScroll::SelectBox::NetConfig
{
    function onActivate(context)
    {
        main::sound.play("ok");

        main::game.major_menu_project = "online";
        main::game.major_menu_page    = "";
        main::game.next_menu_project  = "network";
        main::game.next_menu_arg      = "config";
        start_page(context, nil);
		return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::StartScroll::SelectBox::Option
{
    function onActivate(context, event, item)
    {
        main::sound.play("return");
        OptionPopup::open(context);
		return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::StartScroll::SelectBox::Save
{
    function onActivate(context, event, item)
    {
        main::sound.play("return");

        main::game.major_menu_project = "online";
        main::game.major_menu_page    = "";
        main::game.next_menu_arg      = "save_game";
        main::game.next_menu_project  = "memcard";
        start_page(context, nil);
		return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::StartScroll::SelectBox::Load
{
    function onActivate(context, event, item)
    {
        main::sound.play("return");

        main::game.major_menu_project = "online";
        main::game.major_menu_page    = "";
        main::game.next_menu_arg      = "load_game";
        main::game.next_menu_project  = "memcard";
        start_page(context, nil);
		return EVENTRESULT_FILTER;
    }
}