//---------------------------------------------------------------------------------------
// BuyCarDialog.ad
//
// Car modal with car specs & details when buying a car
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module PROJECT::ROOT
{
#ifdef GT4O_US_BETA
    static result;
    static current_car;
    static current_gcar;
    static original_y = Pane.y;
    static catalog;
    static sell;
    static showroom;
#else
    static result = nil;
    static current_car = nil;
    static current_gcar = nil;
    static original_y = Pane.y;
    static catalog = nil;
    static sell = nil;
    static showroom = nil;
#endif

    function setMoveActor(widget)
    {
        var actor = main::menu::MMoveActor(widget, widget.x, PS2_SCREEN_H_F);
        widget.actor = actor;
        widget.actor.ratio = 0.2;
    }

    function setFadeActorRoot()
    {
        var actor = main::menu::MFadeActor(ROOT, 1.0);
        actor.repeat = false;
        actor.period = 0.5;
        ROOT.actor = actor;
    }

    setMoveActor(Pane);
    setFadeActorRoot();

    function onInitialize(context)
    {
        var cg = catalog ? main::menu::MCarGarage(current_car) : current_gcar;
        Pane::VBox::Title::label.text = cg.short_name;
        Pane::VBox::Line0::th.text = context.translate(ROOT, "Engine");
        Pane::VBox::Line1::th.text = context.translate(ROOT, "Type");
        Pane::VBox::Line1::td.text = cg.getCatEngineType() + ":" + cg.getCatEngineCam();
        Pane::VBox::Line2::th.text = context.translate(ROOT, "Displacement");
        Pane::VBox::Line2::td.text = cg.getCatDisplacement();
        Pane::VBox::Line3::th.text = context.translate(ROOT, "Power");
        Pane::VBox::Line3::td.scale_x = 0.9;
        Pane::VBox::Line3::td.scale_y = 0.9;
        Pane::VBox::Line3::td.text = catalog ? cg.getCatPs("%d%s/%s%s") : cg.getCurrentPs("%d%s/%s%s");
        Pane::VBox::Line3::td.adjustScale();
        Pane::VBox::Line4::th.text = context.translate(ROOT, "Torque");
        Pane::VBox::Line4::td.scale_x = 0.9;
        Pane::VBox::Line4::td.scale_y = 0.9;
        Pane::VBox::Line4::td.text = catalog ? cg.getCatTq("%.2t%s/%s%s") : cg.getCurrentTq("%.2t%s/%s%s");
        Pane::VBox::Line4::td.adjustScale();
        Pane::VBox::Line5::th.text = context.translate(ROOT, "Dimension_Weight");
        Pane::VBox::Line6::th.text = context.translate(ROOT, "Dimension");
        Pane::VBox::Line6::td.text = "%sx%sx%s".format(cg.getCatLength(), cg.getCatWidth(), cg.getCatHeight());
        Pane::VBox::Line9::th.text = context.translate(ROOT, "Mass");
        Pane::VBox::Line9::td.text = catalog ? cg.getCatMs("%d%s") : cg.getCurrentMs("%d%s");
        Pane::VBox::Line10::th.text = context.translate(ROOT, "Chassis");

        var train = cg.getDTrainType();
        train = context.translate(ROOT, "DriveTrainName", train);
        Pane::VBox::Line11::th.text = context.translate(ROOT, "DriveTrain");
        Pane::VBox::Line11::td.text = train;

        var price = 0;
        if (sell)
        {
            Pane::VBox::Option::Line12.visible = true;
            Pane::VBox::Option::Price.visible = false;
            Pane::VBox::Option::Line12::th.text = context.translate(ROOT, "Mileage");
            Pane::VBox::Option::Line12::td.text = cg.getOdometer("%.1t%s");
            Pane::VBox::Money::th.text = context.translate(ROOT, "Value");
            price = cg.getUsedSellPrice();
            Pane::VBox::Money::td.text = "Cr. " + main::menu::MUtility::GetMoneyString(price); 
        }
        else
        {
            Pane::VBox::Option::Line12.visible = false;
            Pane::VBox::Option::Price.visible = true;
            Pane::VBox::Option::Price::th.text = context.translate(ROOT, "Price");
            price = nil;

            if (catalog)
                price = main::menu::MCarData::GetPrice(cg.getCarLabel());
            else
                price = cg.getUsedPrice();

            if (showroom && main::menu::MCarData::NotForSell(cg.getCarLabel()))
                Pane::VBox::Option::Price::td.text = context.translate(ROOT, "not for sell");
            else
                Pane::VBox::Option::Price::td.text = "Cr. " + main::menu::MUtility::GetMoneyString(price);

            Pane::VBox::Option::Price::td.adjustScale();
            Pane::VBox::Money::th.text = context.translate(ROOT, "YourMoney");
            Pane::VBox::Money::td.text = "Cr. " + main::game.money;
            Pane::VBox::Money::td_red.text = "Cr. " + main::game.money;
        }

        if (sell)
        {
            Pane::VBox::Buttons::Buy::TextFace.text = context.translate(ROOT, "Sell");
            ROOT.setFocus(Pane::VBox::Buttons::Cancel);
        }
        else
        {
            Pane::VBox::Buttons::Buy::TextFace.text = context.translate(ROOT, "buy");
            ROOT.setFocus(Pane::VBox::Buttons::Buy);
        }

        if (!sell)
        {
            var enough = main::game.isEnoughMoney(price);
            var can_buy = enough && !(showroom && main::menu::MCarData::NotForSell(cg.getCarLabel()));
            Pane::VBox::Money.active = !enough;
            Pane::VBox::Buttons::Buy.insensitive = !can_buy;
        }
        else
        {
            Pane::VBox::Money.active = false;
            Pane::VBox::Buttons::Buy.insensitive = false;
        }

        ROOT.setFocus(Pane::VBox::Buttons::Cancel);
    }

    function open(context, car, sellmode, catalogmode, showroommode)
    {
        if (sellmode == nil)
            sellmode = false;

        if (catalogmode == nil)
            catalogmode = false;

        if (showroommode == nil)
            showroommode = false;

        sell = sellmode;
        catalog = catalogmode;
        showroom = showroommode;
        
        context.cursor_visible = false;

        if (catalogmode)
        {
            current_gcar = nil;
            current_car = car;
        }
        else
        {
            current_gcar = car;
            current_car = nil;
        }

        Pane.actor.destinationY = PS2_SCREEN_H_F;
        Pane.actor.out = true;
        Pane.actor.warp();

        ROOT.actor.out = true;
        ROOT.actor.warp();
        context.pushPage(ROOT);

        Pane.actor.out = false;
        ROOT.actor.out = false;
        context.sync(0.5);
        context.cursor_visible = true;
        context.getUpdateContext().enterEventLoop();

        sell = nil;
        catalog = nil;
        current_car = nil;
        current_gcar = nil;
        return result;
    }

    function close(context)
    {
        context.cursor_visible = false;

        if (result)
            Pane.actor.destinationY = -Pane.h;
        else
            Pane.actor.destinationY = PS2_SCREEN_H_F;

        Pane.actor.out = true;
        ROOT.actor.out = true;
        context.sync(0.5);
        context.closePage(ROOT);

        context.getUpdateContext().leaveEventLoop();
        context.cursor_visible = true;
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        result = false;
        close(context);
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Pane::VBox::Buttons::Cancel
{
    function onActivate(context)
    {
        main::sound.play("cancel");
        result = false;
        close(context);
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Pane::VBox::Buttons::Buy
{
    function onActivate(context)
    {
        if (!sell)
            main::sound.play("buy");
        else
            main::sound.play("ok");
            
        result = true;
        close(context);
        return EVENTRESULT_FILTER;
    }
}