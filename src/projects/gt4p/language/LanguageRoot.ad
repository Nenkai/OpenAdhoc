module PROJECT::ROOT
{
	function addActor(widget)
	{
		widget.actor = main::menu::MBlinkActor(widget);
		widget.actor.period = 0.2;
	}
	
	
	function onLoad(context)
	{
		addActor(BR::bga);
		addActor(FR::bga);
		addActor(GR::bga);
		addActor(IT::bga);
		addActor(SP::bga);
	}
	
	
	function onInitialize(context)
	{
		if (main::menu::MSystem::GetRegionCode() == "us")
			LanguageRoot.setFocus(LanguageRoot::BR);
		else
		{
			var lang = main::menu::MSystem::GetLanguage();
			LanguageRoot.setFocus(LanguageRoot[lang]);
		}
	}
	
	
	function onCancel(context, item)
	{
		main::sound.play("disabled");
		return EVENTRESULT_FILTER;
	}

	function on_activate(context, item)
	{
		main::sound.play("next");
		var focused_actor = item["bga"].actor;
		focused_actor.period = 0.1;
		focused_actor.rewind();
		context.sync(0.25);
		item["bga"].alpha = 1.0;
		context.sync();
		var lang = item.name;
		main::menu::MSystem::SetLanguage(lang);
		main::game.next_menu_project = main::FirstProject;
		context.transition = main::menu::MColorTransition();
		context.transition.panOut(context);
		context.transition.syncOut(context);
		context.finish();
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::BR
{
	function onActivate(context, item)
	{
		on_activate(context, item);
	}
}

module PROJECT::ROOT::FR
{
	function onActivate(context, item)
	{
		on_activate(context, item);
	}
}

module PROJECT::ROOT::GR
{
	function onActivate(context, item)
	{
		on_activate(context, item);
	}
}

module PROJECT::ROOT::IT
{
	function onActivate(context, item)
	{
		on_activate(context, item);
	}
}

module PROJECT::ROOT::SP
{
	function onActivate(context, item)
	{
		on_activate(context, item);
	}
}