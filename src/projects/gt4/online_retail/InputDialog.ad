module PROJECT::ROOT
{
    static result = nil;
    static sType  = 0;

    static original_y = Dialog.y;

    function setFadeActor(widget)
    {
        var actor = main::menu::MFadeActor(widget, 1.0);
        actor.repeat = true;
        actor.period = 0.25;
        widget.actor = actor;
    }

    setFadeActor(Dialog::Buttons::OK::bgf);
    setFadeActor(Dialog::Buttons::Cancel::bgf);

    function open_motion(context)
    {
        Dialog.y = PS2_SCREEN_H_F;
        Dialog.opacity = 0.0;

        context.pushPage(InputDialog);

        while (!Dialog.interpolateY(original_y, 0.2))
        {
            var diff = (1.0 - Dialog.opacity);
            Dialog.opacity = Dialog.opacity + (diff * 0.1);
            context.sync();
        }

        Dialog.opacity = 1.0;
    }

    function close_motion(context)
    {
        var target;
        if (result != nil)
            target = -Dialog.h;
        else
            target = PS2_SCREEN_H_F;

        Dialog.opacity = 1.0;

        while (!Dialog.interpolateY(target, 0.2))
        {
            var diff = (0.0 - Dialog.opacity);
            Dialog.opacity = Dialog.opacity + (diff * 0.3);
            context.sync();
        }

        Dialog.opacity = 0.0;
        context.closePage(InputDialog);
    }

    function open(context, type, title, root)
    {
        sType = type;

        if (title != nil)
        {
            if (root != nil)
                Dialog::Title::title.text = context.translate(InputDialog, title);
            else
                Dialog::Title::title.text = title;
        }

        Dialog::Buttons::OK.visible     = true;
        Dialog::Buttons::Cancel.visible = true;

        switch (type)
		{
			case 0:
				Dialog::Message::Name.visible      = true;
				Dialog::Message::Password0.visible = false;
				Dialog::Message::Password1.visible = false;
				Dialog::Message::Name::label.text = "Name";
				break;
				
			case 1:
				Dialog::Message::Name.visible      = false;
				Dialog::Message::Password0.visible = true;
				Dialog::Message::Password1.visible = true;
				Dialog::Message::Password0::label.text = "Old Password";
				Dialog::Message::Password1::label.text = "New Password";
				break;
		}
        open_motion(context);

        switch (type)
		{
			case 0:
				InputDialog.setFocus(Dialog::Message::Name::input);
				break;
				
			case 1:
				InputDialog.setFocus(Dialog::Message::Password0::input);
				break;
		}
        result = nil;
        context.getUpdateContext().enterEventLoop();
		return result;
    }

    function close(context)
    {
        InputDialog.setFocus(nil);
        close_motion(context);
        context.getUpdateContext().leaveEventLoop();
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        result = nil;
        close(context);
		return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Dialog::Buttons::OK
{
    function onActivate(context, event, item)
    {
        main::sound.play("ok");

        if (InputDialog::sType)
        {
            var oldp = InputDialog::Dialog::Message::Password0::input.value;
            var newp = InputDialog::Dialog::Message::Password1::input.value;

            result = [];
            result.push(oldp);
            result.push(newp);
        }
        else
        {
            result = InputDialog::Dialog::Message::Name::input.value;
        }

        close(context);
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Dialog::Buttons::Cancel
{
    function onActivate(context, event, item)
    {
        main::sound.play("ok");
        result = nil;
        close(context);
        return EVENTRESULT_FILTER;
    }
}