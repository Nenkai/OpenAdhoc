













module ROOT
{
    attribute license_idx;
    attribute popup;
    attribute closed;

    method open(context, license_idx)
    {
        self.license_idx = license_idx;
        self.closed = false;
        self.popup = main::SequenceUtil::ModalPage(context, ROOT);
        self.popup.open();

        PROJECT.PlayMenuBGM(context, ROOT);
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;

        ScalarInterpolator.on_effect_end = function (context)
        {
            if (ROOT.popup != nil)
            {
                ROOT.popup.close();
                ROOT.popup = nil;
            }
        }

        ScalarInterpolator.reverse = true;
        ScalarInterpolator.restart();
    }

    method abort(context)
    {
        if (ROOT.popup != nil)
        {
            ROOT.popup.close();
            ROOT.popup = nil;
        }
    }

    function onLoad(update_context) { }
    function onUnload(update_context) { }

    method onInitialize(context)
    {
        ContextMain.disableInput();
        on_initialize_info(context);
    
    }

    method on_initialize_info(context)
    {
        var widget_list = [
            Card_AB,
            Card_AB,
            Card_iAiB,
            Card_iAiB,
            Card_S,
        ];

        var get_key_list = [
            "LICENSE_B_GET",
            "LICENSE_A_GET",
            "LICENSE_IB_GET",
            "LICENSE_IA_GET",
            "LICENSE_S_GET",
        ];

        var available_key_list = [
            "CLASS_B_AVAILABLE",
            "CLASS_A_AVAILABLE",
            "CLASS_IB_AVAILABLE",
            "CLASS_IA_AVAILABLE",
            "CLASS_S_AVAILABLE",
        ];

        GAME_STATUS.user_profile.career_mode_license = ["B", "A", "IB", "IA", "S"][self.license_idx];
        Message.text = manager.translate("CommonGTMode", get_key_list[self.license_idx]);
        Message0.text = manager.translate("CommonGTMode", available_key_list[self.license_idx]);

        Message0.ScalarInterpolator.on_effect_end = function(context)
        {
            ContextMain.enableInput();
        };

        var idx = 0;
        foreach (var w in widget_list)
        {
            w.visible = false;
            idx++;
        }

        idx = 0;
        foreach (var w in widget_list)
        {
            if (idx == self.license_idx)
            {
                setInfo(context, w.cardRef, idx);
                setInfo(context, w.cardMain, idx);
                w.visible = true;
            }

            idx++;
        }

        SoundUtil::MenuBGMCrossfadeGroup("license_get", 0.0, 0.0, SoundUtil::REPEAT_OFF);
        var from = "license_%s".format(GAME_STATUS.user_profile.career_mode_license);
        Grim2Util::PUTLOG::CURRENT::status(from);
    }

    function setInfo(context, w, idx)
    {
        var title_key_list = [
            "B_CLASS",
            "A_CLASS",
            "IB_CLASS",
            "IA_CLASS",
            "S_CLASS",
        ];

        w.TextFace.text = manager.translate("CommonGTMode", title_key_list[idx]);

        var residence = GAME_STATUS.user_profile.residence;
        w.TextFace0.text = residence.getPlayerFirstName() + " " + residence.getPlayerLastName();

        var color_widget_list = [
            hidden.Color_B,
            hidden.Color_A,
            hidden.Color_iB,
            hidden.Color_iA,
            hidden.Color_S,
        ];

        if (idx < 2)
            w.FrameImageFace0.face_color = color_widget_list[idx].face_color;
        else if (idx < 4)
            w.FrameImageFace.face_color = color_widget_list[idx].face_color;

        if (idx < 4)
        {
            w.ImageFace0.visible = false;
            w.ImageFace1.visible = false;

            if (idx % 2)
                w.ImageFace1.visible = true;
            else
                w.ImageFace0.visible = true;
        }
    }

    method onFinalize(context)
    {
        context.cursor_visible = true;
    }

    method onActivate(context)
    {
        sound.play("ok");
        close(context);
        return EVENTRESULT_FILTER;
    }

    hidden.visible = false;
}