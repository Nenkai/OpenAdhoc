module PROJECT::ROOT
{
    static current_unit = nil;
	
    function onInitialize(context)
    {
        hidden.visible = false;

        var quick_work = main::menu::MQuickWork();
        var license_code = quick_work.raceLabel;
        var unit = main::game.license_record.getUnit(license_code);

        if (unit == nil)
            return;

        current_unit = unit;
        Title::cat.text = context.translate(ROOT, "LicenseName", license_code.substr(0, 3) + "0000");
        Title::cat.adjustScale();
        Title::det.text = context.translate(ROOT, "LicenseName", license_code);
        Title::det.adjustScale();

        refresh(context);
    }

    function onFinalize(context)
    {
        ScrollBox::SelectBox.clearWindow(context);

        current_unit = nil;
    }

    function onKeyPress(context, event)
    {
        switch (event.keysym)
        {
            case PS2_PAD_CTRL_START:
			{
                main::sound.play("return");
                PasscodePopup::open(context, current_unit, ScrollBox::SelectBox.index);
                return EVENTRESULT_FILTER;
				break;
			}
			
        }

        return EVENTRESULT_CONTINUE;
    }

    function onCancel(context, event, item)
    {
        main::sound.play("cancel");
        start_page(context, LicenseRoot);
        return EVENTRESULT_FILTER;
    }

    function refresh(context)
    {
        var unit = current_unit;
        var rank_num = unit.getRankNum();

        ScrollBox::SelectBox.clearWindow(context);

        for (var i = 0; i < 10; i++)
        {
            var item = i % 2 == 0 ? hidden::Item0.doCopy() : hidden::Item1.doCopy();
            item["rank"].text = (i + 1).toString();

            if (i < rank_num)
            {
                var result = unit.getResult(i);
                if (result != "NONE")
                    item["result"].image_path = "image/gtmode/license/" + result + ".png";

                item["date"].text = unit.getDate(i);
                item["time"].text = unit.getBestTime(i);
            }

            ScrollBox::SelectBox.appendChild(context, item);
        }
    }
}

module PROJECT::ROOT::ScrollBox::SelectBox
{
    function onValueChanged(context, index) {   }

    function onActivate(context, event)
    {
        var unit = current_unit;
        var rank_num = unit.getRankNum();
        var index = SelectBox.index;

        if (index >= rank_num) 
            return EVENTRESULT_FILTER;
        
        main::sound.play("ok");

        if (openConfirmDialog(context, DIALOG_QUERY, context.translate(ROOT, "do you remove?")))
        {
            current_unit.deleteEntry(SelectBox.index);
            ROOT.visible = false;
            SelectBox.outFocus(ROOT);
            refresh(context);
            SelectBox.callFocus(ROOT);
            ROOT.visible = true;
        }

        return EVENTRESULT_FILTER;
    }
}