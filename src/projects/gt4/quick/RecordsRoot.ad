module QuickProject::RecordsRoot
{
	static current_racecode = nil;

	function setActor(widget)
	{
		var actor = main::menu::MFadeActor(widget, 0.25);
		actor.repeat = 1;
		actor.velocity = 0.02;
	
		widget.actor = actor;
		widget.actor.rewind();
	}


	function onInitialize(context)
	{
		main::sound.startStream("pcm", "result");
	
		var quick_work = main::menu::MQuickWork();
		current_racecode = quick_work.raceLabel;
	
		var license = main::game.license.getUnit(current_racecode);
	
		Title.text = StoreHouse::Title["title_" + current_racecode].value;
		MaxPoint::Point.text = "%04d".format(license.getMaxPoint());
	
		for (var i = 0; i < 10; i++)
		{
			var record = StoreHouse::Record.getDeepCopy();
	
			record["Rank"].text = (i + 1).toString();
			record["Time"].text = license.getBestTime(i);
			record["Name"].text = license.getEntryName(i);
			record["Date"].text = license.getDate(i);
	
			ScrollBox::SelectBar.appendChild(context, record);
			setActor(record["bga"]);
		}
	
		ScrollBox::dec_arrow::bg.actor = main::menu::MBlinkActor(ScrollBox::dec_arrow::bg);
		ScrollBox::dec_arrow::bg.actor.period = 0.25;
	
		ScrollBox::inc_arrow::bg.actor = main::menu::MBlinkActor(ScrollBox::inc_arrow::bg);
		ScrollBox::inc_arrow::bg.actor.period = 0.25;
	}


	function onFinalize(context)
	{
		ScrollBox::SelectBar.clearChildren(context);
	}


	function onCancel(context, event, item)
	{
		main::sound.play("cancel");
	
		context.transition = main::menu::MColorTransition();
		context.transition.panOutIn(context);
		context.transition.syncOut(context);
	
		main::game.menu_result = "loop";
	
		context.finish();
	
		return EVENTRESULT_FILTER;
	}
}

module QuickProject::RecordsRoot::ScrollBox::SelectBar
{

	function onValueChanged(context, index)
	{
		var fw = SelectBar.getFocusedWidget();

		fw = fw["bga"];
	
		if (fw != nil && fw.actor != nil)
			fw.actor.rewind();
			main::sound.play("cursor");
	}


	function onActivate(context, event, item)
	{
		var index = SelectBar.index;
		var license = main::game.license.getUnit(current_racecode);
		var num = license.getRankNum();
	
		if (index >= num)
			main::sound.play("disable");
		else
		{
			main::sound.play("ok");
			PasscodePopup::open(context, license, index);
		}
	
		return EVENTRESULT_FILTER;
	}
}