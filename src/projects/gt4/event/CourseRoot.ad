module PROJECT::ROOT
{
	static race_crs_list = [];
	race_crs_list.push("assisi");
	race_crs_list.push("capri");
	race_crs_list.push("fisco");
	race_crs_list.push("grandcanyon");
	race_crs_list.push("hongkong");
	race_crs_list.push("newyork");
	race_crs_list.push("nurburgring");
	race_crs_list.push("tsukuba");
	
	static photo_crs_list = [];
	photo_crs_list.push("ss_sagano");
	photo_crs_list.push("ss_sanmarco");
	photo_crs_list.push("ss_shibuya");
	photo_crs_list.push("ss_tsumago");
	
	static crs_list = nil;
	static current_crs = nil;

	function onInitialize(context)
	{
		if (GameRoot::current_game == "PhotoMode")
			crs_list = photo_crs_list;
		else
			crs_list = race_crs_list;
	
		var num = crs_list.size;
		var initial_index = 0;
	
		for (var i = 0; i < num; i++)
		{
			var crs = crs_list[i];
			var crsitem = StoreHouse::CrsOption.doCopy();
			crsitem["text"].text = crs;
	
			CourseOption::popup.appendChild(context, crsitem);
	
			if (current_crs != nil && current_crs == crs)
				initial_index = i;
		}
	
		CourseOption.applyAppend(context);
		CourseOption.setIndex(initial_index);
	}


	function onFinalize(context)
	{
		CourseOption::popup.clearChildren(context);
	}
	
	function getCurrentCourse()
	{
		return current_crs;
	}
	
	function onCancel(context, item)
	{
		main::sound.play("cancel");
		current_crs = nil;
		context.transition.panOutIn(context);
		context.transition.syncOut(context);
		context.startPage(GameRoot);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::CourseOption
{
	function onValueChanged(context, index)
	{
		main::sound.play("ok");
		current_crs = CourseOption["selected_item"]["text"].text;
		context.sync(0.25);
		context.transition.panOutIn(context);
		context.transition.syncOut(context);
	
		if (GameRoot::isSkipMethod())
			context.startPage(CarRoot);
		else
			context.startPage(MethodRoot);
	
		return EVENTRESULT_FILTER;
	}
}