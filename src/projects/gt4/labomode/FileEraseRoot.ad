module LaboModeProject::FileEraseRoot
{
	static playlist = main::menu::MMemoryCardPlayList();

	function onInitialize(context)
	{
		enterPage(context, FileEraseRoot, hidden::Title::title.doCopy());
	
		FileEraseRoot.appendChild(
			context,
			Template::Normal::Scroll.doCopy()
		);
	
		selectFolder_ = 2;
		hidden.visible = false;
	
		hideReplayItem(FileEraseRoot);
		hidePhotoItem(FileEraseRoot);
	
		init(context);
	
		Template::setExitActivate(commandExit);
		Template::setOptionActivate(commandOption);
	}

	function onFinalize(context)
	{
		var scroll = FileEraseRoot["Scroll"];
		if (scroll != nil)
			FileEraseRoot.removeChild(context, scroll);
	
		leavePage(context, FileEraseRoot);
	}
	
	function exit(context)
	{
		start_page(context, SaveReplayRoot);
	}

	function init(context)
	{
		context.cursor_visible = 1;
	
		initCommon(context, FileEraseRoot);
		initList(context);
		initFolders(context);
		initCommands(context);
	
		manager = nil;
	
		var slot = currentSlot();
		switch(selectFolder_)
		{
			case 0:
			{
				manager = main::menu::MMemoryCardManager("MODE_LOAD_PHOTO_FILM", slot);
				break;
			}
			case 1:
			{
				manager = main::menu::MMemoryCardManager("MODE_LOAD_PHOTO_PICTURE", slot);
				break;
			}
			case 2:
			{
				manager = main::menu::MMemoryCardManager("MODE_LOAD_REPLAY", slot);
				break;
			}
		}
		manager.start();
	}


	function currentSlot()
	{
		return main::game.option.replay_memory_card_slot;
	}
	
	static folders_ = ["Film", "Photo", "Replay"];

	function initFolders(context)
	{
		initFolderCommon(context, folders_);
	
		switch(selectFolder_)
		{
			case 0:
			{
				folderTipMultiple = context.translate(FileEraseRoot, "Film_n_pictures");
				folderTipSingle   = context.translate(FileEraseRoot, "Film_1_picture");
				break;
			}
			case 1:
			{
				folderTipMultiple = context.translate(FileEraseRoot, "Photo_n_pictures");
				folderTipSingle   = context.translate(FileEraseRoot, "Photo_1_picture");
				break;
			}
			case 2:
			{
				folderTipMultiple = context.translate(FileEraseRoot, "Replay_n_movies");
				folderTipSingle   = context.translate(FileEraseRoot, "Replay_1_movie");
				break;
			}
		}
	}

	function commandOption(context)
	{
		print("option!");
		var slot = currentSlot();
		ReplaySlotDialog::open(context);
		if (slot != currentSlot())
			init(context);
	}
	
	function commandExit(context)
	{
		print("exit");
		exit(context);
	}
	
	function initCommands(context)
	{
		var coms = [["Trash", commandTrash, 2]];
		initCommandCommon(context, coms);
	}

	function initList(context)
	{
		initListCommon(context,(selectFolder_ == 2) ? hidden::ReplayItem : hidden::PhotoItem);
	}

	function setupWidget(context, i, w)
	{
		switch(selectFolder_)
		{
			case 0:
			{
				w["Icon"]["bg_film"].visible = 1;
				break;
			}
			case 1:
			{
				w["Icon"]["bg_photo"].visible = 1;
				break;
			}
			case 2:
			{
				setupWidgetReplay(context, i, w);
				return;
			}
		}
		setupWidgetCommon(context, i, w);
		return;
	}
}