













module Template::RaceMenu::Item
{
    attribute icon;

    method canPress(flg)
    {
        if (self == nil)
            return;

        self.image.visible = flg;
        self.imagei.visible = !flg;
        self.bar.visible = !flg;
    }
}

module Template::QuickMenu::Item
{
    attribute icon;
}

module Template::StartingGridBoard::Entry::No
{
    attribute currentGameMode;

    method setBg(game_mode)
    {
        if (game_mode == self.currentGameMode)
            return;

        self.currentGameMode = game_mode;
        var color = -1;

        switch (game_mode)
        {
            case gtengine::GameMode::SINGLE_RACE:
            case gtengine::GameMode::ONLINE_SINGLE_RACE:
            case gtengine::GameMode::TIME_ATTACK:
                color = 1;
                break;

            case gtengine::GameMode::ONLINE_TIME_ATTACK:
            case gtengine::GameMode::ONLINE_BATTLE:
                color = 2;
                break;

            case gtengine::GameMode::EVENT_RACE:
                color = 0;
                break;
        }

        self.red.visible = color == 0;
        self.gray.visible = color == 1;
        self.basic_black.visible = color == 2;
    }
}

module Template::ResultBoard::Board
{
    attribute first_animation;

    method startAnimation(context, start_duration)
    {
        Thread(function(context) {
            Thread::Sleep(start_duration);
            Board.beginHeaderAnimation(context);
        }).start();

        yield;
    }

    method beginGridAnimation(context)
    {
        var header = self.Header;
        var listbox = self.ListBox;
        header.InformationTitle.text = "STARTI";
        header.InformationTitle::Opacity.setStartDuration(0, 0);
        header.InformationTitle::Opacity.setEndDuration(1, 0);

        if (first_animation)
        {
            header.InformationTitle::Opacity.setInterpolationPeriod(0, 0);
            first_animation = false;
        }

        var list = [
            header.InformationTitle::Opacity
        ];

        foreach (var a in list)
            a.restart();

        var start_duration = 0.0;
        for (var i = 0; i < listbox.getItemCount(); i++)
        {
            var w = listbox.getItemWidget(i, context);
            w.Actors::Rotate3D.setStartDuration(0, start_duration);
            w.Actors::Opacity.setStartDuration(0, start_duration);
            w.Actors.restart();
            start_duration += 0.2;
        }
    }

    method beginHeaderAnimation(context)
    {
        self.first_animation = true;
        var header = self.Header;
        var text_info = self.Info::TextInfo;

        var list = [
            header.bg::Opacity,
            header.Color::base::EffectWipe::WipeProgress,
            header.Color::left_edge::Opacity,
            header.InformationTitle::Opacity,
            header.EventTitle::Opacity,
            header.ModeLogo::ParallelActor,
            text_info.Opacity,
        ];

        foreach (var a in list)
            a.restart();

        text_info.Opacity.on_effect_end = function(context)
        {
            text_info.Opacity.on_effect_end = nil;
            beginGridAnimation(context);
        };
    }
}