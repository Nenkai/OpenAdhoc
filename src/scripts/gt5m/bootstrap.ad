//---------------------------------------------------------------------------------------
// bootstrap.ad
//
//
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module ::main
{
    static PROJECT_ROOT_DIR;
    static MGOM;
    static PDINetwork;

    static manager;
    static sound;
    static dialog_project;

    static ORG;
    static RaceOperator;

    main::after_boot_project = "arcade";

    module main::menu
    {
        class EventLoop
        {
            attribute context;
            attribute level = -1;

            method __init__(context)
            {
                self.context = context;
            }

            method enter()
            {
                if (level == -1)
                    context.getUpdateContext().enterEventLoop(&level);
            }

            method leave()
            {
                if (level >= 0)
                {
                    context.getUpdateContext().leaveEventLoop(level);
                    level = -1;
                }
            }
        }
    }


    function GetDisplayVersionString()
    {
        var text = "%{main::pdiext::MProductInformation::GetPDIVersion()}.%{main::pdiext::MProductInformation::GetProductVersion()}"
        return text;
    }

    function GetVersionBranch()
    {
        var branch = pdiext::MProductInformation::GetVersionBranch();
        if (AppOpt["branch"] != nil)
            branch = AppOpt["branch"];
        return branch;
    }

    static is_environment_local = -1;
    function isEnvironmentLocal()
    {
        if (is_environment_local != -1)
            return is_environment_local;
        else if ((main::AppOpt.defined("fsroot") && main::AppOpt["fsroot"].find("mtarget") >= 0) || 
                 main::pdiext::MProductInformation::GetVersionEnvironment().beginsWith("local"))
        {
            is_environment_local = true;
            return true;
        }
        else
        {
            is_environment_local = false;
            return false;
        }
    }
}

function initModules()
{
    module main::pdistd 
    {
        require "pdistd";
    }

    module main::pdiext 
    {
        require "pdiext";
    }

    module main::menu 
    {
        require "menu";
        require "gtmenu";
        menu::ScreenWidth = PSP_SCREEN_W;
        menu::ScreenHeight = PSP_SCREEN_H;
    }

    module main::gtengine 
    {
        require "gtengine";
    }

    module main::pdiapp 
    {
        require "pdiapp";
    }
}

module main::AppOpt {}

function initArgs()
{
    var args = pdistd::GetArgs();
    args.shift();
    foreach (var arg in args)
    {
        var pair = arg.split("=");
        if (pair.size >= 2)
            main::AppOpt.defineStatic(pair[0], pair[1]);
        else
            main::AppOpt.defineStatic(pair[0], true);
    }
}

function initSpecDB()
{
    var specdb = AppOpt["specdb"];
    gtengine::MSpecDB::initialize(specdb);
}

function initMenuSystem()
{
    var product_dir;
    switch (main::GetVersionBranch())
    {
        case "mviewer":
            main::PROJECT_ROOT_DIR = "projects/devm";
            product_dir = "devm";
            break;

        default:
            main::PROJECT_ROOT_DIR = "projects/gt5";
            product_dir = "gt5m";
            break;
    }

    module main {
        require "/products/%{product_dir}/script/MenuClassDefine";
    }


    main::sound = pdistd::MSound();

    main::MGOM = main::menu::MMenuGameObjectManager();
    main::MGOM.setProjectRoot(main::PROJECT_ROOT_DIR);
    main::MGOM.initialize();
}

function initNetwork()
{
    main::PDINetwork = main::pdistd::MPDINetwork();
}

function execBoot()
{
    initModules();
    initArgs();
    initSpecDB();
    initMenuSystem();
    initNetwork();
}