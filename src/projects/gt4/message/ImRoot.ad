module PROJECT::ROOT
{
// Widget names
#ifdef GT4O_US_BETA
	#define TITLE_NAME SetupWindow::Title::input
	#define INPUT_NAME SetupWindow::Input::input
#else
	#define TITLE_NAME Name::input
	#define INPUT_NAME InputBox::input
#endif

	static sId = -1;

#ifdef GT4O_US_BETA
	static sIsOpenNow = nil;
	
	function onLoad(context)
	{
		setDialogMoveActorV(SetupWindow);
	}
#endif

	function open(context, id, name)
	{
#ifdef GT4O_US_BETA
		sIsOpenNow = true;
#endif

		if (name == nil)
			name = "";
	
		sId = -1;
	
#ifdef GT4O_US_BETA
		var tbox = SetupWindow::vertical::tbox;
		tbox.clear();

		var pipe = main::network.imOpen();
		tbox.pipe = pipe;
#else
		ScrollBox::tbox.clear();

		var pipe = main::network.imOpen();
		ScrollBox::tbox.pipe = pipe;
#endif

		if (main::network.imHaveMessage())
		{
			|sId, name| = main::network.imGetUser();
		}
		else
		{
			if (id != nil)
			{
				sId = id;
			}
		}
	
		main::sound.play("ok");

#ifndef GT4O_US_BETA
		ROOT.y = PS2_SCREEN_H_F;
#endif

		context.pushPage(ROOT);
	
		if (sId < 0)
		{
			TITLE_NAME.insensitive = false;
			ROOT.setFocus(TITLE_NAME);
		}
		else
		{
			TITLE_NAME.value = name;
			TITLE_NAME.insensitive = true;
			ROOT.setFocus(INPUT_NAME);
		}
	
#ifdef GT4O_US_BETA
		SetupWindow.actor.out = false;
		context.sync(0.25);
#else
		while (!ROOT.interpolateY(0.0, 0.3))
		{
			context.sync();
		}
#endif

		var update_context = context.getUpdateContext();
		update_context.enterEventLoop();
	}

	function close(context)
	{
#ifdef GT4O_US_BETA
		main::sound.play("cancel");
	
		var name = SetupWindow::Title::input.value;
	
		if (name != "" && sId >= 0)
		{
			var endmes = context.translate(ROOT, "OPPONENT_CLOSE").build(main::network.my_name);
			main::network.imSend(endmes, name, sId, "IM_LEFT");
		}
#endif

		main::network.imClose();

#ifdef GT4O_US_BETA
		sIsOpenNow = false;
		SetupWindow.actor.out = true;
		context.sync(0.25);
#else
		main::sound.play("cancel");
		while (!ROOT.interpolateY(PS2_SCREEN_H_F, 0.3))
		{
			context.sync();
		}
#endif

		context.closePage(ROOT);
	
		var update_context = context.getUpdateContext();
		update_context.leaveEventLoop();
	}

#ifdef GT4O_US_BETA
	function isOpenNow()
	{
		return sIsOpenNow != nil && sIsOpenNow;
	}

	function forcedClose(context)
	{
		if (isOpenNow())
		{
			var event = main::menu::MScriptEvent(context, ROOT, "onCancel");
			context.pushEvent(event);
		}
	}
#endif

	function onInitialize(context)
	{
	}
	
#ifdef GT4O_US_BETA
	function onFinalize(context)
	{
		sIsOpenNow = nil;
	}
#endif
	
	function onCancel(context)
	{
		close(context);
		return EVENTRESULT_FILTER;
	}

#ifdef GT4O_US_BETA
	function onKeyPress(context, event)
	{
		var keysym = event.keysym;
		switch (keysym)
		{
			case PS2_PAD_CTRL_L2:
				close(context);
				return EVENTRESULT_FILTER;

			case PS2_PAD_CTRL_R3_UP:
				var res = SetupWindow::vertical::tbox.scroll(-3);
				main::sound.play(res ? "cursor" : "disable");
				return EVENTRESULT_FILTER;

			case PS2_PAD_CTRL_R3_DOWN:
				var res = SetupWindow::vertical::tbox.scroll(3);
				main::sound.play(res ? "cursor" : "disable");
				return EVENTRESULT_FILTER;
		}

		return EVENTRESULT_CONTINUE;
	}
#endif
}

module PROJECT::ROOT::INPUT_NAME
{
#ifdef GT4O_US_BETA
    #define NAME_WIDGET_PATH SetupWindow::Title::input
#else
	#define NAME_WIDGET_PATH ROOT::Name::input
#endif

	function onConfirmed(context, str)
	{
		var name = NAME_WIDGET_PATH.value;
	
		if (name == "")
		{
#ifdef GT4O_US_BETA
			openConfirmDialog(context,DIALOG_OK, context.translate(ROOT, "INPUT_NAME_FIRST"));
#else
			openConfirmDialog(context,DIALOG_OK, "input name first!");
#endif
			ROOT.setFocus(NAME_WIDGET_PATH);
			return;
		}
	
		if (sId < 0)
		{
			var id = main::network.accountName2AccountID(name);
#ifdef GT4O_US_BETA
			var id2 = main::network.accountIsOnline(name);
			if (id < 0 || id2 < 0)
			{
				var s_name = NAME_WIDGET_PATH.sanitized_value;
				openConfirmDialog(context, DIALOG_ERROR, context.translate(ROOT, "NO_SUCH_USER").build(s_name));
				ROOT.setFocus(NAME_WIDGET_PATH);
				return;
			}
#else
			if (id < 0)
			{
				openConfirmDialog(context, DIALOG_OK, "There is no user named %s or not online".format(name));
				ROOT.setFocus(NAME_WIDGET_PATH);
				return;
			}
#endif
	
			sId = id;
		}
	
		var ret = main::network.imSend(str, name, sId);
		if (!ret)
#ifdef GT4O_US_BETA
			openConfirmDialog(context, DIALOG_OK, context.translate(ROOT, "FAILED_TO_SEND_MESSAGE"));
#else
			openConfirmDialog(context, DIALOG_OK, "Failed to send message");
#endif

		NAME_WIDGET_PATH.insensitive = true;
	}
}