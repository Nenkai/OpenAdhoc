module ROOT
{
    hidden.visible = false;

    attribute closed;
    attribute popup;

    method open(context)
    {
        self.closed = false;
        self.popup = main::SequenceUtil::ModalPage(context, ROOT);

        self.popup.open();

        return true;
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;
        ContextMain.event_mask = 0x05;
        ContextMain.disableInput();

        DetailPopup2::FadeActor.on_effect_end = function (context)
        {
            if (ROOT.popup != nil)
            {
                ROOT.popup.close();
                ROOT.popup = nil;
            }

            ContextMain.enableInput();
        }

        DetailPopup2::FadeActor.out = true;
    }

    method onInitialize(context)
    {
        var adj = menu::MAdjustment();
        DetailPopup2::Pane::Body::ListBox.h_adjustment = adj;
        DetailPopup2::Pane::Body::HScrollbar.adjustment = adj;

        DetailPopup2::Pane::Body::ListBox.setItemTemplate(context, hidden::Item);
        DetailPopup2::Pane::Body::ListBox.setItemCount(DriverUtil::WEAR_MAX);

        DetailPopup2::Pane::Body::ListBox.focus_index = DriverUtil::getIndex(GAME_STATUS.user_profile.context.avatar_body_id);

        updateIndex(context);
        ROOT.setFocus(DetailPopup2::Pane::Footer::HBox::Next);

        return EVENTRESULT_FILTER;
    }

    method onFinalize(context)
    {

    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        ROOT.setFocus(DetailPopup2::Pane::Footer::HBox::Close);

        return EVENTRESULT_FILTER;
    }

    method updateIndex(context)
    {
        DetailPopup2::Pane::Body::Color::TextFace.text = "%d / %d".format(DetailPopup2::Pane::Body::ListBox.focus_index + 1, DriverUtil::WEAR_MAX);
    }

    module DetailPopup2::Pane
    {
        module Body::ListBox
        {
            method onVisibleNotify(context, indices)
            {
                foreach (var i in indices)
                {
                    if (self.getItemVisible(i))
                    {
                        var item = self.getItemWidget(i);

                        if (item == nil)
                        {
                            var item = self.getItemWidget(i, context);
                            item.initialize(context, i);
                        }

                        else
                        {

                        }
                    }
                }
            }    
        } 

        module Footer::HBox
        {
            method onFocusEnter(context, event)
            {    
                var w = event.widget;
                var text = w.name.upcase();

                if (text != "CLOSE")
                {
                    var localized_text = context.translate(ROOT, "MyHome", text);
                    BalloonTip.set_value(context, w, localized_text, 0);
                }

                return EVENTRESULT_FILTER;
            }

            method onFocusLeave(context)
            {
                BalloonTip.reset_value();

                return EVENTRESULT_FILTER;
            }

            module Previous
            {

                method onActivate(context)
                {
                    main::sound.play("ok");

                    if (Body::ListBox.focus_index > 0)
                    {
                        --Body::ListBox.focus_index;
                        ROOT.updateIndex(context);
                    }

                    return EVENTRESULT_FILTER;
                }    
            }

            module Next
            {
                method onActivate(context)
                {
                    main::sound.play("ok");

                    if (Body::ListBox.focus_index < DriverUtil::WEAR_MAX - 1)
                    {
                        ++Body::ListBox.focus_index;
                        ROOT.updateIndex(context);
                    }

                    return EVENTRESULT_FILTER;
                }    
            }

            module Close
            {
                method onActivate(context)
                {
                    var avatar_body_id = DetailPopup2::Pane::Body::ListBox.focus_index;

                    if (avatar_body_id < 0)
                    {
                        return EVENTRESULT_FILTER;
                    }

                    main::sound.play("ok");

                    if (!QUERY(context, ROOT, "QUERY_DRIVER_SELECT"))
                    {
                        return EVENTRESULT_FILTER;
                    }

                    var new_id = DriverUtil::getColorId(avatar_body_id);

                    if (new_id != GAME_STATUS.user_profile.context.avatar_body_id)
                    {
                        GAME_STATUS.user_profile.context.avatar_body_id = new_id;

                        var aspec_dp = GAME_STATUS.user_profile.residence.referPlayer();
                        aspec_dp.head_color_code = new_id;
                        aspec_dp.body_color_code = new_id;

                        ROOT.close(context);
                    }

                    else
                    {
                        ROOT.close(context);
                    }

                    return EVENTRESULT_FILTER;
                }    
            }
        }
    }

    module hidden::Item
    {
        method initialize(context, index)
        {
            var avatar_body_id = DriverUtil::getColorId(index);
            ImageFace.image_path = "piece/avatar_body/%{avatar_body_id}.img";
        }    
    }
}