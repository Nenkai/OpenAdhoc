module PROJECT::ROOT
{
    ScrollBox::tbox.pipe = main::shell.pipe;

    function open(context)
    {
        main::sound.play("ok");
        ROOT.y = PS2_SCREEN_H_F;
        context.pushPage(ROOT);
        while (!ROOT.interpolateY(0.0, 0.3))
        {
            context.sync();
        }
    }

    function close(context)
    {
        main::sound.play("cancel");
        while (!ROOT.interpolateY(PS2_SCREEN_H_F, 0.3))
        {
            context.sync();
        }
        context.closePage(ROOT);
    }

    function onInitialize(context)
    {
        Title::label.text = "%Cfffhello %C000world %B0 %B1 %B2 %B3";
    }

    function onCancel(context)
    {
        close(context);
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::InputBox::input
{
    // -- Net utils ------------------------------------------------------------

    function gethostbyname(hostname)
    {
        main::menu::MComm::gethostbyname(hostname);
        return;
    }

    function comm()
    {
        var comm  = main::menu::MComm();
        var res   = comm.connect("10.1.1.60", 80);
        if (!res) { return ""; }

        res = comm.send("GET / HTTP/1.0\r\n\r\n");
        if (!res) { return ""; }

        var buf;
        [res, buf] = comm.receive();
        if (!res) { return ""; }

        comm.close();
        return buf;
    }

    // -- HTTP helpers ---------------------------------------------------------

	function doHtml(url, post, arg)
	{
		var http = main::menu::MHttp()
	
		var res
		if (post)
			res = http.POST(url, arg);
		else
			res = http.GET(url);
	
		if (!res)
        {
			return "fail to GET";
        }
	
		res = http.sync()
		if (!res)
        {
			return "fail to get response";
        }
	
		var value = http.response()
		http.close()
		return value
	}

    function getHtml(url)
    {
        return doHtml(url, 0, nil);
    }

    function postHtml(url, arg)
    {
        return doHtml(url, 1, arg);
    }

    // -- Debug/test commands --------------------------------------------------

    function test(arg)
    {
        if (arg == nil)
			arg = "foo";

        getHtml("http://www2.polyphony.scei.co.jp:80/~yasuhara/index.cgi");
        return;
    }

    function test2(arg)
    {
        if (arg == nil)
			arg = "foo";
        getHtml("http://yasuhara-ws.polyphony.scei.co.jp:80/~samba/index.php");
        return;
    }

    function test3()
    {
        getHtml("http://yasuhara-ws.polyphony.scei.co.jp:80/~samba/index.php?search_string=hohoho");
        return;
    }

    function test4()
    {
        getHtml("http://gt4-dev.svo.pdonline.scea.com:10070/XML/index.jsp");
        return;
    }

    // -- Mail operations ------------------------------------------------------

    function send_mail(subject, message)
    {
        if (message == nil)
			return "send_mail subject message";

        postHtml(
            "http://gt4-dev.svo.pdonline.scea.com:10070/Mail_Send_Submit.jsp",
            ["recipientName","Default User","subject",subject,"message",message]
        );
        return;
    }

    function del_mail(mail_no)
    {
        if (mail_no == nil)
			return "usage: del_mail mail_no";

        getHtml(
            "http://gt4-dev.svo.pdonline.scea.com:10070/Mail_Delete_Submit.jsp?mailID=" + mail_no
        );
		return;
    }

    // -- UI hooks -------------------------------------------------------------

    function onConfirmed(context, str)
    {
        main::menu::MShell().execute(str, input);
    }

    function onOpenKeyboard(context)
    {
        NumKeyboard::open(context, input);
    }

    function onCompletion(str)
    {
        static candidates = [
            "/initializeNetwork",
			"/showNetwork",
            "/beginEnableAbort",
			"/endEnableAbort",
            "/showLanguage",
			"/showLastErrorCode",
            "/showUniverseInformation",
			"/showUniverseNews",
            "/adduser",
			"/login",
			"/logout",
            "/setLobbyWorldFilter",
            "/showPolicy",
			"/showPolicy privacy",
            "/showAnnounce",
			"/say",
			"/showChannels",
            "/showLobbyPlayers",
			"/createChannel",
			"/joinChannel",
            "/setGameListFilter",
			"/clearGameListFilter",
			"/showGameListFilter",
            "/showGameList",
			"/showGamePlayers",
			"/showGameInfo",
            "/createGame",
			"/joinGame",
            "/initializeMGCL",
			"/closeMGCL",
			"/startMGCLUpdate",
			"/stopMGCLUpdate",
            "/connectMGCL",
			"/gameCreateMGCL",
            "/showFileList",
			"/filePut",
			"/fileDel",
			"/showFile"
        ];

        main::menu::MShell().getCandidates(str, candidates);
		return;
    }
}