





module ModeTextUtil
{
    static sEventPhaseName = EventSettingUtil::TypeNameList(
        [
            [gtengine::EventPhase::FreeRun, "EventPhase_FreeRun"],
            [gtengine::EventPhase::Practice, "EventPhase_Practice"],
            [gtengine::EventPhase::Qualifier, "EventPhase_Qualifier"],
            [gtengine::EventPhase::Game, "EventPhase_Race"],
            [gtengine::EventPhase::Final, "EventPhase_Final"],
        ]
    , "RaceTypeName");

    function getEventPhaseName(phase)
    {
        return sEventPhaseName.getName(phase);
    }

    class Concierge
    {
        attribute rc_;
        attribute sinfo_;
        attribute roomGameMode_;
        attribute eventPhase_;

        method __init__(args)
        {
            if (args.isInstanceOf(Array))
            {
                |var rc, var sinfo| = args;
                self.rc_ = rc;
                self.sinfo_ = sinfo;
            }
        }

        method getNextEventName()
        {
            if (self.rc_ != nil)
                self.roomGameMode_ = self.rc_.room_game_mode;

            if (self.sinfo_ != nil)
                self.eventPhase_ = self.sinfo_.event_phase;

            var str = "";
            switch (self.roomGameMode_)
            {
                case gtengine::RoomGameMode::RACE_WITH_QUALIFIER:
                case gtengine::RoomGameMode::ENDURANCE_WITH_QUALIFIER:
                    if (self.eventPhase_ == gtengine::EventPhase::Practice)
                    {
                        str = sEventPhaseName.getName(gtengine::EventPhase::Qualifier);
                    }
                    else if (self.eventPhase_ == gtengine::EventPhase::Qualifier)
                    {
                        str = sEventPhaseName.getName(gtengine::EventPhase::Final);
                    }
                    else if (self.eventPhase_ == gtengine::EventPhase::Race)
                    {
                        str = sEventPhaseName.getName(gtengine::EventPhase::Final);
                    }
                    else
                        ;

                    break;

                case gtengine::RoomGameMode::FREERUN:
                    break;

                case gtengine::RoomGameMode::RACE:
                case gtengine::RoomGameMode::ENDURANCE:
                    str = sEventPhaseName.getName(gtengine::EventPhase::Race);
                    break;

                case gtengine::RoomGameMode::TIME_TRIAL:
                case gtengine::RoomGameMode::DRIFT_TRIAL:
                    str = EventSettingProject::sRoomGameModeList.getName(self.roomGameMode_);
                    break;
            }

            return str;
        }

        method getNextEventText(keyword, page)
        {
            if (page == nil)
                page = "OnlineMessage";

            var text = manager.translate(page, keyword);
            text = text.build(self.getNextEventName(), "{0}");
            return text;
        }
    }

    function getNextEventText(keyword, page)
    {
        var concierge = Concierge(OnlineSession.getRoomConfig(true));
        return concierge.getNextEventText(keyword, page);
    }
}