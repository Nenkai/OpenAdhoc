module PROJECT::ROOT
{
    static sId = -1;
    static sImWidget = nil;
    static sImWatcher = nil;

    function OnImWatcher()
    {
        if (main::network.imHaveMessage())
        {
            sImWidget.active = true;
        }
    }

    function ImDeleteWatcher()
    {
        if (sImWatcher != nil)
        {
            sImWatcher.remove();
            sImWatcher = nil;

            sImWidget.active = false;
            sImWidget = nil;
        }
    }

    function ImCreateWatcher(context, widget, interval)
    {
        ImDeleteWatcher();

        sImWidget = widget;

        sImWatcher = main::menu::MScriptWatcher(context, OnImWatcher);
        sImWatcher.interval = interval;
        sImWatcher.count = 0;
        sImWatcher.append();
    }

    function ImOpen(context, id, name)
    {
        var widget = sImWidget;

        ImDeleteWatcher();
        open(context, id, name);
        ImCreateWatcher(context, widget, 2);
    }

    function open(context, id, name)
    {
        sId = -1;

        ScrollBox::tbox.clear();

        var pipe = main::network.imOpen();
        ScrollBox::tbox.pipe = pipe;

        if (main::network.imHaveMessage())
        {
            |sId, name| = main::network.imGetUser();
        }
        else
        {
            if (id >= 0)
            {
                sId = id;
            }
        }

        main::sound.play("ok");

        ImRoot.y = PS2_SCREEN_H_F;
        context.pushPage(ImRoot);

        if (sId < 0)
        {
            Name::input.insensitive = false;
            ImRoot.setFocus(Name::input);
        }
        else
        {
            Name::input.value = name;
            Name::input.insensitive = true;
            ImRoot.setFocus(InputBox::input);
        }

        while (!ImRoot.interpolateY(0.0, 0.3))
        {
            context.sync();
        }

        var update_context = context.getUpdateContext();
        update_context.enterEventLoop();
    }

    function close(context)
    {
        main::network.imClose();
        main::sound.play("cancel");

        while (!ImRoot.interpolateY(PS2_SCREEN_H_F, 0.3))
        {
            context.sync();
        }

        context.closePage(ImRoot);

        var update_context = context.getUpdateContext();
        update_context.leaveEventLoop();
    }

    function onInitialize(context)
    {
    }

    function onCancel(context)
    {
        close(context);
		return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::InputBox::input
{
    function onConfirmed(context, str)
    {
        var name = ImRoot::Name::input.value;

        if (name == "")
        {
            openConfirmDialog(context, DIALOG_OK, "input name first!");
            ImRoot.setFocus(ImRoot::Name::input);
            return;
        }

        if (sId < 0)
        {
            var id = main::network.accountName2AccountID(name);
            if (id < 0)
            {
                openConfirmDialog(context, DIALOG_OK, "There is no user named %s or not online".format(name));
                ImRoot.setFocus(ImRoot::Name::input);
                return;
            }
            sId = id;
        }

        var ret = main::network.imSend(str, name, sId);
        if (!ret)
            openConfirmDialog(context, DIALOG_OK, "Failed to send message");
            ImRoot::Name::input.insensitive = true;
    }
}