













module ROOT
{
    #include "ManualConfig.ad"

    attribute rtext_page = "ManualGT5";
    attribute manual_page_list;
    attribute modal_page;
    attribute closed;
    attribute invisible_pages;
    attribute shortcut_index;
    attribute target_category;

    hidden.visible = false;

    method open(context, target_category = "")
    {
        loadFont(context);

        self.target_category = target_category;
        self.manual_page_list = getAllPageList();
        self.shortcut_index = -1;
        self.closed = false;
        self.modal_page = main::SequenceUtil::ModalPage(context, ROOT);
        self.modal_page.open();

        return true;
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;

        PageUtil::visibleUnderPages(context, self);

        ROOT.setFocus(nil);

        var actor = self.CloseActor;
        actor.forward();
        actor.restart();

        if (self.modal_page != nil)
        {
            var delay_time = actor.Fade.total_time;
            self.modal_page.close(delay_time);
            self.modal_page = nil;

            unloadFontIf(context);
        }
    }

    method onCancel(context, event, item)
    {
        main::sound.play("cancel");
        close(context);

        return EVENTRESULT_FILTER;
    }

    method onInitialize(context)
    {
        ContextMain.disableInput();

        var actor = self.OpenActor;
        actor.forward();
        actor.restart();

        actor.on_effect_end = (context) => 
        {
            actor.on_effect_end = nil;
            PageUtil::invisibleUnderPages(context, self);
            ContextMain.enableInput();
        };

        self.CloseActor.stop();

        manager.rtext_manager.pushDB("rtext/manual");

        var category_w = hidden::Category.doCopy();
        category_w.setText("Manual");

        var focus_w = nil;
        var focus_w_group_info = nil;

        foreach (var group_info in self.manual_page_list)
        {
            var category_item_w = hidden::CategoryItem.doCopy();
            category_item_w.value = group_info;
            var category = group_info[0];
            category_item_w.setText(context.translate(ROOT, "ManualGT5", "PageTitle_%{category}"));
            category_w.setCategoryItemComponent(context, category_item_w);

            if (focus_w == nil)
            {
                focus_w = category_item_w;
                focus_w_group_info = group_info;
            }
        }

        ListMenu.setCategoryComponent(context, category_w);
        if (focus_w != nil)
        {
            ListMenu.createOptionItemList(context, focus_w_group_info);
            ROOT.setFocus(focus_w);
        }

        ButtonHelpGT6.set(context, [
            ["Enter"],
            ["Close"]
        ]);

        return EVENTRESULT_FILTER;
    }

    method onFinalize(context)
    {
        manager.rtext_manager.popDB();
        ListMenu.clearCategoryComponent(context);

        return EVENTRESULT_FILTER;
    }

    module ListMenu
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            var listbox = ListMenu.getListBox();
            var w = listbox.getItemWidget(listbox.focus_index, context);
            var keyword = w.value;

            DialogUtil::openTextReaderDialog(context,
                manager.translate("ManualGT5", "%{keyword}_Title"),
                [manager.translate("ManualGT5", "%{keyword}_Text")]);

            return EVENTRESULT_FILTER;
        }

        method createOptionItemList(context, group_info)
        {
            |var category, var page_list| = group_info;
            var listbox = ListMenu.getListBox();
            listbox.setItemTemplate(context, hidden::OptionItem);
            listbox.setItemCount(page_list.size);

            for (var i = 0; i < listbox.getItemCount(); i++)
            {
                var keyword = "%{category}_%02d".format(page_list[i]);
                var item = listbox.getItemWidget(i, context);
                item.value = keyword;

                item.setText(manager.translate("ManualGT5", "%{keyword}_Title"), "");

                var region = "JP";
                item.setIcon("/piece/manual/gt5/%{region}/%{keyword}.img", true);
                item.value = keyword; // Reassign for some reason
            }

            listbox.focus_index = 0;

            ListWindow::Head::Label.text = manager.translate("ManualGT5", "PageTitle_%{category}");
        }
    }

    module hidden::CategoryItem
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            var group_info = self.value;

            ListMenu.createOptionItemList(context, group_info);
            return EVENTRESULT_FILTER;
        }
    }
}