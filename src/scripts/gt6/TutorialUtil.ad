

//---------------------------------------------------------------------------------------
// TutorialUtil.ad
//
// Utility module for managing the tutorials
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------
module TutorialUtil
{
    static key_map = [
        'welcome' : ["GT000_WELCOME0", "GT000_WELCOME1", "GT000_WELCOME2"],
        'tutorial_at_pit' : ["GT001_AT_PIT0", "GT001_AT_PIT1", "GT001_AT_PIT2", "GT001_AT_PIT3", "GT001_AT_PIT4", "GT001_AT_PIT4_1", "GT001_AT_PIT5"],
        'tutorial_goal0' : "GT002_AT_BRANDSHATCH8_GOAL0_0",
        'tutorial_goal1' : "GT002_AT_BRANDSHATCH8_GOAL0_1",
        'get_first_car' : ["GT003_GET_FIRST_CAR0", "GT003_GET_FIRST_CAR1", "GT003_GET_FIRST_CAR2"],
        'got_first_car' : ["GT004_GOT_FIRST_CAR0", "GT004_GOT_FIRST_CAR1", "GT004_GOT_FIRST_CAR2", "GT004_GOT_FIRST_CAR3"],
        'goto_novice' : "GT004_GOT_FIRST_CAR5",
        'after_first_race_win' : ["GT005_AFTER_FIRST_RACE0_WIN", "GT005_AFTER_FIRST_RACE1", "GT005_AFTER_FIRST_RACE4", "GT005_AFTER_FIRST_RACE2"],
        'after_first_race_normal' : ["GT005_AFTER_FIRST_RACE0_NORMAL", "GT005_AFTER_FIRST_RACE1", "GT005_AFTER_FIRST_RACE4", "GT005_AFTER_FIRST_RACE2"],
        'start_menu' : ["GT005_START_MENU_0", "GT005_START_MENU_1"],
        'open_enjoycup' : ["GT005_OPEN_ENJOYCUP0", "GT005_OPEN_ENJOYCUP1"],
        'open_coffee_break' : ["GT005_OPEN_COFFE_BREAK", "GT005_OPEN_COFFE_BREAK1"],
        'open_mission_race' : ["GT007_OPEN_MISSION_RACE0", "GT007_OPEN_MISSION_RACE1"],
        'open_onemake_race' : "GT007_OPEN_ONEMAKE_RACE",
        'open_b_license' : ["GT005_OPEN_B_LICENSE", "GT005_OPEN_B_LICENSE1"],
        'present_n_complete' : "GT005_PRESENT_N_COMPLETE",
        'open_goodwood_0' : "GT017_OPEN_GOODWOOD_0",
        'open_goodwood_1' : "GT017_OPEN_GOODWOOD_1",
        'open_goodwood_2' : "GT017_OPEN_GOODWOOD_2",
        'open_goodwood_3' : "GT017_OPEN_GOODWOOD_3",
        'open_goodwood_4' : "GT017_OPEN_GOODWOOD_4",
        
        'gtauto_open' : "GTAUTO_00_OPEN_0",
        'gtauto_open_tune' : ["GTAUTO_01_OPEN_TUNING_SHOP_0", "GTAUTO_01_OPEN_TUNING_SHOP_1", "GTAUTO_01_OPEN_TUNING_SHOP_2", "GTAUTO_01_OPEN_TUNING_SHOP_3"],
        'gtauto_open_custom' : "GTAUTO_02_OPEN_CUSTOM_0",
        'gtauto_open_gear' : ["GTAUTO_03_OPEN_RACING_GEAR_0", "GTAUTO_03_OPEN_RACING_GEAR_1"],
        'gtauto_open_paint' : ["GTAUTO_04_OPEN_PAING_0", "GTAUTO_04_OPEN_PAING_1"],
        'gtauto_open_pit' : ["GTAUTO_05_OPEN_PIT_0", "GTAUTO_05_OPEN_PIT_1", "GTAUTO_05_OPEN_PIT_2", "GTAUTO_05_OPEN_PIT_3"],
        
        'complete_career_n' : "GT006_COMPLETE_N",
        'goto_b' : ["GT007_GOTO_B0_1", "GT007_GOTO_B1", "GT007_GOTO_B2", "GT007_GOTO_B3"],
        'complete_career_b' : "GT008_00_COMPLETE_B",
        'goto_a' : ["GT009_00_GOTO_A_1", "GT009_00_GOTO_A1", "GT009_00_GOTO_A2_1"],
        'complete_career_a' : "GT010_00_COMPLETE_A",
        'goto_ib' : ["GT011_00_GOTO_IB0", "GT011_00_GOTO_IB1", "GT011_00_GOTO_IB2"],
        'goto_only_x' : ["GT011_00_GOTO_ONLY_X", "GT011_00_GOTO_IB1", "GT011_00_GOTO_IB2"],
        'complete_career_ib' : "GT012_00_COMPLETE_IB",
        'goto_ia' : "GT013_00_GOTO_IA",
        'complete_career_ia' : "GT014_00_COMPLETE_IA",
        'goto_s' : "GT015_00_GOTO_S",
        'complete_career_s' : "GT016_00_COMPLETE_S",

        'pp_over' : ["PP_OVER_01", "PP_OVER_02"],
        'tire_advice' : ["GT007_B_ADVICE_TIRE_0", "GT007_B_ADVICE_TIRE_1"],
        'car_advice' : ["GT007_B_ADVICE_0", "GT007_B_ADVICE_1"],
        'lets_takephoto' : ["GT007_LETS_TAKE_PHOTO_0", "GT007_LETS_TAKE_PHOTO_1"],
        'welcome_racephoto' : ["GT007_WELCOME_RACEPHOT_0", "GT007_WELCOME_RACEPHOT_1"],
        'photo_travel_tip' : ["GT007_PHOTO_TIP_FOCUS", "GT007_PHOTO_TIP_AFTER"],
        'race_photo_tip' : ["GT007_PHOTO_TIP_FOCUS", "GT007_RACEPHOT_TIP_0", "GT007_RACEPHOT_TIP_1", "GT007_PHOTO_TIP_AFTER"],
        'only_race_photo_tip' : ["GT007_RACEPHOT_TIP_0", "GT007_RACEPHOT_TIP_1"],

        'x2014_welcome' : ["GT_VET00_WELCOME0", "GT_VET00_WELCOME1", "GT_VET00_WELCOME2", "GT_VET00_WELCOME3", "GT_VET00_WELCOME4"],
        'x2014_kart' : ["GT_VET01_KART0", "GT_VET01_KART1", "GT_VET01_KART2", "GT_VET01_KART3"],
        'x2014_congrats' : ["GT_VET00_CONGRATS0", "GT_VET00_CONGRATS1"],
        'x2014_congrats_only' : "GT_VET00_CONGRATS0",
        'x2014_next' : "GT_VET00_CONGRATS1",
        'x2014_x_intro' : ["GT_VET02_STARTX0", "GT_VET02_STARTX1", "GT_VET02_STARTX2"],
        'x2014_x3' : ["GT_VET01_NEXT_JR_0", "GT_VET01_NEXT_JR_1", "GT_VET01_NEXT_JR_2", "GT_VET01_NEXT_JR_3", "GT_VET01_NEXT_JR_4"],
        'x2014_x2' : ["GT_VET03_NEXT_STD_0", "GT_VET03_NEXT_STD_1", "GT_VET03_NEXT_STD_2", "GT_VET03_NEXT_STD_3", "GT_VET03_NEXT_STD_4", "GT_VET03_NEXT_STD_5"],
        'x2014_x1' : ["GT_VET04_NEXT_FAN_0", "GT_VET04_NEXT_FAN_1", "GT_VET04_NEXT_FAN_2", "GT_VET04_NEXT_FAN_3", "GT_VET04_NEXT_FAN_4", "GT_VET04_NEXT_FAN_5", "GT_VET04_NEXT_FAN_6", "GT_VET04_NEXT_FAN_7"],
        'x2014_x1_monza' : ["GT_VET05_MONZA_0", "GT_VET05_MONZA_1", "GT_VET05_MONZA_2", "GT_VET05_MONZA_3"],
        'x2014_x1_spa' : ["GT_VET06_SPA_0", "GT_VET06_SPA_1", "GT_VET06_SPA_2", "GT_VET06_SPA_3"],
        'x2014_x1_suzuka' : ["GT_VET09_SUZUKA_0", "GT_VET09_SUZUKA_1", "GT_VET09_SUZUKA_2", "GT_VET09_SUZUKA_3"],
        'x2014_end_message' : ["GT_VET10_END_0", "GT_VET10_END_1", "GT_VET10_END_2", "GT_VET10_END_4", "GT_VET10_END_5", "GT_VET10_END_6", "GT_VET10_END_7", "GT_VET10_END_8"],

        'academy_2014_lucas' : ["GT_AC2014_1_LUCAS_00", "GT_AC2014_1_LUCAS_01", "GT_AC2014_1_LUCAS_02", "GT_AC2014_1_LUCAS_03"],
        'academy_2014_junn' : ["GT_AC2014_2_JUNN_00", "GT_AC2014_2_JUNN_01", "GT_AC2014_2_JUNN_02", "GT_AC2014_2_JUNN_03", "GT_AC2014_2_JUNN_04"],
        'academy_2014_wolf' : ["GT_AC2014_3_WOLF_00", "GT_AC2014_3_WOLF_01", "GT_AC2014_3_WOLF_02", "GT_AC2014_3_WOLF_03", "GT_AC2014_3_WOLF_04"],
        'academy_2014_steve' : ["GT_AC2014_4_STIVE_00", "GT_AC2014_4_STIVE_01", "GT_AC2014_4_STIVE_02", "GT_AC2014_4_STIVE_03"],
        'academy_2014_end' : ["GT_AC2014_5_LUCAS_00", "GT_AC2014_5_LUCAS_01", "GT_AC2014_5_LUCAS_02", "GT_AC2014_5_LUCAS_03"],
        'academy_2014_end1' : ["GT_AC2014_5_LUCAS_00", "GT_AC2014_5_LUCAS_01", "GT_AC2014_5_LUCAS_02", "GT_AC2014_5_LUCAS_03_NO_FINAL_AREA"],

        'senna_tribute' : ["GT_SENNA_TRIBUTE_0", "GT_SENNA_TRIBUTE_1"],
        'community_mypage' : ["COMMUNITY_MYPAGE_1", "COMMUNITY_MYPAGE_2", "COMMUNITY_MYPAGE_3"],
        'community_timeline' : ["COMMUNITY_TIMELINE_1", "COMMUNITY_TIMELINE_2"],
        'community_club' : ["COMMUNITY_CLUB_1", "COMMUNITY_CLUB_2", "COMMUNITY_CLUB_3"],
        'community_friend' : ["COMMUNITY_FRIEND_1"],
        'community_photostream' : ["COMMUNITY_PHOTOSTREAM_1"],
        'community_message' : ["COMMUNITY_MESSAGE_1"],
        'community_news' : ["COMMUNITY_NEWS_1"],

        'bspec_quick' : ["BSPEC_QUICK_1"],
        'bspec_race' : ["BSPEC_RACE_1", "BSPEC_RACE_2"],
    ];

    function getTranslateKey(keyword)
    {
        var array = key_map[keyword];
        if (array != nil)
            return array;
        else
            return "KEY_NOT_FOUND" + keyword.upcase() + "Please check TutorialUtil.ad";
    }

    static voice_map = [
        'x2014_welcome' : ["01_2", "02_2", "03", "04", "05_2"],
        'x2014_congrats' : ["06", "07_2"],
        'x2014_congrats_only' : "06",
        'x2014_next' : "07_2",
        'x2014_x_intro' : ["08", "09", "10"],
        'x2014_x1_monza' : ["108", "109", "110", "111"],
        'x2014_x1_spa' : ["104", "105", "106", "107"],
        'x2014_x1_suzuka' : ["100", "101", "102", "103"],
        'x2014_end_message' : ["11", "12", "13", "14_2", "15_2", "16_2", "17_2", "18"],
    ];

    static voice_map_de = [
        'x2014_welcome' : ["01", "02_1", "03_2", "04", "05"],
        'x2014_congrats' : ["06_1", "07_2"],
        'x2014_congrats_only' : "06_1",
        'x2014_next' : "07_2",
        'x2014_x_intro' : ["08_1", "09", "10"],
        'x2014_x1_monza' : ["108", "109", "110", "111"],
        'x2014_x1_spa' : ["104", "105", "106", "107"],
        'x2014_x1_suzuka' : ["100", "101", "102", "103"],
        'x2014_end_message' : ["11", "12_2", "13", "14", "15", "16", "17", "18_2"],
    ];

    function setVoice(keyword, params)
    {
        if (params == nil)
            return nil;

        var use_lang = main::pdistd::MLocale::getLanguage();

        var array = voice_map[keyword];
        if (use_lang == "DE")
            array = voice_map_de[keyword];

        if (array == nil)
            return params;

        params.insert([
            'voice' : array
        ]);

        var voice_dir = "";
        switch (params["speaker"])
        {
            case "SPEAKER_VETTEL":
            default:
                if (use_lang == "DE")
                    voice_dir = "/sound_gt/guide/gt6/vettel/DE";
                else
                    voice_dir = "/sound_gt/guide/gt6/vettel/EN";
                break;
        }

        params.insert([
            'voice_dir' : voice_dir
        ]);

        return params;
    }

    function message(context, keyword, params)
    {
        var translate_key = getTranslateKey(keyword);
        params = setVoice(keyword, params);
        openDialog(context, translate_key, params);
    }

    function openDialog(context, translate_key, params)
    {
        if (translate_key.isInstanceOf(Array))
        {
            var messages = Array();

            foreach (var key in translate_key)
            {
                var s = main::manager.translate("Tutorial", key);
                if (params != nil && params["build_text"] != nil)
                {
                    var build_text = params["build_text"];
                    if (build_text.isInstanceOf(Array) && build_text.size > 0)
                    {
                        if (build_text.size > 1)
                            s = s.build(build_text[0], build_text[1]);
                        else
                            s = s.build(build_text[0]);
                    }
                    else
                        s = s.build(build_text);
                }

                messages.push(s);
            }

            DialogUtil::openTutorialDialog(context, messages, params);
        }
        else
        {
            var s = main::manager.translate("Tutorial", translate_key);
            if (params["build_text"] != nil)
                s = s.build(params["build_text"]);

            if (s != "")
                DialogUtil::openTutorialDialog(context, s, params);
        }
    }

    function isBegin(category, name)
    {
        var instance = getInstance();
        var result = instance.isBegin(category, name);
        return result;
    }

    function isProgress(category, name)
    {
        var instance = getInstance();
        var result = instance.isProgress(category, name);
        return result;
    }

    function isDone(category, name)
    {
        var instance = getInstance();
        var result = instance.isDone(category, name);
        return result;
    }

    function isProgressOrDone(category, name)
    {
        var instance = getInstance();
        var progress = instance.isProgress(category, name);
        var done = instance.isDone(category, name);
        return progress || done;
    }

    function begin(category, name)
    {
        if (isProgressOrDone(category, name))
            return false;

        var instance = getInstance();
        return instance.begin(category, name);
    }

    function progress(category, name)
    {
        var instance = getInstance();
        return instance.progress(category, name);
    }

    static sTrophyConditionMap =
    [
        "gttop" : [
            "complete_career_n" : gtengine::TrophyType::CLEAR_NOVICE,
            "complete_career_b" : gtengine::TrophyType::CLEAR_B,
            "complete_career_a" : gtengine::TrophyType::CLEAR_A,
            "complete_career_ib" : gtengine::TrophyType::CLEAR_IB,
            "complete_career_ia" : gtengine::TrophyType::CLEAR_IA,
        ]
    ];

    function checkTrophyUnlockCondition(category, name)
    {
        var map = sTrophyConditionMap != nil ? sTrophyConditionMap[category] : nil;
        if (map == nil)
            return;

        var trophyId = map[name];
        if (trophyId == nil)
            return;

        PDINetwork.unlockTrophyAsync(trophyId);
    }

    function done(category, name)
    {
        checkTrophyUnlockCondition(category, name);
        var instance = getInstance();
        return instance.done(category, name);
    }

    function clear(category, name)
    {
        var instance = getInstance();
        return instance.clear(category, name);
    }

    function getQuestList()
    {
        var instance = getInstance();
        return instance.getQuestList();
    }

    function showTutorial(context, data, category, exec_func_args)
    {
        foreach (var t in data)
        {
            var check_begin = t["check_begin"];
            var check_progress = t["check_progress"];
            var check_done = t["check_done"];
            var name_message = t["message"];
            var msg_param = t["msg_param"];
            var name_begin = t["begin"];
            var name_progress = t["progress"];
            var name_done = t["done"];
            var exec_func = t["exec_func"];
            
            if (msg_param == nil)
                msg_param = [];

            var start_tutorial = false;
            if (check_begin != nil)
            {
                if (check_begin.isInstanceOf(String))
                    check_begin = [check_begin];

                foreach (var name in check_begin)
                {
                    if (isBegin(category, name))
                    {
                        start_tutorial = true;
                        break;
                    }
                }
            }

            if (!start_tutorial && check_progress != nil)
            {
                if (check_progress.isInstanceOf(String))
                    check_progress = [check_progress];

                foreach (var name in check_progress)
                {
                    if (isProgress(category, name))
                    {
                        start_tutorial = true;
                        break;
                    }
                }
            }

            if (!start_tutorial && check_done != nil)
            {
                if (check_done.isInstanceOf(String))
                    check_done = [check_done];

                foreach (var name in check_done)
                {
                    if (isDone(category, name))
                    {
                        start_tutorial = true;
                        break;
                    }
                }
            }

            if (start_tutorial)
            {
                if (exec_func != nil)
                    exec_func(context, exec_func_args);

                if (name_message != nil)
                    message(context, name_message, msg_param);

                if (name_begin != nil)
                    begin(category, name_begin);

                if (name_progress != nil)
                    progress(category, name_progress);

                if (name_done != nil)
                    done(category, name_done);
            }
        }
    }

    function getInstance()
    {
        return GAME_STATUS.user_profile.tutorial;
    }
}