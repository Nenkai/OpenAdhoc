module BbsDetailPopup
{
    attribute popup;
    attribute closed = false;
    attribute bbs_board_id;
    attribute index;

    method open(context, bbs_board_id, args)
    {
        self.bbs_board_id = bbs_board_id;
        self.index = args;
        self.closed = false;

        self.popup = main::SequenceUtil::ModalPage(context, BbsDetailPopup);
        self.popup.open();
        return true;
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;

        FadeActor.on_effect_end = function (context)
        {
            if (BbsDetailPopup.popup != nil)
            {
                BbsDetailPopup.popup.close();
                BbsDetailPopup.popup = nil;
            }
        }

        FadeActor.out = true;
    }

    method onInitialize(context)
    {
        hidden.visible = false;

        var adj = main::menu::MAdjustment();
        Body::Scrollbar::VScrollbar.adjustment = adj;
        Body::ScrolledWindow::clip.v_adjustment = adj;

        ButtonHelpGT5.set(context, [
            [ButtonHelpGT5.getCancelButtonName(), context.translate(BbsDetailPopup, "MyHome", "BUTTON_HELP_CLOSE")]
        ]);

        context.pushEvent(main::menu::MFunctionEvent(initialize, context));

        return EVENTRESULT_FILTER;
    }

    method onFinalize(context)
    {
        Body::ScrolledWindow::clip::space.clearChildren(context);
    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        BbsDetailPopup.close(context);

        return EVENTRESULT_FILTER;
    }

    method initialize(context)
    {
        var bbs_list = GAME_STATUS.user_profile.bbs.getList(self.bbs_board_id);

        var i = 0;
        var focus_target;
        foreach (var bbs in bbs_list)
        {
            var item = hidden::VList.doCopy();
            item.Info.TextFace.text = bbs[2];
            item.TextFace.text = bbs[3];
            var create_time = pdistd::MTime();

            create_time.setBySecond(bbs[4]);

            |var date, var time| = PROJECT::createDateTimeText2(context, BbsDetailPopup, create_time);

            item.Info.DateTime.TextFaceDate.text = date;
            item.Info.DateTime.TextFaceTime.text = time;
            item.Info.DateTime.TextFaceTime.visible = time != "";

            Body::ScrolledWindow::clip::space.appendChild(context, item);

            if (self.index == i)
                focus_target = item;

            ++i;
        }

        Body::ScrolledWindow::clip.updateGeometry();

        focus_target != nil; // NOTE: ?

        Body::ScrolledWindow::clip.warp(focus_target);
        context.cursor_visible = true;

        BbsDetailPopup.setFocus(focus_target.Info.ImageFace);
    }
}