#include "scripts/gt5m/ActorUtil.ad"
#include "scripts/gt5m/Debug.ad"
#include "scripts/gt5m/DialogUtil.ad"
#include "scripts/gt5m/GameContext.ad"
#include "scripts/gt5m/GamePlan.ad"
#include "scripts/gt5m/GameSequence.ad"
#include "scripts/gt5m/GlobalStatusEntry.ad"
#include "scripts/gt5m/LeaveDetectUtil.ad"
#include "scripts/gt5m/RaceMenuUtil.ad"
#include "scripts/gt5m/RandomUtil.ad"
#include "scripts/gt5m/SequenceUtil.ad"
#include "scripts/gt5m/SoundUtil.ad"
#include "scripts/gt5m/TireUtil.ad"
#include "scripts/gt5m/WatcherUtil.ad"

module ::main
{
    var dummy = 0;

    static menu_resource_loaded = false;

    function LoadMenuResource()
    {
        if (menu_resource_loaded)
            return;
        
        main::pdiext::LoadLatinFont("sanserif-r");
        main::pdiext::LoadLatinFont("sanserif-i");
        main::pdiext::LoadLatinFont("sanserif-b");
        main::pdiext::LoadLatinFont("sanserif-bi");
        main::pdiext::LoadLatinFont("serif-r");
        main::pdiext::LoadLatinFont("serif-i");
        main::pdiext::LoadLatinFont("serif-b");
        main::pdiext::LoadLatinFont("serif-bi");

        menu_resource_loaded = true;
    }

    function UnloadMenuResource()
    {
        if (!menu_resource_loaded)
            return;

        main::pdiext::UnloadLatinFont();

        menu_resource_loaded = false;
    }

    function execBootRace(bootrace_arg)
    {
        |var car_label, var course_label| = bootrace_arg.split(",");
        var car_code = main::gtengine::MSpecDB::getCarCode(car_label);
        var course_code = main::gtengine::MSpecDB::getCourseCode(course_label);
        var cp = main::gtengine::MCarParameter(car_code);
        var dp = main::gtengine::MCarDriverParameter();
        dp.setPlayer(0);
        main::GamePlan::begin();
        var gp = GamePlan::createSingleRace(course_code, 1, 1,
                                            0, 0, 0,
                                            0, [4, 3, 2, 1]);
        GamePlan::executeOutOfSequence(gp, [cp], [dp]);
        main::GamePlan::end();
    }

    function MainLoop()
    {
        if (AppOpt["bootrace"] != nil)
            execBootRace(AppOpt["bootrace"]);

        while (!GameSequence::context.finished && !pdiext::MSystemCondition::IsExitGame())
        {
            main::DebugTool::printHeapStatus();
            switch (GameSequence::getCurrentSequence())
            {
                case GameSequence::MENU:
                    GameSequence::allocateReplayBuffer();
                    LoadMenuResource();
                    GameSequence::setMode(GameSequence::getCurrentSequence());
                    MGOM.start(GameSequence::getCurrentProject());
                    UnloadMenuResource();
                    GameSequence::freeUnusedReplayBuffer();
                    break;

                case GameSequence::RACE:
                    SoundUtil::BGMPlayGroup('menu', "before_race", true, 2.0);
                    GameSequence::setMode(GameSequence::getCurrentSequence());
                    GameSequence::executeRace();
                    GameSequence::endUsedReplayBuffer();
                    GamePlan::executeNext();
                    break;
            }

            main::pdiext::ClearFontCache();
        }
    }
}