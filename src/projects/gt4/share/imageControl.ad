static imageControlWatcher_;

function attachImageControl(context)
{
    imageControlWatcher_ = main::menu::MScriptWatcher(context, updateImageControl);
    imageControlWatcher_.interval = 1;
    imageControlWatcher_.append();
}

function removeImageControl(context)
{
    imageControlWatcher_.remove();
    imageControlWatcher_ = nil;
}

function updateImageControl(context)
{
    var w = PR.imageWidth;
    var h = PR.imageHeight;

    if (w == 0 || h == 0)
        return;

    var portrait = PR.portrait;
    if (portrait)
    {
        var t = w;
        w = h;
        h = t;
    }

    var baseScale = 960.0 / h;

    var update_context = context.getUpdateContext();
    var key = update_context.getPadButtonState(0);
    var lx = update_context.getPadAnalogChannel(0, 2);
    var ly = update_context.getPadAnalogChannel(0, 3);

    var scaleStep = 1.02;
    var s = PR.imageScale * baseScale;

    if (key & 256)
    {
        s /= scaleStep;
        if (s < baseScale)
            s = baseScale;
    }

    if (key & 2048)
    {
        s *= scaleStep;
        if (s > 2.0)
            s = 2.0;
    }

    var is = s / baseScale;
    PR.imageScale = is;
    
    var ofs_speed = 6.0 / is;
    
    var x = PR.ofs_x;
    var y = PR.ofs_y;

    if (key & 4)
        x += ofs_speed;
    if (key & 8)
        x -= ofs_speed;
    if (key & 1)
        y += ofs_speed;
    if (key & 2)
        y -= ofs_speed;

    x -= ofs_speed * lx;
    y -= ofs_speed * ly;

    var hw = (w / 4.0) * baseScale;
    var hh = (h / 4.0) * baseScale;

    if (x < -hw)
        x = -hw;
    if (x > hw)
        x = hw;
    if (y < -hh)
        y = -hh;
    if (y > hh)
        y = hh;

    PR.ofs_x = x;
    PR.ofs_y = y;
}