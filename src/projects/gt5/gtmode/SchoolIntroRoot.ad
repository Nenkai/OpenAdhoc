module ROOT
{
    attribute return_page_;
    attribute intro_define_;
    attribute on_close_func_;
    attribute on_close_func_arg_;
    attribute watcher;
    attribute caption_page;
    attribute caption_list;
    attribute start_time;
    attribute saved_frame_interval_;
    attribute closed = false;

    static nascar_caption_data = [
        ["begin_time_ms" : 270 .toFloat() * 16.683332, "text" : "JG_001"],
        ["begin_time_ms" : 500 .toFloat() * 16.683332, "text" : "JG_002"],
        ["begin_time_ms" : 13000, "text" : ""],
        ["begin_time_ms" : 950 .toFloat() * 16.683332, "text" : "JG_003_1"],
        ["begin_time_ms" : 1250 .toFloat() * 16.683332, "text" : "JG_003_2"],
        ["begin_time_ms" : 27000, "text" : ""],
        ["begin_time_ms" : 1700 .toFloat() * 16.683332, "text" : "JG_004_1"],
        ["begin_time_ms" : 2050 .toFloat() * 16.683332, "text" : "JG_004_2"],
        ["begin_time_ms" : 40500, "text" : ""],
        ["begin_time_ms" : 2500 .toFloat() * 16.683332, "text" : "JG_005_1"],
        ["begin_time_ms" : 2750 .toFloat() * 16.683332, "text" : "JG_005_2"],
        ["begin_time_ms" : 3050 .toFloat() * 16.683332, "text" : "JG_006"],
        ["begin_time_ms" : 58000, "text" : ""],
        ["begin_time_ms" : 3600 .toFloat() * 16.683332, "text" : "JG_007_1"],
        ["begin_time_ms" : 3750 .toFloat() * 16.683332, "text" : "JG_007_2"],
        ["begin_time_ms" : 70000, "text" : ""],
        ["begin_time_ms" : 4300 .toFloat() * 16.683332, "text" : "JG_009_1"],
        ["begin_time_ms" : 4600 .toFloat() * 16.683332, "text" : "JG_009_2"],
        ["begin_time_ms" : 80500, "text" : ""],
        ["begin_time_ms" : 4970 .toFloat() * 16.683332, "text" : "JG_008_1"],
        ["begin_time_ms" : 5300 .toFloat() * 16.683332, "text" : "JG_008_2"],
        ["begin_time_ms" : 95000, "text" : ""],
        ["begin_time_ms" : 5820 .toFloat() * 16.683332, "text" : "JG_010_1"],
        ["begin_time_ms" : 6100 .toFloat() * 16.683332, "text" : "JG_010_2"],
        ["begin_time_ms" : 6320 .toFloat() * 16.683332, "text" : "JG_011_1"],
        ["begin_time_ms" : 6600 .toFloat() * 16.683332, "text" : "JG_011_2"],
        ["begin_time_ms" : 7020 .toFloat() * 16.683332, "text" : "JG_012_1"],
        ["begin_time_ms" : 7400 .toFloat() * 16.683332, "text" : "JG_012_2"],
        ["begin_time_ms" : 7650 .toFloat() * 16.683332, "text" : "JG_012_3"],
        ["begin_time_ms" : 131000, "text" : ""],
        ["begin_time_ms" : 7920 .toFloat() * 16.683332, "text" : "JG_013"],
        ["begin_time_ms" : 8130 .toFloat() * 16.683332, "text" : "JG_014"],
        ["begin_time_ms" : 139000, "text" : ""]
    ];

    static x1_caption_data = [
        ["begin_time_ms" : 400 .toFloat() * 16.683332, "text" : "X1_2_1"],
        ["begin_time_ms" : 650 .toFloat() * 16.683332, "text" : "X1_2_2"],
        ["begin_time_ms" : 16400, "text" : ""],
        ["begin_time_ms" : 1200 .toFloat() * 16.683332, "text" : "X1_3"],
        ["begin_time_ms" : 25500, "text" : ""],
        ["begin_time_ms" : 1700 .toFloat() * 16.683332, "text" : "X1_4_1"],
        ["begin_time_ms" : 2000 .toFloat() * 16.683332, "text" : "X1_4_2"],
        ["begin_time_ms" : 2350 .toFloat() * 16.683332, "text" : "X1_4_3"],
        ["begin_time_ms" : 45000, "text" : ""],
        ["begin_time_ms" : 2900 .toFloat() * 16.683332, "text" : "X1_5_1"],
        ["begin_time_ms" : 3350 .toFloat() * 16.683332, "text" : "X1_5_2"],
        ["begin_time_ms" : 3850 .toFloat() * 16.683332, "text" : "X1_5_3"],
        ["begin_time_ms" : 68500, "text" : ""],
        ["begin_time_ms" : 4500 .toFloat() * 16.683332, "text" : "X1_6_1"],
        ["begin_time_ms" : 4900 .toFloat() * 16.683332, "text" : "X1_6_2"],
        ["begin_time_ms" : 90000, "text" : ""],
        ["begin_time_ms" : 5500 .toFloat() * 16.683332, "text" : "X1_7_1"],
        ["begin_time_ms" : 5750 .toFloat() * 16.683332, "text" : "X1_7_2"],
        ["begin_time_ms" : 6150 .toFloat() * 16.683332, "text" : "X1_7_3"],
        ["begin_time_ms" : 110000, "text" : ""],
        ["begin_time_ms" : 6700 .toFloat() * 16.683332, "text" : "X1_8_1"],
        ["begin_time_ms" : 7250 .toFloat() * 16.683332, "text" : "X1_8_2"],
        ["begin_time_ms" : 125000, "text" : ""],
        ["begin_time_ms" : 7600 .toFloat() * 16.683332, "text" : "X1_9"],
        ["begin_time_ms" : 135000, "text" : ""],
        ["begin_time_ms" : 8450 .toFloat() * 16.683332, "text" : "X1_10"],
        ["begin_time_ms" : 146000, "text" : ""],
        ["begin_time_ms" : 9050 .toFloat() * 16.683332, "text" : "X1_11"],
        ["begin_time_ms" : 155000, "text" : ""]
    ];

    static topgear_caption_data = [
        ["begin_time_ms" : 250 .toFloat() * 16.683332, "text" : "stig_Dintr01"],
        ["begin_time_ms" : 600 .toFloat() * 16.683332, "text" : "stig_Dintr03"],
        ["begin_time_ms" : 950 .toFloat() * 16.683332, "text" : "stig_Dintr04"],
        ["begin_time_ms" : 1600 .toFloat() * 16.683332, "text" : "stig_Dintr06_1"],
        ["begin_time_ms" : 35500, "text" : "stig_Dintr06_2"],
        ["begin_time_ms" : 2470 .toFloat() * 16.683332, "text" : "stig_Dintr07_1"],
        ["begin_time_ms" : 54000, "text" : "stig_Dintr07_2"],
        ["begin_time_ms" : 3660 .toFloat() * 16.683332, "text" : "stig_Dintr08"],
        ["begin_time_ms" : 64000, "text" : ""],
        ["begin_time_ms" : 3950 .toFloat() * 16.683332, "text" : "stig_Dintr05_1"],
        ["begin_time_ms" : 4250 .toFloat() * 16.683332, "text" : "stig_Dintr05_2"],
        ["begin_time_ms" : 78000, "text" : "stig_Dintr05_3"],
        ["begin_time_ms" : 90000, "text" : ""],
        ["begin_time_ms" : 5500 .toFloat() * 16.683332, "text" : "stig_Dintr02"],
        ["begin_time_ms" : 98000, "text" : ""],
        ["begin_time_ms" : 7500 .toFloat() * 16.683332, "text" : "stig_Dintr09"]
    ];

    static loeb_caption_data = [
        ["begin_time_ms" : 0 .toFloat() * 16.683332, "text" : ["title", "loeb_intr00_1", "loeb_intr00_2"]],
        ["begin_time_ms" : 300 .toFloat() * 16.683332, "text" : ""],
        ["begin_time_ms" : 620 .toFloat() * 16.683332, "text" : "loeb_intr01"],
        ["begin_time_ms" : 970 .toFloat() * 16.683332, "text" : "loeb_intr02"],
        ["begin_time_ms" : 1120 .toFloat() * 16.683332, "text" : "loeb_intr03"],
        ["begin_time_ms" : 1343 .toFloat() * 16.683332, "text" : "loeb_intr04"],
        ["begin_time_ms" : 1883 .toFloat() * 16.683332, "text" : "loeb_intr05"],
        ["begin_time_ms" : 2533 .toFloat() * 16.683332, "text" : "loeb_intr06"],
        ["begin_time_ms" : 2900 .toFloat() * 16.683332, "text" : ""]
    ];

    class SchoolIntroDefine
    {
        attribute scene_alias_;
        attribute sound_path_;
        attribute sound_gain_;
        attribute bgm_code_;
        attribute audio_languages_;
        attribute caption_page_;
        attribute caption_data_;
        attribute game_flag_name_;

        method __init__(scene_alias, sound_path, sound_gain, bgm_code, audio_languages, caption_page, caption_data, game_flag_name)
        {
            self.scene_alias_ = scene_alias;
            self.sound_path_ = sound_path;
            self.sound_gain_ = sound_gain;
            self.bgm_code_ = bgm_code;
            self.audio_languages_ = audio_languages;
            self.caption_page_ = caption_page;
            self.caption_data_ = caption_data;
            self.game_flag_name_ = game_flag_name;
        }
    }

    static def_topgear_intro = SchoolIntroDefine("Topgear_intro", "sound_gt/gt5/special_event/topgear_intro", 1.0, nil, ["GB", "US"], "SpecialEventInfoGT5", topgear_caption_data, "Topgear_intro");
    static def_nascar_intro = SchoolIntroDefine("NASCAR_school_intro", "sound_gt/gt5/special_event/nascar_intro", 1.0, nil, ["US", "GB"], "SchoolJeffGordon", nascar_caption_data, "NASCAR_school_intro");
    static def_loeb_rc_intro = SchoolIntroDefine("loeb_Rally_Challenge", "sound_gt/gt5/special_event/loeb_intro", 0.71, nil, ["FR"], "SpecialEventInfoGT5", loeb_caption_data, "loeb_Rally_Challenge");
    static def_x1_intro_en = SchoolIntroDefine("X-1challenge_intro_E", "sound_gt/gt5/special_event/x1_intro", 1.0, nil, ["GB", "US"], "SchoolSebastianVettel", x1_caption_data, "X1challenge_intro");
    static def_x1_outro = SchoolIntroDefine("X1_delivery", nil, 1.0, "car_delivery", [], "SchoolSebastianVettel", nil, "X1_delivery");

    static school_intro_define_map = [
        "Topgear_intro" : def_topgear_intro,
        "NASCAR_school_intro" : def_nascar_intro,
        "loeb_Rally_Challenge" : def_loeb_rc_intro,
        "X-1challenge_intro_E" : def_x1_intro_en
    ];


    method open(context, return_page, sp_event_type, on_close_func, on_close_func_arg)
    {
        var lang = pdistd::MLocale::getLanguage();

        var intro_def;
        switch (sp_event_type)
        {
            case SpecialEventUtil::EVENT_TYPE::STIG_CHG:
                intro_def = def_topgear_intro;
                break;

            case SpecialEventUtil::EVENT_TYPE::JEFF_G_DS:
                intro_def = def_nascar_intro;
                break;

            case SpecialEventUtil::EVENT_TYPE::LOEB_RC:
                intro_def = def_loeb_rc_intro;
                break;

            case SpecialEventUtil::EVENT_TYPE::X1_CHG:
                intro_def = def_x1_intro_en;
                break;

            case"X1_delivery":
                intro_def = def_x1_outro;
                break;

            default:
                main::sound.play("disable");
                return;
        }

        self.intro_define_ = intro_def;
        self.on_close_func_ = on_close_func;
        self.on_close_func_arg_ = on_close_func_arg;
        self.closed = false;

        SoundUtil::BGMFadeout(1.0);

        self.return_page_ = return_page;
        var current_page = return_page;
        var next_page = self;

        if (current_page != nil || (context.root_transition != nil && context.root_transition.root_window == nil))
            SequenceUtil::startPageTransition(context, current_page, next_page);

        context.syncOutRootTransition();
        current_page.visible = false;
        context.pushPage(next_page);

        context.enterEventLoop();
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;
        SoundUtil::StopStream(context);

        var next_page = self.return_page_;
        self.return_page_ = nil;
        var current_page = self;

        if (current_page != nil || (context.root_transition != nil && context.root_transition.root_window == nil))
            SequenceUtil::startPageTransition(context, current_page, next_page);

        context.syncOutRootTransition();
        context.closePage(self);

        if (self.on_close_func_ != nil)
            self.on_close_func_(context, self.on_close_func_arg_)

        self.on_close_func_ = nil;
        self.on_close_func_arg_ = nil;
        next_page.visible = true;
        context.pageInRootTransition();
        context.leaveEventLoop();
    }

    method onInitialize(context)
    {
        self.saved_frame_interval_ = menu::FrameInterval;
        menu::FrameInterval = 2;

        SceneFaceUtil::SetSignalHandler(SceneFace, SceneFaceUtil::HandleType::SCENE_START);

        var define = intro_define_;
        var scene_alias = define.scene_alias_;
        self.caption_page = define.caption_page_;
        self.caption_list = define.caption_data_ ? nil : CaptionUtil::Caption(define.caption_data_);

        var cp = nil;
        var dp = GAME_STATUS.user_profile.residence.getPlayer();

        SceneFaceUtil::loadSceneByCommand(SceneFace, CommandAlias::get(scene_alias), cp, dp, true);
        SceneFace.execCommand("setsounddirectparam %f".format(SoundUtil::GetNarrationVolume()));
        SoundUtil::BGMFadeout(1.0);

        var path = define.sound_path_;

        if (path != nil)
        {
            var gain = define.sound_gain_;
            SoundUtil::PlayStream(path, false, SoundUtil::GetSceneBGMVolume(SoundUtil::SCENE_MENU) * gain);
            SoundUtil::PauseStream(true);
        }
        else if (define.bgm_code_ != nil)
        {
            SoundUtil::BGMPlayGroup(SoundUtil::SCENE_MENU, define.bgm_code_, SoundUtil::REPEAT_OFF);
            SoundUtil::BGMPause(true);
        }

        if (intro_define_.game_flag_name_ != nil)
            GLOBAL_STATUS.user_profile.game_flags.setFlag("TOP_SCENES", intro_define_.game_flag_name_, true);

        var lang = pdistd::MLocale::getLanguage();
        Caption.text = "";

        Caption.visible = self.intro_define_.audio_languages_.indexOf(lang) < 0;

        ButtonHelpGT5.set(context, [
            ["Square", context.translate(ROOT, "MyHome", "BUTTON_HELP_CHANGE_VIEW")],
            [ButtonHelpGT5.getCancelButtonName(), context.translate(ROOT, "MyHome", "BUTTON_HELP_CANCEL")]
        ]);

        ButtonHelpGT5.hide();

        TimeCode.visible = false;
        context.cursor_visible = false;
    }

    method onFinalize(context)
    {
        ButtonHelpGT5.clear();
        SceneFaceUtil::SetWaitSceneFace(context, nil);

        if (self.watcher != nil)
        {
            WatcherUtil::Delete(self.watcher);
            self.watcher = nil;
        }

        menu::FrameInterval = self.saved_frame_interval_;
        self.intro_define_ = nil;
        self.caption_page = nil;
        self.caption_list = nil;
        self.start_time = nil;
        self.saved_frame_interval_ = nil;
    }

    method onActivate(context)
    {
        main::sound.play("ok");
        close(context);

        return EVENTRESULT_FILTER;
    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        close(context);

        return EVENTRESULT_FILTER;
    }

    method onKeyPress(context, event)
    {
        switch (event.keysym)
        {
            case CELL_PAD_CTRL_TRIANGLE:
            case CELL_PAD_CTRL_SQUARE:
                Caption.visible = !Caption.visible;
                return EVENTRESULT_FILTER;   
        }

        return EVENTRESULT_CONTINUE;
    }

    method onTick(context)
    {
        if (self.watcher == nil)
            return;

        var elapsed_time_ms = (main::pdistd::GetSystemTimeMicroSecond() - self.start_time) / 1000;

        if (self.caption_list.isNeedUpdate(elapsed_time_ms))
        {
            var text = self.caption_list.getCaption(elapsed_time_ms);
            if (text != nil)
            {
                if (text.isInstanceOf(String))
                {
                    Caption.text = context.translate(ROOT, self.caption_page, text);
                    Title1.text = "";
                    Title2.text = "";
                }
                else if (text.isInstanceOf(Array))
                {
                    if (text[0] == "title")
                    {
                        Title1.text = context.translate(ROOT, self.caption_page, text[1]);
                        Title2.text = text.size >= 3 ? context.translate(ROOT, self.caption_page, text[2]) : "";
                    }
                }
            }
        }

        if (elapsed_time_ms < 3000)
            ButtonHelpGT5.appearIf();
        else
            ButtonHelpGT5.hideIf();
    }

    method startCaption(context)
    {
        if (self.caption_list == nil)
            return;

        self.start_time = main::pdistd::GetSystemTimeMicroSecond();
        self.caption_list.reset();

        if (self.watcher == nil)
            self.watcher = WatcherUtil::Create(context, onTick, 2);
    }

    module SceneFace
    {
        function onFadeOutStart(context)
        {
            ROOT.close(context);
        }

        method onSignal(context, enum, param)
        {
            switch (enum)
            {
                case SceneFaceUtil::HandleType::EVENT_MASK_OFF:
                    break;
            
                case "MOVIE_START":
                    SoundUtil::PauseStream(false);
                    SoundUtil::BGMPause(false);
                    context.pageInRootTransition();
                    ROOT.startCaption(context);
                    break;

                case "FADE_OUT_START":
                    onFadeOutStart(context);
                    break;    
            }
        
        
        }
    }
}