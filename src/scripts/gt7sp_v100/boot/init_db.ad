//---------------------------------------------------------------------------------------
// init_db.ad
//
// (ä¾‹)
// init_db.ad
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// function
//---------------------------------------------------------------------------------------

function initDatabase(type)
{
    initSpecDB(type);
    initMenuDB();
    initUserDB();
}

async function initSpecDB(type)
{
    TASK_LOG("initSpecDB");

    var specdb = "PREVIEW";
    switch (type)
    {
        case "gt7sp":
            specdb = "GT7SP";
            break;
        case "academy":
            specdb = "GT6";
            break;
        case "demo":
            specdb = "DEMO";
            break;
        case "beta":
            specdb = "BETA";
            break;
        case "behavior-sa":
            specdb = "BEHAVIOR";
            break;
    }

    if (main::AppOpt["specdb"] != nil)
        specdb = main::AppOpt["specdb"];

    main::SpecDatabaseUtil::open(specdb);

    var lang = pdistd::MLocale::getLanguage() == "JP" ? "JP" : "US";
    AwaitTask(function() { gtengine::MSpecDB::initialize(main::SPECDB, "specdb/%{specdb}/%{lang}/CarName.dat", true); });
}

async function initMenuDB()
{
    TASK_LOG("initMenuDB");

    var key0 = "\xE3\xEF\xD8\x88\x81\x31\x5C\xA9\xF3\xA5\xD8\xAA\xFE\xC2\xC5\xF1\x01\x75\xDF\xBE\x70\x83\xDA\x4C\x07\x3A\x48\xE5\x2C\xC0\x1C\x43";
    var k = "\x81\xCE\x29\x38\x73\xB3\x42\xF4\xC9\x6E\x85\x0C\x97\x7C\xBF\x7F\x9D\xF6\x74\xDA\xC0\x07\xCA\x19\x51\xB8\x21\x50\x9F\x3A\xDF\xA4";
    var key1 = "\x4C\x6E\x4C\x9E\x70\xEE\x2E\xF1\x90\x31\x57\xBB\xF7\x6C\xA0\x4F\x15\xF0\xA9\x57\x31\x5E\x7C\xD3\xE3\x9C\x5F\x2E\x36\xCA\xFA\x3B";
    main::MENUDB = pdistd::MSqlite();
    var res = await main::MENUDB.open("/database/gt7sp/menudb.dat", 0, 
        1, 
        k);

    ASSERT(res == SQLITE_OK);

    main::MENUDB.executeQuery("PRAGMA cache_size = 2000");
}

async function init_user_db()
{
    var res = await main::USERDB.open("/APP_DATA/db/userdb0101.dat", 8 * 1024 * 1024, 
        0x02 | 0x04);

    if (res != 0)
        return false;

    res = main::DBUtil::updateTableVersion(main::USERDB, "t_db_master", 100);
    if (!res)
        return false;
    
    return true;
}

function initUserDB()
{
    TASK_LOG("initUserDB");

    main::USERDB = pdistd::MSqlite();
    var res = init_user_db();
    if (!res)
    {
        USERDB.close();

        pdistd::RemoveFile("/APP_DATA/db/userdb0101.dat");
        res = init_user_db();
        if (!res)
        {
            ErrorUtil::abortDiskFull(26, "32MB", __FILE__, __LINE__);
        }
        boot_state.is_corrupted_user_db = true;
    }
}