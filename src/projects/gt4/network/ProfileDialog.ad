module PROJECT::ROOT
{
	static result = nil;

	function setFadeActor(widget)
	{
		var actor = main::menu::MFadeActor(widget, 1.0);
		actor.repeat = true;
		actor.period = 0.25;
		widget.actor = actor;
	}
	
	function setMoveActor(widget)
	{
		var actor = main::menu::MMoveActor(widget, widget.x, PS2_SCREEN_H_F);
		widget.actor = actor;
		widget.actor.ratio = 0.2;
	}
	
	function onLoad(context)
	{
		setFadeActor(ProfilePane::Buttons::OK::bgf);
		setMoveActor(ProfilePane);
	}

	function onInitialize(context)
	{
		ProfilePane::initialize(context);
	}

	function onCancel(context)
	{
		main::sound.play("disable");
		return EVENTRESULT_FILTER;
	}
	
	function open_motion(context)
	{
		context.pushPage(ProfileDialog);
		ProfilePane.actor.out = false;
		context.sync(0.5);
	}
	
	function close_motion(context)
	{
		ProfilePane.actor.out = true;
		context.sync(0.5);
		context.closePage(ProfileDialog);
	}

	function open(context)
	{
		open_motion(context);
		result = false;
		context.getUpdateContext().enterEventLoop();
		return result;
	}
	
	function close(context)
	{
		ProfileDialog.setFocus(nil);
		close_motion(context);
		context.getUpdateContext().leaveEventLoop();
	}
}

module PROJECT::ROOT::ProfilePane
{
	function initialize(context)
	{
		setLabel(context);
		setProfile(context);
	
		ProfilePane.doColorize();
		ProfilePane.actor.out = true;
		ProfilePane.actor.warp();
	}
	
	function translateOM(context, key, arg)
	{
		if (arg == nil)
			return context.translate(ProfileDialog, "OnlineMessage", key);
		else
			return context.translate(ProfileDialog, "OnlineMessage", key).build(arg);
	}
	
	static sLabelItem = ["Player", "Sex", "Age"];
	function setLabel(context)
	{
		for (var i = 0; i < sLabelItem.size; i++)
		{
			ProfilePane[sLabelItem[i]].label.text = translateOM(context,"PROFILE_" + sLabelItem[i].upcase());
		}
	
		var option_menu = Sex::OptionMenu::popup::vbox;
		option_menu["None"]["label"].text = translateOM(context, "PROFILE_NOANSWER");
		option_menu["Male"]["label"].text = translateOM(context, "PROFILE_MALE");
		option_menu["Female"]["label"].text = translateOM(context, "PROFILE_FEMALE");
	}

	function setProfile(context)
	{
		var profile = getPlayerProfile(context, main::network.my_id, 1);
		if (profile == nil)
		{
			restart(context);
			return;
		}
	
		Player::text.text = main::network.my_name;
	
		if (0 <= profile[3] && profile[3] <= 2)
			Sex::OptionMenu.setIndex(context, profile[3]);
		else
			Sex::OptionMenu.setIndex(context, 0);
	
		Age::edit::number::input.value = profile[4];
	}
	
	function updateProfile(context)
	{
		var stats = main::menu::MPlayerStats::unpack(main::network.accountGetStats());
	
		stats.sex = Sex::OptionMenu.index;
		stats.age = Age::edit::number::input.value;
	
		var strStats = stats.pack();
	
		var res = main::network.accountUpdateStats(strStats);
	
		if (!res)
		{
			openOnlineErrorDialog(context);
		}
	
		return res;
	}
}

module PROJECT::ROOT::ProfilePane::Buttons::OK
{
	function onActivate(context, event, item)
	{
		var age = Age::edit::number::input.value;
		var sex = Sex::OptionMenu.index;
	
		if (age == 0 || sex == 0)
		{
			main::sound.play("disable");
	
			openConfirmDialog(context, DIALOG_ERROR, context.translate(ProfileDialog, "OnlineMessage", "AGE_SEX_NECESSARY_ERROR"));
			return EVENTRESULT_FILTER;
		}
	
		if (main::menu::MSystem::GetRegionCode() != "jp" && age < 18)
		{
			main::sound.play("disable");
	
			openConfirmDialog(context, DIALOG_ERROR, context.translate(ProfileDialog, "OnlineMessage", "TOO_YOUNG_TO_PLAY"));
			return EVENTRESULT_FILTER;
		}
	
		main::sound.play("ok");
	
		var text = context.translate(ProfileDialog, "OnlineMessage", "NOW_UPDATING");
	
		var res = openProcessDialog(context, text, updateProfile);
	
		if (res)
		{
			openConfirmDialog(context, DIALOG_OK, context.translate(ProfileDialog, "OnlineMessage", "UPDATE_WAS_SUCCESSFUL"));
	
			close(context);
			result = true;
		}
		
		return EVENTRESULT_FILTER;
	}
}