module PROJECT::ROOT
{
	static set_speed = nil;
	static set_accel = nil;
	static set_brake = nil;
	static set_track = nil;
	
	function onInitialize(context)
	{
		var speed = true;
		if (LoggerRoot::logctrl.display_speed)
			speed = false;
		set_speed = speed;

		var accel = true;
		if (LoggerRoot::logctrl.display_accel)
			accel = false;
		set_accel = accel;

		var brake = true;
		if(LoggerRoot::logctrl.display_brake)
			brake = false;
		set_brake = brake;
		
		var track = 0;
		if (!LoggerRoot::logctrl.display_TrackA)
			track = 1;
		else if (LoggerRoot::logctrl.display_TrackB)
			track = 2;
		set_track = track;

		LoggerPopup::Pane::speed::OptionMenu.setIndex(context, speed);
		LoggerPopup::Pane::accel::OptionMenu.setIndex(context, accel);
		LoggerPopup::Pane::brake::OptionMenu.setIndex(context, brake);
		LoggerPopup::Pane::track::OptionMenu.setIndex(context, track);
	}

	function onFinalize(context)
	{
		set_speed = nil;
		set_accel = nil;
		set_brake = nil;
		set_track = nil;
	}

	function close(context)
	{
		context.closePage(LoggerPopup);
		LoggerRoot::logger_mode(context);
	}

	function cancel(context)
	{
		LoggerRoot::logctrl.display_speed = set_speed == false;
		LoggerRoot::logctrl.display_accel = set_accel == false;
		LoggerRoot::logctrl.display_brake = set_brake == false;

		setTrack(set_track);
		main::sound.play("cancel");

		close(context);
	}

	function onCancel(context)
	{
		cancel(context);
		return EVENTRESULT_FILTER;
	}
	
	function setTrack(index)
	{
		if (index == 0)
		{
			LoggerRoot::logctrl.display_TrackA = true;
			LoggerRoot::logctrl.display_TrackB = false;
		}
		else if (index == 1)
		{
			LoggerRoot::logctrl.display_TrackA = false;
			LoggerRoot::logctrl.display_TrackB = true;
		}
		else
		{
			LoggerRoot::logctrl.display_TrackA = true;
			LoggerRoot::logctrl.display_TrackB = true;	
		}
	}
}
module PROJECT::ROOT::Pane::speed::OptionMenu	
{
	function onValueChanged(context, index)
	{
		main::sound.play("ok");
		LoggerRoot::logctrl.display_speed = index == 0;
	}
}
module PROJECT::ROOT::Pane::accel::OptionMenu	
{
	function onValueChanged(context, index)
	{
		main::sound.play("ok");
		LoggerRoot::logctrl.display_accel = index == 0;
	}
}		
module PROJECT::ROOT::Pane::brake::OptionMenu	
{
	function onValueChanged(context, index)
	{
		main::sound.play("ok");
		LoggerRoot::logctrl.display_brake = index == 0;
	}
}	

module PROJECT::ROOT::Pane::track::OptionMenu	
{
	function onValueChanged(context, index)
	{
		main::sound.play("ok");
		setTrack(index);
	}
}	

module PROJECT::ROOT::Pane::Buttons::No
{
	function onActivate(context)
	{
		cancel(context);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::Pane::Buttons::Yes
{
	function onActivate(context)
	{
		main::sound.play("ok");
		close(context);
		return EVENTRESULT_FILTER;
	}
}