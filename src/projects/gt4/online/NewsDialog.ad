module PROJECT::ROOT
{
    static sType = nil;

    function setFadeActor(widget)
	{
        var actor = main::menu::MFadeActor(widget, 1.0);
        actor.repeat = true;
        actor.period = 0.25;
        widget.actor = actor;
    }

    function setMoveActor(widget)
	{
        var actor = main::menu::MMoveActor(widget, widget.x, PS2_SCREEN_H_F);
        widget.actor = actor;
        widget.actor.ratio = 0.2;
    }

    function onLoad(context)
	{
        setFadeActor(NewsPane::Buttons::OK::bgf);
        setMoveActor(NewsPane);
    }

    function onInitialize(context)
	{
        NewsPane::initialize(context);
    }

    function onCancel(context)
	{
        main::sound.play("cancel");
        close(context);
        return EVENTRESULT_FILTER;
    }
	
    function open_motion(context)
	{
        context.pushPage(NewsDialog);
        NewsPane.actor.out = false;
        context.sync(0.5);
    }

    function close_motion(context)
	{
        NewsPane.actor.out = true;
        context.sync(0.5);
        context.closePage(NewsDialog);
    }
    function open(context, type)
	{
        sType = type;
        open_motion(context);
        context.getUpdateContext().enterEventLoop();
    }

    function close(context)
	{
        NewsDialog.setFocus(nil);
        close_motion(context);
        context.getUpdateContext().leaveEventLoop();
        sType = nil;
    }
}

module PROJECT::ROOT::NewsPane
{
	function onKeyPress(context, event)
	{
		switch(event.keysym)
		{
			case PS2_PAD_CTRL_R3_UP:
			case PS2_PAD_CTRL_L3_UP:
				if (News.manualTargetIncY(24.0))
					main::sound.play("cursor");
				return EVENTRESULT_FILTER;

			case PS2_PAD_CTRL_R3_DOWN:
			case PS2_PAD_CTRL_L3_DOWN:
				if (News.manualTargetIncY(-24.0))
					main::sound.play("cursor");
				return EVENTRESULT_FILTER;
		}
		return EVENTRESULT_CONTINUE;
	}

	function initialize(context)
	{
		switch(sType)
		{
			case "News":
				setNews(context);
				break;
				
			case "TAInfo":
				setTAInfo(context);
				break;
		}
		NewsPane.actor.out = true;
		NewsPane.actor.warp();
	}
  

	function setText(txt)
	{
		var info_text = News::clip::space::Info::label;
		info_text.text = txt;
		|var w, var h| = info_text.getTextSize();
		h *= 1.1;
	
		if (h > News::clip.h)
		{
			News::vbar.visible = true;
			News::clip::space.h = h;
			News::clip::space::Info.h = h;
		}
		else
			News::vbar.visible = false;
	
		News.updateGeometry();
	}
	
	static sNews = nil;

	function setNews(context)
	{
		Title::title.text = context.translate(NewsDialog, "TITLE_News");
		if (sNews == nil)
		{
			var news = nil;
			var announce_list = main::network.getAnnounce("all");
			if (announce_list != nil)
			{
				if (announce_list.size > 0)
				{
					news = "";
					
					for (var i = 0; i < announce_list.size; i++)
					{
						var column = announce_list[i];
						news += (column[1] + "\n\n");
					}
				}
			}
			sNews = news;
		}
		var txt = sNews;
		if (txt == nil)
			txt = context.translate(NewsDialog, "NO_NEWS_FOUND");
	
		setText(txt);
	}
	
	static sTAInfo = nil;

	function setTAInfo(context)
	{
		Title::title.text = context.translate(NewsDialog, "TITLE_TAInfo");
		if (sTAInfo == nil)
			sTAInfo = getTAInfo(context);
	
		var txt = sTAInfo;
		if (txt == nil)
			txt = context.translate(NewsDialog, "NO_NEWS_FOUND");
	
		setText(txt);
	}
}

module PROJECT::ROOT::NewsPane::Buttons::OK
{
	function onActivate(context)
	{
		main::sound.play("ok");
		close(context);
		return EVENTRESULT_FILTER;
	}
}