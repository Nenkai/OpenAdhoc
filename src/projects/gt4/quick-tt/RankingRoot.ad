module PROJECT::ROOT
{
    static current_unit = nil;

    function onInitialize(context)
    {
        hidden.visible = false;

        var quick_work = main::menu::MQuickWork();
        var crs  = quick_work.courseLabel;

        var unit = main::game.course_record.getUnit(crs);
        if (unit == nil)
        {
            return;
        }

        current_unit = unit;

        Title::label.text = context.translate(RankingRoot, "CourseName", crs);

        refresh(context);
    }

    function onFinalize(context)
    {
        ScrollBox::SelectBox.clearWindow(context);
        current_unit = nil;
    }

    function onKeyPress(context, event)
    {
        switch(event.keysym)
        {
			case PS2_PAD_CTRL_START:
			{
				main::sound.play("return");
				PasscodePopup::open(context, current_unit, ScrollBox::SelectBox.index);
				return EVENTRESULT_FILTER;
			}
            break;  
		}

        return EVENTRESULT_CONTINUE;
    }

    function onCancel(context, event, item)
    {
        main::sound.play("cancel");
        start_page(context, TimeTrialRoot);
        return EVENTRESULT_FILTER;
    }

    function refresh(context)
    {
        var unit = current_unit;
        var rank_num = unit.getRankNum();

        ScrollBox::SelectBox.clearWindow(context);

        for (var i = 0; i < 10; i++)
        {
            var item = ((i % 2) == 0) ? hidden::Item0.doCopy() : hidden::Item1.doCopy();

            item["rank"].text = (i + 1).toString();

            if (i < rank_num)
            {
                item["car"].text = unit.getCarName(i);
                item["car"].abbreviate();

                item["date"].text = unit.getDate(i);
                item["time"].text = unit.getBestTime(i);
            }

            ScrollBox::SelectBox.appendChild(context, item);
        }
    }
}

module PROJECT::ROOT::ScrollBox::SelectBox
{
    function onValueChanged(context, index)
    {
    }

    function onActivate(context, event)
    {
        var unit = current_unit;
        var rank_num = unit.getRankNum();
        var index = SelectBox.index;

        if (index >= rank_num)
            return EVENTRESULT_FILTER;

        main::sound.play("ok");

        if (openConfirmDialog(context, DIALOG_QUERY, context.translate(RankingRoot, "do you remove?")))
        {
            current_unit.deleteEntry(SelectBox.index);

            RankingRoot.visible = false;
            SelectBox.outFocus(RankingRoot);

            refresh(context);

            SelectBox.callFocus(RankingRoot);
            RankingRoot.visible = true;
        }

        return EVENTRESULT_FILTER;
    }
}