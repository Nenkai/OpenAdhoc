








module PROJECT::ROOT
{
    static lower_case = nil;

    function setCase()
    {
        if (lower_case)
        {
            Keyboard::LowerCase.visible = true;
            Keyboard::UpperCase.visible = false;
        }
        else
        {
            Keyboard::UpperCase.visible = true;
            Keyboard::LowerCase.visible = false;
        }
    }

    function onInitialize(context)
    {
        lower_case = false;
        setCase();

        ToolTip::tip.remove();
        ToolTip::tip.value = context.translate(ROOT, "Please input your name within 10 letters");
        ROOT.setFocus(Keyboard::key_enter);
    }

    function onFinalize(context)
    {
        lower_case = nil;
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        Keyboard::input.backspace();
        set_case(context);
    }

    function do_enter(context)
    {
        var value = ROOT::Keyboard::input.value;
        if (value == "")
        {
            main::sound.play("disable");
            openConfirmDialog(context, DIALOG_ERROR, context.translate(ROOT, "No letters"));
            return;
        }
        else
        {
            main::sound.play("ok");
            
            if (openConfirmDialog(context, DIALOG_QUERY, context.translate(ROOT, "Are you sure your name is this").format(value)))
            {
                main::game.username = value;

#ifdef GT4O_US_BETA
                if (main.defined("FillCarAndMoneyOnBoot") && main::FillCarAndMoneyOnBoot == true)
                    fillCarAndMoney();
#endif

                openConfirmDialog(context, DIALOG_OK, context.translate(ROOT, "then create save data"));
                if (!createGameData(context))
                {
                    exitBootSequence(context);
                    return;
                }

                main::menu::MMemoryCardManager::setExistValidGameData(true);
                start_page(context, ExplainRoot);
            }
        }
    }

    function onActivate(context, event, item)
    {
        var input = Keyboard::input;
        var widget = event.widget;
        var ch = widget.name.substr(4);

        switch (ch)
        {
            case "backspace":
                main::sound.play("cursor");
                input.backspace();
                break;

            case "enter":
                do_enter(context);
                break;

            default:
                main::sound.play("cursor");

                if (!lower_case)
                    ch = ch.upcase();
                
                input.putString(ch);
                break;
        }

        set_case(context);
        return EVENTRESULT_FILTER;
    }
    
    function set_case(context)
    {
        var last_case = lower_case;
        lower_case = Keyboard::input.value != "";

        if (last_case != lower_case)
        {
            var fwidget = ROOT.getFocusedWidget();
            if (fwidget != nil)
            {
                var name = fwidget.name;
                setCase();

                if (!lower_case)
                {
                    if (Keyboard::UpperCase.defined(name))
                        ROOT.setFocus(Keyboard::UpperCase[name]);
                }
                else 
                {
                    if (Keyboard::LowerCase.defined(name))
                        ROOT.setFocus(Keyboard::LowerCase[name]);
                }
            }
            else
                setCase();
        }
    }
}