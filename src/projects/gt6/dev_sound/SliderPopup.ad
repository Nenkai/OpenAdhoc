











module SliderPopup
{
    attribute format_function;
    attribute format_function_arg;
    attribute format_string;
    attribute quantizer;
    attribute zero_text;

    method open(context)
    {
        self.open_wait(context);

        var scalebar = self.ScaleBar;
        if (scalebar.cancel)
            return nil;

        var result = ['index' : scalebar.index, 'value' : scalebar.value];
        return result;
    }

    method setRange(min, max)
    {
        var scalebar = self.ScaleBar;
        scalebar.min = min;
        scalebar.max = max;
    }

    method setStep(step)
    {
        var scalebar = self.ScaleBar;
        scalebar.step = step;
    }

    method setValue(value)
    {
        var scalebar = self.ScaleBar;
        scalebar.value = value;
    }

    method setZeroText(string)
    {
        self.zero_text = string;
    }

    method setFormatFunction(f, arg)
    {
        self.format_function = f;
        self.format_function_arg = arg;
    }

    method setPositionWidgetRelative(widget)
    {
        var pos = widget.screen_position;
        var w = ScaleBar;

        w.x = pos[0];
        w.y = pos[1] - w.h;
    }

    function default_value_format_function(context, value, slider, arg)
    {
        var q = Math::round(value * slider.quantizer);
        if (q == 0.0 && slider.zero_text != nil)
            return slider.zero_text;

        return slider.format_string.format(q);
    }

    method onInitialize(context)
    {
        if (self.format_function == nil)
            self.format_function = default_value_format_function;

        var scalebar = self.ScaleBar;
        var stepscale = Math::log10(scalebar.step);
        var precision = stepscale >= 0.0 ? 0 : Math::ceil(-stepscale).toInt();
        
        if (x < 0.0)
        if (precision <= 0)
            self.format_string = "%d";
        else
            self.format_string = "%." + precision.toString() + "t";

        context.pushEvent(main::menu::MScriptEvent(context, self, "on_initialize"));
    }

    method onFinalize(context)
    {
        self.format_function = nil;
        self.format_function_arg = nil;
        self.format_string = nil;
        self.quantizer = nil;
        self.zero_text = nil;
    }

    method on_initialize(context)
    {
        self.ScaleBar.openPopup(context);
    }

    method open_wait(context)
    {
        context.pushPage(self);
        SequenceUtil::enterEventLoop(context, self);
    }

    method close_signal(context)
    {
        context.closePage(self);
        SequenceUtil::leaveEventLoop(context, self);
    }

    method call_format_func(context, value)
    {
        return self.format_function(context, value, self, self.format_function_arg);
    }

    method onActivate(context)
    {
        return EVENTRESULT_FILTER;
    }

    method onCancel(context)
    {
        return EVENTRESULT_FILTER;
    }
}

module SliderPopup::ScaleBar
{
    method onPopupOpen(context)
    {
        var popup = self['popup'];
        var func = SliderPopup.call_format_func;
        popup.min.text = func(context, self.min);
        popup.max.text = func(context, self.max);
    }

    method onPopupClosed(context)
    {
        SliderPopup.close_signal(context);
    }

    method onValueChanged(context)
    {
        var popup = self['popup'];
        var range = self.display_max - self.display_min;
        var ratio = range == 0.0 ? 0.0 : (self.value - self.display_min) / range;
        popup.base.bar.bar.w = popup.base.bar.w * ratio;

        var func = SliderPopup.call_format_func;
        popup.Value.label.text = func(context, self.value);

        self.doInitialize(context);
    }
}