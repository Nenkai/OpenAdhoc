module PROJECT::ROOT
{
    static selected_name = nil;

    function getNumOfCars()
    {
        var result = 0;

        for (var i = 0; i < 10; i++)
        {
            var keyname = "part%02d".format(i + 1);
            var carnum = MethodRoot::getCategoryCarNum(keyname);
            result += carnum;
        }

        return result;
    }

    static num_of_cars = 0;

    function onLoad(context)
    {
        num_of_cars = getNumOfCars();

        var margin_x = hidden::Item.x - ScrollWindow.x;
        var margin_y = hidden::Item.y - ScrollWindow.y;
        var cx = 0.0;

        for (var i = 0; i < 10; i++)
        {
            var part = "part%02d".format(i + 1);
            var item = hidden::Item.doCopy();
            item.defineStatic("part", part);
            item.name = part;
            ScrollWindow::clip::space.insertChild(item, ScrollWindow::clip::space::Surface);
            item.x = cx + margin_x;
            item.y = margin_y;
            cx += item.w;
        }
    }

    function onInitialize(context)
    {
        hidden.visible = false;
        ToolTip::tip.remove();
        MethodRoot::current_method = "ByHistory";

        Tab::Maker::info.text = MethodRoot::getCarsString(context, MakerRoot::num_of_cars);
        Tab::History::info.text = MethodRoot::getCarsString(context, num_of_cars);
        Tab::Favorite::label.adjustScale();
        Tab::Favorite::info.text = MethodRoot::getCarsString(context, MethodRoot::getNumOfFavoriteCars());

        Tab::Maker.active = false;
        Tab::History.active = true;

        if (selected_name == nil)
            ROOT.setFocus(Tab::History);
        else if (selected_name == "Favorite")
            ROOT.setFocus(Tab::Favorite);
        else if (selected_name == "Maker")
            ROOT.setFocus(Tab::Maker);
        else if (selected_name == "History")
            ROOT.setFocus(Tab::History)
        else
            ROOT.setFocus(ScrollWindow::clip::space[selected_name]);
    }

    function onFinalize(context) { }

    function onKeyPress(context, event) { return EVENTRESULT_CONTINUE; }

    function remember_focus()
    {
        var fwidget = ROOT.getFocusedWidget();

        if (fwidget != nil)
            selected_name = fwidget.name;
    }

    function getCurrentCategory()
    {
        return selected_name;
    }

    function onCancel(context, event, item)
    {
        main::sound.play("cancel");

        selected_name = nil;

        if (GameRoot::current_game == "SplitBattle")
            start_page(context, SplitRoot);
        else
            start_page(context, CourseRoot);

        return EVENTRESULT_FILTER;
    }

    function onActivate(context, event, item)
    {
        if (item.name == "History")
            return EVENTRESULT_FILTER;

        main::sound.play("ok");

        remember_focus();

        start_page(context, CarRoot);

        return EVENTRESULT_FILTER;
    }

    function on_focus_enter(context, event)
    {
        var part = event.widget["part"];
        var num = MethodRoot::getCategoryCarNum(part);
        var part_name = context.translate(ROOT, part);
        ToolTip::tip.value = part_name + "    " + MethodRoot::getCarsString(context, num);
        Doc.text = context.translate(ROOT, "doc_" + part);
    }
}

module PROJECT::ROOT::Tab::Maker
{
    function onActivate(context, event, item)
    {
        main::sound.play("ok");
        start_page(context, MakerRoot);

        return EVENTRESULT_FILTER;
    }

    function onFocusEnter(context, event)
    {
        ToolTip::tip.key = "Maker";
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Tab::History
{
    function onActivate(context, event, item)
    {
        main::sound.play("cursor");
        ROOT.setFocus(ScrollWindow::clip::space::part01);

        return EVENTRESULT_FILTER;
    }

    function onFocusEnter(context, event)
    {
        ToolTip::tip.key = "History";
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Tab::Favorite
{
    function onActivate(context, event, item)
    {
        var num = MethodRoot::getNumOfFavoriteCars();

        if (num <= 0)
        {
            main::sound.play("disable");
            openConfirmDialog(context, DIALOG_ERROR, context.translate(MakerRoot, "no favorite cars"));
            return EVENTRESULT_FILTER;
        }

        main::sound.play("ok");
        MethodRoot::current_method = "ByFavorite";
        remember_focus();
        start_page(context, CarRoot);

        return EVENTRESULT_FILTER;
    }

    function onFocusEnter(context, event)
    {
        ToolTip::tip.value = context.translate(MakerRoot, "TOOLTIP|Favorite").format(main::game.username);
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::hidden::Item
{
    function onFocusEnter(context, event)
    {
        on_focus_enter(context, event);
    }
}