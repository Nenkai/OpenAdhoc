












module ROOT
{
    hidden.visible = false;

    function captureIcon(context, sceneface, cp, large, path, use_lod_model)
    {
        var free_size_byte = pdistd::GetDiskFreeSize("/APP_DATA");
        var threshold = 32 * 1024 * 1024;
        if (free_size_byte < threshold)
            return;
        
        var sf = sceneface;
        sf.visible = true;

        if (large)
        {
            sf.w = 1920;
            sf.h = 1080;
        }
        else
        {
            sf.w = 192;
            sf.h = 108;
        }

        sf.setDefaultCarParameter(cp);
        sf.setClearColorBuffer(true);

        var image_cmd = [
            "clearAllModel",
            "setDefaultSceneParameter",
            "setEnvClearMode 1",
            "setEffectParameter colorcorrect[0].enable 1",
            "setEffectParameter colorcorrect[0].gain 0.35 0.35 0.35",
            "setEffectParameter colorcorrect[0].env 1  ",
            "setEnvironmentParameter light.worldLight.enableAmbientScale 1",
            "setEnvironmentParameter light.worldLight.scale.v[3] 2",
            "setEffectParameter colorcorrect[1].enable 1",
            "setEffectParameter colorcorrect[1].gain 2 2 2",
            "setLightDir -0.344 0.889 -0.302",
            "setLightDiffuse    1 1 1",
            "setPerspective 5 0 0.1 1000",
            "setCameraPosition -10 0.6 -26",
            "setCameraLookat    0.1 0.98 0",
            "setGlobalAmbient 0 0 0",
            "setEnvironmentParameter light.worldLight.ambientCube.master 2.9",
            "setGridDisp 0",
            "setAAMode     best",
            "loadModel code:bg016%env   env1 false true",
            "setBGColor 0.0 0.0 0.0",
            "setGain 1.0",
        ];

        ROOT::Command.text = "";
        foreach (var c in image_cmd)
        {
            sf.execCommand(c);
            ROOT::Command.text += c + "\n";
        }

        sf.saveCommandQueue();
        sf.resetCommandQueue();

        if (use_lod_model != nil && use_lod_model)
            sf.execCommand("changeLodCar _default car0");
        else
            sf.execCommand("changeCar _default car0");

        sf.execCommand("setCarSteer -21.29");
        sf.execCommand("resetGlobalMotionFrame");

        context.wait(0.1);

        var counter = 0;
        while (sf.isUnderSetup())
        {
            context.wait(0.3);
            if (++counter > 50)
                return;
        }

        sf.iconCaptureBegin();
        sf.iconShotImage();
        sf.waitTickEntry();

        var mask_cmd = [
            "setBGColor 1.0 1.0 1.0",
            "setGain 0.003",
            "setLightDiffuse  0 0 0 0",
            "setLightSpecular 0 0 0 0",
            "setAmbientCubeXp 0 0 0 0",
            "setAmbientCubeXm 0 0 0 0",
            "setAmbientCubeYp 0 0 0 0",
            "setAmbientCubeYm 0 0 0 0",
            "setAmbientCubeZp 0 0 0 0",
            "setAmbientCubeZm 0 0 0 0",
        ];

        foreach (var c in mask_cmd)
            sf.execCommand(c);

        sf.saveCommandQueue();
        sf.iconShotMask();
        sf.waitTickEntry();

        path -= ".png";
        pdistd::MakeDirectoryForFile(path);

        sf.iconCompositeSave(path);
        sf.iconCaptureEnd();
        sf.visible = false;
    }

    method onInitialize(context)
    {
        var car_list = [
            "huayra_11",
            "reventon_08",
            "focus_st_13",
            "karma_ecosport_12",
            "cizeta_v16t_94_prm",
            "z8_01",
            "_507_57",
            "abarth_1500_biposto_bertone_52",
            "deltawing_12",
            "r8_lms_ultra_12",
            "z4_gt3_11",
            "sls_amg_gt3_11",
            "gtr_nismo_gt3_13",
            "x_bow_r_12",
            "corvette_c7_14",
            "tesla_model_s_sig_perf_12",
            "tz3_stradale_11",
            "quattro_s1_86",
            "rocket_07",
            "countach_lp400_74_prm",
            "alpine_a110_1600s_68",
            "dino_246gt_69",
            "_458_italia_09",
            "acura_nsx_91",
            "ford_gt_06",
            "mp4_12c_10",
            "toyota_86_12",
        ];

        CarSelect::ListBox.setItemTemplate(context, hidden::Item);
        CarSelect::ListBox.setItemCount(car_list.size);

        for (var i = 0; i < car_list.size; i++)
        {
            var car_label = car_list[i];
            var car_code = gtengine::MSpecDB::getCarCode(car_label);
            var color = 0;
            
            var w = CarSelect::ListBox.getItemWidget(i, context);
            w.TextFace.text = car_label;
            w.defineAttribute("car_label", car_label);
            w.defineAttribute("color", color);
        }
    }

    module CarSelect::ListBox
    {
        method onActivate(context)
        {
            sound.play("next");
            var w = self.getItemWidget(self.focus_index);
            var cp = gtengine::MCarParameter(w.car_label);
            cp.color = w.color;

            var path = "/APP_DATA/thumb_test/%s_%02d.png".format(w.car_label, w.color);
            ROOT::captureIcon(context, ROOT::SceneFace, cp, true, path, false);
            ROOT::ImageFace.image_path = path + ".png";
            ROOT::ImageFace2.image_path = "piece/gt6/car_img/%s_%02d_cmp.img".format(w.car_label, w.color);
            return EVENTRESULT_FILTER;
        }
    }
}

