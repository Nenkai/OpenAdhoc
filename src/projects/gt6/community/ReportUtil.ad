












module ReportUtil
{
    module WHAT
    {
        static USER_NICKNAME = "UN";
        static USER_COMMENT = "UC";
        static USER_RECENT = "UR";
        static USER_PLAYTIME = "UP";
        static USER_PHOTO = "UPH";
        static USER_PUBLISH_PHOTO = "UPPH";
        static USER_PUBLISH_PHOTO_P = "UPPHP";
        static USER_PUBLISH_PHOTO_COMMENT = "UPPC";
        static CLUB_TITLE = "CT";
        static CLUB_DESCRIPTION = "CD";
        static CLUB_RECENT = "CR";
        static CLUB_PHOTO = "CPH";
        static EVENT_TITLE = "CET";
        static EVENT_DESCRIPTION = "CED";
        static EVENT_PHOTO = "CEPH";
        static BBS_THREAD_TITLE = "BTT";
        static BBS_THREAD_COMMENT = "BTC";
        static BBS_COMMENT = "BC";
        static BBS_COMMENT_PHOTO = "BCPH";
        static EVENT_RESULT = "CERT";
        static MESSAGE_COMMENT = "MC";
        static COURSE_TITLE = "CST";
        static COURSE_COMMENT = "CSC";
        static COURSE_PHOTO = "CSPH";
    }

    static TYPE_LIST = [0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,99];

    class Params
    {
        method __init__(what, key, value)
        {
            self.what = what;

            if (key.isInstanceOf(Array))
                self.key = key.join(",");
            else
                self.key = key;

            self.value = value;
            self.args = value;
        }

        attribute what;
        attribute key;
        attribute value;
        attribute args;
    }

    class Data
    {
        method __init__(user_id, type)
        {
            self.user_id = user_id;
            self.type = type;
        }

        attribute user_id;
        attribute type;
        attribute params_list;
    }

    function MessageData(message)
    {
        |var mail_id, var user_id, var sender, var subject, var body| = message;
        if (sender == "-")
            return nil;

        var d = Data(sender, "MESSAGE");
        var p1 = Params(WHAT::MESSAGE_COMMENT, mail_id, body);
        d.params_list = [p1];
        return d;
    }

    function ClubData(club)
    {
        if (club == nil)
            return nil;

        var user_id = list2text(club["user_id_list"]);
        var my_user_id = Grim2.getLoginUserId();
        if (user_id == my_user_id)
            return nil;

        var club_id = club["club_id"];
        var d = Data(user_id, "CLUB");
        var p1 = Params(WHAT::CLUB_TITLE, club_id, club["title"]);
        var p2 = Params(WHAT::CLUB_DESCRIPTION, club_id, list2text(club["description_list"]));
        d.params_list = [p1, p2];

        if (club["recent"] != "")
        {
            var p3 = Params(WHAT::CLUB_RECENT, club_id, club["recent"]);
            d.params_list.push(p3);
        }

        if (club["photo_id"] != "")
        {
            var p4 = Params(WHAT::CLUB_PHOTO, [club_id, club["photo_id"]], "");
            d.params_list.push(p4);
        }

        return d;
    }

    function EventData(club, event)
    {
        var user_id = list2text(club["user_id_list"]);
        var club_id = club["club_id"];
        var event_id = event["club_event_id"];

        var d = Data(user_id, "EVENT");
        var p1 = Params(WHAT::EVENT_TITLE, [club_id, event_id], list2text(event["title_list"]));
        var p2 = Params(WHAT::EVENT_DESCRIPTION, [club_id, event_id], list2text(event["description_list"]));
        d.params_list = [p1, p2];

        if (event["photo_id"] != "")
        {
            var p3 = Params(WHAT::EVENT_PHOTO, [club_id, event_id, event["photo_id"]], "");
            d.params_list.push(p3);
        }

        return d;
    }

    function BbsThreadData(club, bbs_thread)
    {
        var club_id = club["club_id"];

        var d = Data(bbs_thread["user_id"], "TOPIC");
        var p1 = Params(WHAT::BBS_THREAD_TITLE, [club_id, bbs_thread["thread_id"]], bbs_thread["title"]);
        var p2 = Params(WHAT::BBS_THREAD_COMMENT, [club_id, bbs_thread["thread_id"]], bbs_thread["comment"]);
        d.params_list = [p1, p2];
        return d;
    }

    function BbsCommentData(comment, no_comment)
    {
        var club_id = comment["_club_id"];
        
        var d = Data(comment["user_id"], "COMMENT");
        d.params_list = [];

        if (!no_comment)
        {
            var p1 = Params(WHAT::BBS_COMMENT, [club_id, comment["_thread_id"], comment["comment_id"]], comment["comment"]);
            d.params_list.push(p1);
        }

        if (comment["photo_id"] != "")
        {
            var p2 = Params(WHAT::BBS_COMMENT_PHOTO, [club_id, comment["_thread_id"], comment["comment_id"], comment["photo_id"]], "");
            d.params_list.push(p2);
        }

        return d;
    }

    function EventResultData(comment, race_result)
    {
        if (comment["_deleted"] != nil || race_result.mode == 0)
            return nil;

        var d = Data(comment["user_id"], "RESULT");
        var p1 = Params(WHAT::EVENT_RESULT, [comment["club_id"], comment["club_event_id"], comment["event_result_id"]], comment["_title"]);
        d.params_list = [p1];
        return d;
    }

    function ProfileData(profile)
    {
        var user_id = profile["user_id"];
        
        var d = Data(user_id, "MYPAGE_PROFILE");
        var p1 = Params(WHAT::USER_NICKNAME, user_id, profile["nickname"]);
        d.params_list = [p1];

        if (profile["comment"] != "")
        {
            var p2 = Params(WHAT::USER_COMMENT, user_id, profile["comment"]);
            d.params_list.push(p2);
        }

        if (profile["recent"] != "")
        {
            var p3 = Params(WHAT::USER_RECENT, user_id, profile["recent"]);
            d.params_list.push(p3);
        }

        if (profile["photo_id_avatar"] != "")
        {
            var p4 = Params(WHAT::USER_PHOTO, [user_id, profile["photo_id_avatar"]], "");
            d.params_list.push(p4);
        }

        return d;
    }

    function BestCarData(photo)
    {
        var user_id = photo["user_id"];
        
        var d = Data(user_id, "MYPAGE_CAR");
        var p1 = Params(WHAT::USER_PUBLISH_PHOTO, [user_id, photo["photo_id"]], "");
        var p2 = Params(WHAT::USER_PUBLISH_PHOTO_COMMENT, [user_id, photo["photo_id"]], photo["comment"]);
        d.params_list = [p1, p2];
        return d;
    }

    function PhotoData(photo)
    {
        var user_id = photo["user_id"];

        var d = Data(user_id, "MYPAGE_PHOTO");
        var p1 = Params(WHAT::USER_PUBLISH_PHOTO, [user_id, photo["photo_id"]], "");
        var p2 = Params(WHAT::USER_PUBLISH_PHOTO_COMMENT, [user_id, photo["photo_id"]], photo["comment"]);
        d.params_list = [p1, p2];
        return d;
    }

    function FriendPhotoData(photo)
    {
        var user_id = photo["user_id"];
        
        var d = Data(user_id, "PHOTOSTREAM");
        var p1 = Params(WHAT::USER_PUBLISH_PHOTO, [user_id, photo["photo_id"]], "");
        var p2 = Params(WHAT::USER_PUBLISH_PHOTO_COMMENT, [user_id, photo["photo_id"]], photo["comment"]);
        d.params_list = [p1, p2];
        return d;
    }

    function WorldPhotoData(photo)
    {
        var user_id = photo["user_id"];
        
        var d = Data(user_id, "PHOTOSTREAM");
        var p1 = Params(WHAT::USER_PUBLISH_PHOTO, [user_id, photo["photo_id"]], "");
        d.params_list = [p1];
        return d;
    }

    function CourseData(course)
    {
        var user_id = course["user_id"];
        var course_id = course["course_id"];

        var d = Data(user_id, "MYPAGE_COURSE");
        var p1 = Params(WHAT::COURSE_TITLE, [course_id], course["title"]);
        var p2 = Params(WHAT::COURSE_COMMENT, [course_id], course["comment"]);
        var p3 = Params(WHAT::COURSE_PHOTO, [course_id, course["photo_id"]], "");
        d.params_list = [p1, p2, p3];
        return d;
    }
}