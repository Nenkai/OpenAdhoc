//---------------------------------------------------------------------------------------
// MissionRoot.ad
//
// Mission Hall root
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

#define MISSION_COUNT 34

#ifndef LICENSE_B
    #define LICENSE_B "l0b"
    #define LICENSE_A "l0a"
    #define LICENSE_IB "lib"
    #define LICENSE_IA "lia"
    #define LICENSE_S "l0s"
#endif

module PROJECT::ROOT
{
    static license_tbl = ["", LICENSE_B, LICENSE_A, LICENSE_IB, LICENSE_IA, LICENSE_S];

    function get_license(idx)
    {
        var code = "l0m%04d".format(idx + 1);
        var race = main::menu::MRaceData(code);
        var need_license = race.getNeedLicense();

        if (need_license < 0 || license_tbl.size <= need_license)
            return "";
            
        return license_tbl[need_license];
    }

    function setFadeActor(widget)
    {
        var actor = main::menu::MFadeActor(widget, 1.0);
        actor.repeat = false;
        actor.period = 0.25;
        widget.actor = actor;
        widget.actor.out = false;
        widget.actor.warp();
    }

    function onInitialize(context)
    {
        hidden.visible = 0;

        enterPage(context, ROOT, "Mission Hall");

        var margin_x = 34.0 + 80.0;
        var margin_y = 16.0;

        var padding_x = 64.0;
        var padding_y = 32.0;

        for (var i = 0; i < MISSION_COUNT; i++)
        {
            var item = hidden::Item.doCopy();
            item["bg"].image_path = "image/gtmode/mission/mission%02d.png".format(i + 1);
            item["over"].image_path = "image/gtmode/mission/car%02d.png".format(i + 1);

            setFadeActor(item["over"]);

            var license = get_license(i);
            item.defineStatic("need_license", license);

            if (license != "")
                item["license"].image_path = "image/gtmode/mission/" + license + ".png";
            else
                item["license"].visible = false;

            item["title"].text = context.translate(ROOT, "MissionName", "TITLE_%02d".format(i + 1));
            item["title"].adjustScale();
            item["doc"].text = context.translate(ROOT, "MissionName", "DOCUMENT_%02d".format(i + 1));
            item["crs"].text = context.translate(ROOT, "MissionName", "COURSE_%02d".format(i + 1));
            item["crs"].adjustScale();
            item.defineStatic("idx", i + 1);
            ScrollWindow::clip::space.appendChild(context, item);
            item.x = (i / 2) * (PS2_SCREEN_H_F + padding_x) + margin_x;
            item.y = (i % 2) * (160.0 + padding_y) + margin_y;

            var unit = main::game.race_record.getUnit("l0m%04d".format(i + 1));
            item["Clear"].visible = unit.result == "1";
        }

        ScrollWindow.updateGeometry();
        ScrollWindow::clip::space.w = (PS2_SCREEN_H_F + padding_x) * ((MISSION_COUNT + 1) / 2) + (margin_x * 2);

        var fwidget = nil;

        if (main::game.major_menu_widget != "")
        {
            if (ScrollWindow::clip::space.defined(main::game.major_menu_widget))
            {
                fwidget = ScrollWindow::clip::space[main::game.major_menu_widget];
                main::game.major_menu_widget == ""; // BUG: '==' instead of '='
            }
        }

        if (fwidget == nil)
            fwidget = ScrollWindow::clip::space.first;
        
        ROOT.setFocus(fwidget);
        ScrollWindow.warp(fwidget);
    }

    function onFinalize(context)
    {
        ScrollWindow::clip::space.clearWindow(context);
        leavePage(context, ROOT);
    }

    // 10.000.000 Cr (Passing mission not implemented correctly) 
    // Select, R2, Select, R2, L1, L2, L2, Select, L1, R1, Select, R1, Select
    static craft_command = [
        PS2_PAD_CTRL_SELECT,
        PS2_PAD_CTRL_R2,
        PS2_PAD_CTRL_SELECT,
        PS2_PAD_CTRL_R2,
        PS2_PAD_CTRL_L1,
        PS2_PAD_CTRL_L2,
        PS2_PAD_CTRL_L2,
        PS2_PAD_CTRL_SELECT,
        PS2_PAD_CTRL_L1,
        PS2_PAD_CTRL_R1,
        PS2_PAD_CTRL_SELECT,
        PS2_PAD_CTRL_R1,
        PS2_PAD_CTRL_SELECT,
    ];

    function doCraft(context)
    {
        main::game.incMoney(10000000);
        refreshMoney(ROOT);
    }

    function onKeyPress(context, event)
    {
        if (craft(context, event, craft_command, doCraft))
        {
            return EVENTRESULT_FILTER;
        }

        return EVENTRESULT_CONTINUE;
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        main::game.major_menu_widget = "";
        set_last_focus("Mission");
        start_page(context, TopRoot);
        return EVENTRESULT_FILTER;
    }

    function onActivate(context, event)
    {
        if (!sureNoGarageFull(context))
        {
            return EVENTRESULT_FILTER;
        }

        var need_license = event.widget["need_license"];
        if (need_license != "")
        {
            if (!checkLicense(context, ROOT, need_license))
                return EVENTRESULT_FILTER;
        }

        main::sound.play("next");
        main::game.major_menu_project = "gtmode";
        main::game.major_menu_page = ROOT.name;
        main::game.major_menu_widget = event.widget.name;
        main::game.race_code = "l0m%04d".format(event.widget["idx"]);
        exit_menu(context, "mission");
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::hidden::Item
{
    function onFocusEnter(context, event)
    {
        var over = event.widget["over"];
        over.actor.out = true;
        return EVENTRESULT_FILTER;
    }

    function onFocusLeave(context, event)
    {
        var over = event.widget["over"];
        over.actor.out = false;
        return EVENTRESULT_FILTER;
    }
}
