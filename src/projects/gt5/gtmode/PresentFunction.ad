
















function checkFirstOfAll(context)
{
    var need_save = false;
    if (!GAME_STATUS.user_profile.game_flags.getFlag("USER_STATUS", "GET_FIRST_CAR"))
        ;
    else
    {
        if (EventPresentUtil::getTryRacingMessageFlag())
        {
            DialogUtil::openInformationDialog(context, context.translate(ROOT, "MESSAGE_TRY_RACING"));
            EventPresentUtil::setTryRacingMessageFlag();
            need_save = true;
        }
    }
    return need_save;
}

function checkUnLock(context)
{
    var event_present_map = EventPresentUtil::checkEventAndShowDialog(context, ROOT);
    if (event_present_map.size == 0)
        return false;

    var item_list = EventPresentUtil::presentItem(context, ROOT, event_present_map);
    if (item_list.size == 0)
        return false;

    return true;
}

function checkEnding1(context)
{
    var show_movie = false;
    if (!show_movie)
    {
        show_movie = !EventPresentUtil::getEnding1MoveGetFlag() &&
            !GAME_STATUS.user_profile.game_flags.getFlag("GTTV_PLAYABLE_MOVIES", "ENDING1");
    }

    var skip_next = false;
    if (show_movie)
    {
        DialogUtil::openInformationDialog(context, context.translate(ROOT, "MESSAGE_REACH_THE_ENDING_MOVIE_1"),
            nil, EventPresentUtil::info_image_path);

        var tvid = GTTVOffline::getTvId("ending1");
        var tv = tvid["tv"];
        if (pdistd::Exist(tv["movie_path"]))
        {
            SequenceUtil::startProject(context, "play_movie", "ending1");
            GAME_STATUS.user_profile.game_flags.setFlag("GTTV_PLAYABLE_MOVIES", "ENDING1", true);
            skip_next = true;
        }
    }

    if (!EventPresentUtil::getEnding1MoveGetFlag())
        PDINetwork.unlockTrophyAsync(gtengine::TrophyType::ENDING);

    return skip_next;
}

function checkEnding2(context)
{
    var show_movie = false;
    if (!show_movie)
    {
        show_movie = !EventPresentUtil::getEnding2MoveGetFlag() &&
            !GAME_STATUS.user_profile.game_flags.getFlag("GTTV_PLAYABLE_MOVIES", "ENDING2");
    }

    var skip_next = false;
    if (show_movie)
    {
        DialogUtil::openInformationDialog(context, context.translate(ROOT, "MESSAGE_REACH_THE_ENDING_MOVIE_2"),
            nil, EventPresentUtil::info_image_path);

        var tvid = GTTVOffline::getTvId("ending2");
        var tv = tvid["tv"];
        if (pdistd::Exist(tv["movie_path"]))
        {
            SequenceUtil::startProject(context, "play_movie", "ending2");
            GAME_STATUS.user_profile.game_flags.setFlag("GTTV_PLAYABLE_MOVIES", "ENDING2", true);
            skip_next = true;
        }
    }

    if (!EventPresentUtil::getEnding2MoveGetFlag())
        PDINetwork.unlockTrophyAsync(gtengine::TrophyType::ENDING2);

    return skip_next;
}

function checkTrophy(context)
{
    var unlock_state = PDINetwork.getTrophyUnlockState();
    if (unlock_state == nil)
        return;

    var begin = gtengine::TrophyType::PLATINUM;
    var end = gtengine::TrophyType::WOMAN_PORTRAIT;

    var unlocked = false;
    for (var i = begin; i <= end; ++i)
    {
        var state = GAME_STATUS.user_profile.context.trophy_state_list[i];
        if (state == 0 && unlock_state[i])
        {
            unlocked = true;
            GAME_STATUS.user_profile.context.trophy_state_list[i] = 1;
            ActionLogUtil::unlockTrophy(i);
        }
    }

    if (unlocked)
        saveNow(context);
}

function checkEnding1BonusMusic(context)
{
    var game_flags = GAME_STATUS.user_profile.game_flags;
    if (game_flags.getFlag("GTTV_PLAYABLE_MOVIES", "ENDING1") &&
        !game_flags.getFlag("USER_STATUS", "GET_ENDING1_BONUS_MUSIC"))
    {
        var data_list = MusicFileUtil::getBgmListByUnlockType(1);
        var id_list = Array();
        var music_titles = "";
        
        foreach (var i in data_list)
        {
            id_list.push(i.id);
            music_titles += (music_titles != "" ? "\n" : "") + "%s / %s".format(i.title, i.artist);
        }

        MusicFileUtil::setHiddenByList(id_list, false);
        DialogUtil::openInformationDialog(context, context.translate(ROOT, "MyHome", "QUERY_GET_MUSIC").build(music_titles), 
            nil, EventPresentUtil::info_image_path);

        game_flags.setFlag("USER_STATUS", "GET_ENDING1_BONUS_MUSIC", true);
    }
}

function getGreetingKey(greeting_id)
{
    return "greeting_%02d".format(greeting_id);
}

function checkGreeting(context)
{
    if (PROJECT.history['GTModeRoot::greeting'])
        return;

    if (!LoginUtil::isOnline())
        return;

    var request = Grim2.requestGreetingList(function(args) {});
    if (!Grim2Util::__deprecated__join__(context, request))
        return;

    var greeting_candidate_list = Grim2.decodeGreetingList(request);
    var greeting_list = [];
    var now = pdiext::getBetterTime().getBySecond();

    foreach (var greeting in greeting_candidate_list)
    {
        var begin_date = greeting["begin_date"];
        var end_date = greeting["end_date"];

        if (begin_date.getBySecond() <= now && now < end_date.getBySecond())
            greeting_list.push(greeting);
    }

    foreach (var greeting in greeting_list)
        GreetingPopup.open(context, greeting);

    PROJECT.history['GTModeRoot::greeting'] = true;
}