











module PROJECT::ROOT
{
#ifdef GT4O_US_BETA
    static course_list;
#else
    static course_list = nil;
#endif

    function setCourseList(list)
    {
        course_list = list;
    }

    function onLoad(context)
    {
        hidden.visible = false;
    }

    function onInitialize(context)
    {
        setCourseList(EventData::PhotoStageList);
        enterPage(context, ROOT, "PhotoTravel");

        context.cursor_visible = false;

        init_menu(context);

        Float::map.visible = false;
        Float::map.y = 232.0;
        Float::map.actor = main::menu::MMoveActor(Float::map, Float::map.x, PS2_SCREEN_H_F);
        Float::map.actor.ratio = 0.2;
        Float::map.actor.out = true;
        Float::map.actor.warp();

        Slide.visible = false;
        Slide.actor = main::menu::MFadeActor(Slide, 1.0);
        Slide.actor.repeat = false;
        Slide.actor.period = 0.2;
        Slide.actor.over = 0.0;
        Slide.actor.out = true;
        Slide.actor.warp();

        TextFace.adjustScale();
        setFadeActor(ScrollBox::inc_arrow::image);
        setFadeActor(ScrollBox::dec_arrow::image);

        context.cursor_visible = true;
    }

    function onFinalize(context)
    {
        ROOT.setFocus(nil);

        ScrollBox::SelectBox.clearChildren(context);

        Float::map.actor = nil;
        Slide.actor = nil;
        ScrollBox::inc_arrow::image.actor = nil;
        ScrollBox::dec_arrow::image.actor = nil;

        leavePage(context, ROOT);
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        set_last_focus("PhotoTravel");
        start_page(context, TopRoot);
        return EVENTRESULT_FILTER;
    }

    function onActivate(context, event, object)
    {
        if (!sureRiding(context))
        {
            return EVENTRESULT_FILTER;
        }

        var item = object.getFocusedWidget();
        if (item == nil)
        {
            main::sound.play("disable");
            return EVENTRESULT_FILTER;
        }

        var course_code = item["name"].text;
        var length = main::game.garage.riding_car.getLength().toInt();
        var crs = CourseData[course_code];
        var limit = crs != nil ? (crs.length * 1000.0).toInt() : 0;

        if (limit > 0 && length > limit)
        {
            main::sound.play("disable");
            openConfirmDialog(context, DIALOG_ERROR, context.translate(ROOT, "too long to go"));
            return EVENTRESULT_FILTER;
        }

        main::sound.play("ok");
        main::game.course_code = course_code;
        main::game.car_code = "";
        main::game.major_menu_project = "gtmode";
        main::game.major_menu_page = ROOT.name;
        main::menu::MSystem::SetLoadingMode("capture");
        start_sequence(context, "photo_shoot");
        return EVENTRESULT_FILTER;
    }

    function init_menu(context)
    {
        ROOT.setFocus(nil);
        ScrollBox.visible = false;

        var composite = ScrollBox::SelectBox;
        composite.clearChildren(context);

        if (course_list == nil)
            return;

        for (var i = 0; i < course_list.size; i++)
        {
            var code = course_list[i][0];
            var nation = course_list[i][1];
            if (code != nil && !main::game.isCourseAvailable(code))
                code = nil;

            if (code != nil)
                add_course(context, composite, code, nation);
        }

        ScrollBox.visible = true;
        ROOT.setFocus(composite.first);
    }

    function setMoveActor(widget, x)
    {
        var actor = main::menu::MMoveActor(widget, widget.x + x, widget.y);
        widget.actor = actor;
        widget.actor.ratio = 0.3;
        widget.actor.out = false;
        widget.actor.warp();
    }

    function add_course(context, target, name, nation)
    {
        var ticket = hidden::Ticket.doCopy();
        ticket["image"].setImagePath("image/gtmode/photo/" + name + ".png");
        ticket["name"].text = name;
        ticket.defineStatic("nation", nation);

        target.appendChild(context, ticket);

        ticket["image"].adjustSize();

        setMoveActor(ticket["image"], 20.0);
    }
}

module PROJECT::ROOT::ScrollBox::SelectBox
{
    function onValueChanged(context)
    {
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::hidden::Ticket
{
    function onFocusEnter(context, event)
    {
        if (event.widget == nil)
            return;

        var composite = ScrollBox::SelectBox;
        for (var i = 0; i < composite.countChild(); i++)
            composite.getChild(i)["image"].actor.out = false;

        var widget = event.widget;
        widget["image"].actor.out = true;
        var name = widget["name"].text;

        var tooltip = ROOT["Common"]["ToolTip"]["tip"];
        tooltip.value = context.translate(ROOT, "TOOLTIP|" + name);

        Slide.visible = false;
        Slide::flash.from_disk = false;
        Slide::flash.cache = false;
        Slide::flash.setFlashPath("image/gtmode/photo/" + name + ".swf");
        Slide::flash.doInitialize(context);
        Slide::flash.reset();

        Slide.actor.out = true;
        Slide.actor.warp();
        Slide.actor.out = false;
        Slide.visible = true;

        var nation = "";

        for (var i = 0; i < course_list.size; i++)
        {
            if (course_list[i][0] == name)
            {
                nation = course_list[i][1];
                break;
            }
        }

        if (nation != nil)
        {
            Float::label.text = context.translate(ROOT, "NATION|" + nation);
            Float::banner.setImagePath("image/arcade/common/" + nation + ".png");
            Float::banner.doInitialize(context);
            Float::banner.adjustSize();
            Float::map.visible = false;
            Float::map.setImagePath("image/gtmode/photo/travel_map_" + nation + ".png");
            Float::map.doInitialize(context);
            Float::map.adjustSize();
            Float::map.actor.out = true;
            Float::map.actor.warp();
            Float::map.actor.out = false;
            Float::map.visible = true;
            Float.visible = true;
        }
        else
        {
            Float.visible = false;
        }

        return EVENTRESULT_FILTER;
    }
}