module PROJECT::ROOT
{
    static sLastPage = nil;
    static sOkX = 0;

    function open(context, last, name, id)
    {
        sLastPage = last;
        sOkX = OK.x;

        var strStats = "";

        if (name == nil)
        {
            Account::edit::text.text = main::network.my_name;
            strStats = main::network.accountGetStats();

            ProfileRoot.setFocus(Name::edit::input);

            Password.visible = true;
            Cancel.visible = true;

            Name::edit.insensitive = false;
            Location::edit.insensitive = false;
            Sex::OptionMenu.insensitive = false;
            Age::edit.insensitive = false;
            Mail::edit.insensitive = false;
            Words::edit.insensitive = false;
        }
        else
        {
            Account::edit::text.text = name;
			var stat;
            |stat, name, strStats| = main::network.getPlayerInfo(id);

            ProfileRoot.setFocus(OK);

            Password.visible = false;
            Cancel.visible = false;

            OK.x += (Cancel.x - OK.x) / 2;

            Name::edit.insensitive = true;
            Location::edit.insensitive = true;
            Sex::OptionMenu.insensitive = true;
            Age::edit.insensitive = true;
            Mail::edit.insensitive = true;
            Words::edit.insensitive = true;
        }

        start_page(context, ProfileRoot);
        SetProfile(context, strStats);
    }

    function GetProfile(context)
    {
        var stats = main::menu::MPlayerStats();

        stats.name = Name::edit::input.value;
        stats.location = Location::edit::input.value;
        stats.sex = Sex::OptionMenu.index;
        stats.age = Age::edit::number::input.value;
        stats.mailaddr = Mail::edit::input.value;
        stats.usertext = Words::edit::input.value;
		
        var strStats = stats.pack();
        var r = main::network.accountUpdateStats(strStats);
		return r;
    }

    function SetProfile(context, strStats)
    {
        var stats = main::menu::MPlayerStats::unpack(strStats);

        Name::edit::input.value       = stats.name;
        Location::edit::input.value   = stats.location;

        Sex::OptionMenu.setIndex(context, stats.sex);

        Age::edit::number::input.value = stats.age;
        Mail::edit::input.value        = stats.mailaddr;
        Words::edit::input.value       = stats.usertext;
    }

    function onLoad()
    {
        setFadeActor(OK::bgf);
        setFadeActor(Cancel::bgf);
        setFadeActor(Password::bgf);
    }

    function onInitialize(context)
    {
        enterPage(context, ProfileRoot, "Profile");
    }

    function onFinalize(context)
    {
        OK.x = sOkX;
        leavePage(context, ProfileRoot);
    }

    function onCancel(context, event, item)
    {
        main::sound.play("cancel");
        start_page(context, ProfileRoot::sLastPage);
		return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Password
{
    function onActivate(context, event, item)
    {
        main::sound.play("ok");

        var array = InputDialog::open(context, 1, "Input Password", ProfileRoot);

        if (array != nil)
        {
            |var oldpass, var newpass| = array;

            if (newpass == "")
                openConfirmDialog(context, DIALOG_OK, "no password input");

            else
            {
                var r = main::network.accountUpdatePassword(oldpass, newpass);
                if (!r)
                    openConfirmDialog(context, DIALOG_OK, "update failed.");
            }
        }

        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::OK
{
    function onActivate(context, event, item)
    {
        main::sound.play("ok");

        if (Name::edit.insensitive == true)
        {
            start_page(context, ProfileRoot::sLastPage);
        }
        else
        {
            var ret = ProfileRoot::GetProfile(context);
            if (ret)
            {
                start_page(context, ProfileRoot::sLastPage);
            }
            else
            {
                openConfirmDialog(context, DIALOG_OK, "update failed.");
            }
        }

        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Cancel
{
    function onActivate(context, event, item)
    {
        main::sound.play("cancel");
        start_page(context, ProfileRoot::sLastPage);
        return EVENTRESULT_FILTER;
    }
}