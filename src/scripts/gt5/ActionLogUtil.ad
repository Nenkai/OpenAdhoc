


















module ActionLogUtil
{
    module TAG
    {
        static NEW_GAME = "NG";
        static CAR_BUY = "CB";
        static CAR_RIDE = "CR";
        static FRIENDCAR_RIDE = "FR";
        static LICENSE_LEVEL = "LL";
        static LICENSE_EVENT = "LE";
        static ASPEC_LEVEL = "AL";
        static ASPEC_EVENT = "AE";
        static BSPEC_LEVEL = "BL";
        static BSPEC_EVENT = "BE";
        static SPECIAL_EVENT = "SE";
        static DRIVER_CLASS = "DC";
        static GIFT_SPECIAL = "GS";
        static GIFT_MUSEUMCARD = "GM";
        static GIFT_TUNEPARTS = "GT";
        static GIFT_OTHERPARTS = "GO";
        static GIFT_DRIVER_ITEM = "GD";
        static TROPHY_UNLOCK = "TU";
    }

    class Data
    {
        method __init__(v1, v2, v3, v4, v5)
        {
            self.value1 = v1 == nil ? "" : v1;
            self.value2 = v2 == nil ? "" : v2;
            self.value3 = v3 == nil ? "" : v3;
            self.value4 = v4 == nil ? "" : v4;
            self.value5 = v5 == nil ? "" : v5;
        }

        attribute value1;
        attribute value2;
        attribute value3;
        attribute value4;
        attribute value5;
    }

    function requestPut(data)
    {
        if (!LoginUtil::isOnline())
            return;

        ActionLog.requestPutActionLog(data.value1, data.value2, data.value3, data.value4, data.value5, function(args)
        {
            |var context, var request| = args;
            if (request.isError())
                ;
        });
    }

    function newGame()
    {
        var data = Data(TAG::NEW_GAME);
        requestPut(data);
    }

    function buyCar(car_label)
    {
        var data = Data(TAG::CAR_BUY, car_label);
        requestPut(data);
    }

    function rideCar(car_label)
    {
        var data = Data(TAG::CAR_RIDE, car_label);
        requestPut(data);
    }

    function rideFriendCar(car_label, friend_id)
    {
        var data = Data(TAG::FRIENDCAR_RIDE, car_label, friend_id);
        requestPut(data);
    }

    function licenseLevel(license)
    {
        var data = Data(TAG::LICENSE_LEVEL, license);
        requestPut(data);
    }

    function licenseEvent(license_id, result)
    {
        var data = Data(TAG::LICENSE_EVENT, license_id, result);
        requestPut(data);
    }

    function aspecLevel(level)
    {
        var data = Data(TAG::ASPEC_LEVEL, level);
        requestPut(data);
    }

    function aspecEvent(game_id, course_label)
    {
        var data = Data(TAG::ASPEC_EVENT, game_id, getCourseName(course_label));
        requestPut(data);
    }

    function bspecLevel(level)
    {
        var data = Data(TAG::BSPEC_LEVEL, level);
        requestPut(data);
    }

    function bspecEvent(game_id, course_label)
    {
        var data = Data(TAG::BSPEC_EVENT, game_id, getCourseName(course_label));
        requestPut(data);
    }

    function specialEvent(event_id, course_label, result)
    {
        var data = Data(TAG::SPECIAL_EVENT, event_id, getCourseName(course_label), result);
        requestPut(data);
    }

    function driver(name, _class)
    {
        var data = Data(TAG::DRIVER_CLASS, name, _class);
        requestPut(data);
    }

    function giftMuseum(museum_id)
    {
        var museum = MuseumFileUtil::getMuseum(museum_id);
        if (museum == nil)
            return;

        var data = Data(TAG::GIFT_MUSEUMCARD, museum_id, museum.dealer, museum.dealer_id);
        requestPut(data);
    }

    function giftCarTicket(gameitem_id, car_label)
    {
        var data = Data(TAG::GIFT_SPECIAL, gameitem_id, car_label);
        requestPut(data);
    }

    function giftTuneParts(gameitem_id, horn_id)
    {
        var data = Data(TAG::GIFT_TUNEPARTS, gameitem_id, horn_id);
        requestPut(data);
    }

    function giftPaint(gameitem_id, color)
    {
        var data = Data(TAG::GIFT_OTHERPARTS, gameitem_id, color);
        requestPut(data);
    }

    function giftDriverItem(gameitem_id, code, color)
    {
        var data = Data(TAG::GIFT_DRIVER_ITEM, gameitem_id, code, color);
        requestPut(data);
    }

    function unlockTrophy(type)
    {
        var data = Data(TAG::TROPHY_UNLOCK, type);
        requestPut(data);
    }

    function getCourseName(course_label)
    {
        var course_info = CourseData::getCourseInfo(course_label);
        return course_info.name;
    }
}