//---------------------------------------------------------------------------------------
// BootProjectUtil.ad
//
//
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module BootProjectUtil
{
    static sPhase = 0;

    function DispatchNextSequence(context)
    {
        context.pushEvent(main::menu::MFunctionEvent(GoNextSequence, context));
    }

    function GoNextSequence(context)
    {
        switch (sPhase)
        {
            case 0:
                {
                    sPhase = 2;
                    DispatchNextSequence(context);
                }
                break;

            case 1:
                {
                    sPhase = 2;
                    var msg = context.translate(BootProject, "SaveDataPSP", "TRC_WARNING_THIS_TITLE_USES_AUTOSAVE");
                    DialogUtil::openConfirmDialog(context, DialogUtil::OK, msg);

                    DispatchNextSequence(context);
                }
                break;

            case 2:
                {
                    sPhase = 3;

                    var skip_op = main::AppOpt.defined("skip_op");
                    if (!skip_op)
                        skip_op = !gGameStatus.user_profile.option.opening_after_autoload;

                    if (skip_op)
                        DispatchNextSequence(context);
                    else
                        SequenceUtil::startProject(context, "play_movie", getOpeningMoviePath(context));
                }
                break;

            case 3:
            default:
                {
                    context.cursor_visible = false;

                    SequenceUtil::startProject(context, main::after_boot_project);
                }
                break;
        }
    }

    function getOpeningMoviePath(context)
    {
        var region = main::pdiext::MProductInformation::GetGameRegionCode();

        var path = "gt5m/opening";
        switch (region)
        {
            case "jp":
                path = "gt5m/opening";
                break;
            case "us":
                path = "gt5m/opening_us";
                break;
            case "uk":
                path = "gt5m/opening_us";
                break;
            case "tw":
                path = "gt5m/opening";
                break;
        }
        
        return path;
    }
}