module ROOT
{
    attribute sModalPage;
    attribute sCP;
    attribute sSceneFace;
    attribute sPreservedCP;
    attribute sResult;

    method open(context, cp, scene_face)
    {
        self.sCP = cp;
        self.sSceneFace = scene_face;
        self.sPreservedCP = gtengine::MCarParameter();
        self.sPreservedCP.deepCopy(cp);

        self.sResult = false;

        self.sModalPage = SequenceUtil::ModalPage(context, ROOT);
        self.sModalPage.open();

        var changed = self.sResult;

        if (!changed)
        {
            self.sCP.deepCopy(self.sPreservedCP);
            apply(context);
        }

        self.sCP = nil;
        self.sSceneFace = nil;
        self.sPreservedCP = nil;
        self.sModalPage = nil;
        self.sResult = nil;

        return changed;
    }

    method close(context)
    {
        self.sModalPage.close();
    }

    method onInitialize(context)
    {
        reflect(context);
        Pane::Type::slider.setup(context);
        Pane::Number::slider.setup(context);
    }

    method onFinalize(context)
    {

    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        ROOT.sResult = false;
        ROOT.close(context);

        return EVENTRESULT_FILTER;
    }

    method reflect(context)
    {
        Pane::Type::slider.index = ROOT.sCP.decken_type + 1;
        Pane::Number::slider.index = ROOT.sCP.decken_number;
    }

    method apply(context)
    {
        if (ROOT.sSceneFace != nil)
        {
            ROOT.sSceneFace.execCommand("setCarDeckenType %d".format(ROOT.sCP.decken_type));
            ROOT.sSceneFace.execCommand("setCarDeckenNumber %d".format(ROOT.sCP.decken_number));
        }
    }

    module Pane::Type::slider
    {
        method onValueChanged(context)
        {
            if (self.initialized != nil)
                self.sliderValueChanged(context);

            ROOT.sCP.decken_type = self.index - 1;

            if (ROOT.sSceneFace != nil)
                ROOT.sSceneFace.execCommand("setCarDeckenType %d".format(ROOT.sCP.decken_type));

        }    
    }

    module Pane::Number::slider
    {
        method onValueChanged(context)
        {
            if (self.initialized != nil)
                self.sliderValueChanged(context);
        
            ROOT.sCP.decken_number = self.index;
        
            if (ROOT.sSceneFace != nil)
                ROOT.sSceneFace.execCommand("setCarDeckenNumber %d".format(ROOT.sCP.decken_number));
        }        
    }

    module Pane::Buttons::CancelOK::OK
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            ROOT.sResult = true;
            ROOT.close(context);

            return EVENTRESULT_FILTER;
        }    
    }

    module Pane::Buttons::CancelOK::Cancel
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            ROOT.sResult = false;
            ROOT.close(context);

            return EVENTRESULT_FILTER;
        }    
    }
}