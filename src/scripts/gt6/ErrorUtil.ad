

//---------------------------------------------------------------------------------------
// ErrorUtil.ad
//
// Utility module for displaying generic errors.
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module ErrorUtil
{
    function openDialog(context, info, debug_message)
    {
        var root = context.getCurrentPage();

        var message;
        if (root != nil)
            message = context.translate(root, "OnlineMessage", "OTHER_NETWORK_ERROR");
        else
            message = "ERROR in ErrorUtil::openDialog";

        if (info != nil)
            message += "\n[%{info}]";

        // COMPILER NOTE: optimized out if (page == nil) ; block
        // Should be a JUMP_IF_TRUE
        if (root != nil)
        {
            DialogUtil::openConfirmDialog(context, DialogUtil::ERROR, message);
        }
    }

    function abortDiskFull(code, need_disk_str, file, line)
    {
        var message = main::manager.translate("SystemMessage", "DISKFULL_ERROR").build(need_disk_str);
        message += "\n0x%08x [%d]".format(code, line);
        pdistd::MSystemDialog::open("ENYD", message);
    }

    function warningDBFailed(code, file, line)
    {
        var message = main::manager.translate("SystemMessage", "DB_FAILED_WARNING");
        message += "\n0x%08x [%d]".format(code, line);
        pdistd::MSystemDialog::open("EN", message);
    }
}