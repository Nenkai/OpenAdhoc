






module ProjectUtil
{
    function LoadProject(project_name, project_file)
    {
        if (__projects__.defined(project_name))
            return nil;

        var project_path = "%s/%s/%s".format(main::PROJECT_ROOT_DIR, project_file, project_file);
        return manager.loadProject(project_path);
    }

    function UnloadProject(project)
    {
        if (project == nil)
            return;

        manager.unloadProject(project);
    }

    class ProjectHolder
    {
        attribute projects;

        method __init__(context)
        {
            self.projects = Map();
        }

        method release()
        {
            foreach (|var name, var project| in self.projects)
                UnloadProject(project);

            self.projects = Map();
        }

        method load(name, file)
        {
            var project = LoadProject(name, file);
            if (project != nil)
                self.projects[name] = project;
        }

        method unload(name)
        {
            var project = self.projects[name];
            if (project != nil)
            {
                UnloadProject(project);
                self.projects[name] = nil;
            }
        }
    }
}