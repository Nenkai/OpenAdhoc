module PROJECT::ROOT
{
	#include "../share/imageControl.ad"
	#include "PhotoDialogEnums.h" // Not original, no effect on code

	static desc_str = "description";

	function onInitialize(context)
	{
		context.cursor_visible = false;
		ToolTip::tip.lock.value = false;
		ToolTip::tip.key = desc_str;
		ToolTip::tip.lock.value = true;
		attachImageControl(context);
	}
	
	function onFinalize(context)
	{
		removeImageControl(context);
		context.cursor_visible = true;
	}
	
	function onCancel(context, event, item)
	{
		main::sound.play("cancel");
		context.transition.panOut(context);
		context.transition.syncOut(context);
		context.finish();
		return EVENTRESULT_FILTER;
	}
	
	function onKeyPress(context, event)
	{
		if (event.keysym == PS2_PAD_CTRL_START)
		{
			removeImageControl(context);
	
			var arg = main::game.next_menu_arg;
			var dialog = (arg == "filmphoto") ? SaveDialog : DestinationDialog;
	
			context.cursor_visible = true;
	
			if (dialog["open"](context, PHOTO_DIALOG_QUERY /* type */))
			{
				ToolTip.visible = false;
	
				var slot = dialog["slot"];
				var kind = dialog["kind"];
	
				if (slot == 2)
					outUSB(context);
				else
				{
					var r = true;
	
					if (kind == 0 || kind == 1)
						r = saveVariousData(context, "MODE_SAVE_PHOTO_FILM", "film", slot);
	
					if (r && (kind == 1 || kind == 2))
						saveVariousData(context, "MODE_SAVE_PHOTO_PICTURE", "photo", slot);
				}

				ToolTip.visible = true;
			}
			
			context.cursor_visible = false;
			attachImageControl(context);
			
			return EVENTRESULT_FILTER;
		}
	
		checkUnformat(context, event);
		return false;
	}
	
	function outUSB(context)
	{
		print("out USB Storage");
	
		if (openConfirmDialog(context, DIALOG_QUERY, context.translate(ROOT, "out usb memory ok?")))
		{
			var progress = main::menu::MProgress();
			setProgress(context, progress);
	
			progress.value = 0.0;
			progress.value = 0.3;
	
			openProgressDialog(context, context.translate(ROOT, "now saving"));
	
			var r = PR.outUSBStorage(context);
	
			if (r == "OK")
			{
				progress.value = 1.0;
				progress.value = 1.0;
				context.sync(0.3);
			}
	
			closeProgressDialog(context);
	
			openConfirmDialog(context, (r == "OK") ? DIALOG_OK : DIALOG_ERROR, context.translate(PreviewRoot, "usbresult|" + r));
		}
	
		print("end USB Storage");
	}
}