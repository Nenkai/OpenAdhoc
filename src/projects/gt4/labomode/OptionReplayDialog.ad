module PROJECT::ROOT
{
	module ReplayMode
	{
		static NORMAL = 0;
		static DIVE = 1;
	}
	
	static ReplayModeString = ["NORMAL", "DIVE"];
	static result = nil;
	
	function setMoveActor(widget)
	{
		var actor = main::menu::MMoveActor(widget, widget.x, PS2_SCREEN_H_F);
		widget.actor = actor;
		widget.actor.ratio = 0.2;
	}
	
	function open_motion(context)
	{
		Pane.actor.destinationY = PS2_SCREEN_H_F;
		Pane.actor.out = true;
		Pane.actor.warp();
		context.pushPage(ROOT);
		Pane.actor.out = false;
		context.sync(0.5);
	}
	
	function close_motion(context)
	{
		if (result)
			Pane.actor.destinationY = -Pane.h;
		else
			Pane.actor.destinationY = PS2_SCREEN_H_F;
	
		Pane.actor.out = true;
		context.sync(0.5);
		context.closePage(ROOT);
	}
	
	function open(context)
	{
		open_motion(context);
		result = nil;
	
		context.getUpdateContext().enterEventLoop();
		return result;
	}
	
	function close(context)
	{
		ROOT.setFocus(nil);
		close_motion(context);
		context.getUpdateContext().leaveEventLoop();
	}
	
	function reflect(context)
	{
		var option = main::game.option;
		Pane::Mode::OptionMenu.setIndex(context, ReplayMode[option.replay_mode]);
		Pane::Info::OptionMenu.setIndex(context, 1 - option.replay_display_enable);
		Pane::McSlot::OptionMenu.setIndex(context, option.replay_memory_card_slot);
	}
	
	
	function apply()
	{
		var option = main::game.option;
		option.replay_mode = ReplayModeString[Pane::Mode::OptionMenu.index];
		option.replay_display_enable = 1 - Pane::Info::OptionMenu.index;
		option.replay_memory_card_slot = Pane::McSlot::OptionMenu.index;
	}
	
	function onLoad(context)
	{
		setMoveActor(Pane);
	}
	
	function onInitialize(context)
	{
		Pane::Mode::OptionMenu::popup::vbox::Dive::label.adjustScale();
		Pane::McSlot::label.adjustScale();
		ROOT.setFocus(Pane::Mode::OptionMenu);
		reflect(context);
	}
	
	function onFinalize(context)
	{
	}
	
	function onCancel(context)
	{
		main::sound.play("cancel");
		result = false;
		close(context);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::Pane::Buttons::Cancel
{
	function onActivate(context)
	{
		main::sound.play("ok");
		result = false;
		close(context);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::Pane::Buttons::OK
{
	function onActivate(context)
	{
		main::sound.play("ok");
		apply();
		result = true;
		close(context);
		return EVENTRESULT_FILTER;
	}
}