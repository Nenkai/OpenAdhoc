

//---------------------------------------------------------------------------------------
// RaceMenuUtil.ad
//
// Utility module for the race menu UI (widgets util mostly?)
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module RaceMenuUtil
{
    class Icon
    {
        attribute caption_key;
        attribute tooltip_key;
        attribute image_path;
        attribute func;
        attribute caption;
        attribute tooltip_txt;
        attribute active;

        method __init__(caption_key, image_path, func, tooltip_key, active)
        {
            self.caption_key = caption_key;
            if (tooltip_key == nil)
                self.tooltip_key = caption_key;
            else
                self.tooltip_key = tooltip_key;

            self.image_path = image_path;
            self.func = func;
            self.caption = nil;
            self.tooltip_txt = nil;
            self.active = active;
        }
    }

    function createIcon(caption_key, image_path, func, tooltip_key, active)
    {
        return Icon(caption_key, image_path, func, tooltip_key, active);
    }

    function initialize_icon(context, translate_page, widget, icon, extra_translate_page)
    {
        
        if (extra_translate_page != nil)
        {
            icon.caption = context.translate(translate_page, extra_translate_page, "caption_" + icon.caption_key);
            icon.tooltip_txt = context.translate(translate_page, extra_translate_page, "tooltip_" + icon.tooltip_key);
        }
        else
        {
            icon.caption = context.translate(translate_page, "caption_" + icon.caption_key);
            icon.tooltip_txt = context.translate(translate_page, "tooltip_" + icon.tooltip_key);
        }
        
        var path = "image/gt5/icon/" + icon.image_path;
        widget.image.image_path = path;
        widget.icon = icon;

        if (widget["imagei"] != nil)
        {
            if (icon.active != nil && !icon.active)
            {
                initialize_item_off(context, widget);
                widget.imagei.visible = true;
            }
            else
                widget.imagei.visible= false;
        }

        if (widget["bar"] != nil)
        {
            widget.bar.visible = false;
        }

        widget.doInitialize(context);
    }

    function initialize_listbox(context, listbox, item, icons, translate_page, extra_translate_page)
    {
        listbox.ScalarInterpolator.reverse = true;
        listbox.ScalarInterpolator.reset();

        var unit_w = item.w;

        listbox.keep_alignment = false;
        listbox.alignment = 0.5;
        listbox.interpolate_ratio = 0.2;
        listbox.ScalarInterpolator.start_value = unit_w;

        if (sMaxVisibleIconNum < 0)
        {
            listbox.ScalarInterpolator.end_value = 1920.0;
            listbox.dec_arrow.visible = false;
            listbox.inc_arrow.visible = false;
        }
        else if (icons.size <= sMaxVisibleIconNum)
        {
            listbox.ScalarInterpolator.end_value = ((unit_w + listbox.spacing) * icons.size) - listbox.spacing;
            listbox.dec_arrow.visible = false;
            listbox.inc_arrow.visible = false;
        }
        else
        {
            listbox.ScalarInterpolator.end_value = ((unit_w + listbox.spacing) * sMaxVisibleIconNum) - listbox.spacing;
            listbox.dec_arrow.visible = true;
            listbox.inc_arrow.visible = true;
        }

        listbox.setItemTemplate(context, item);
        listbox.setItemCount(icons.size);
        listbox.focus_callback = listbox.onFocus;
        listbox.focus_active = true;

        for (var i = 0; i < icons.size; i++)
        {
            var icon = icons[i];
            if (icon.active != nil)
                listbox.setItemInsensitive(i, !icon.active);

            var w = listbox.getItemWidget(i, context);
            initialize_icon(context, translate_page, w, icon, extra_translate_page);

            if (i == 0)
                w.separator.visible = false;
            else
                w.separator.visible = true;
        }
    }

    function initialize_sbox0(context, sbox0, item, icons, translate_page, extra_translate_page)
    {
        sbox0.ScalarInterpolator.reverse = false;
        sbox0.ScalarInterpolator.restart();

        var listbox = sbox0.SBox1.ListBox;
        initialize_listbox(context, listbox, item, icons, translate_page, extra_translate_page);
        sbox0.visible = true;
    }

    static sAppendedParent = nil;
    static sExtraTranslatePage = nil;
    static sAppendedSBox = nil;
    static sAppendedTooltip = nil;
    static sAppendedBalloontip = nil;
    static sIsActivated = nil;
    static sMaxVisibleIconNum = nil;

    function create(context, root, template, icons, extra_translate_page, parent, max_visible_icon_num, initial_closed)
    {
        if (icons == nil || icons.size == 0)
        {
            sIsActivated = false;
            return;
        }

        if (template["ToolTip"] != nil)
        {
            sAppendedTooltip = template.ToolTip.doCopy();
            if (parent != nil)
                parent.appendChild(context, sAppendedTooltip);
            else
                root.appendChild(context, sAppendedTooltip);

            sAppendedTooltip.FadeEffect.reverse = false;
            sAppendedTooltip.FadeEffect.restart();
        }

        sAppendedSBox = template.SBox0.doCopy();
        sAppendedSBox.visible = false;

        if (parent != nil)
            parent.appendChild(context, sAppendedSBox);
        else
            root.appendChild(context, sAppendedSBox);

        sAppendedParent = root;
        sExtraTranslatePage = extra_translate_page;

        var actor = sAppendedSBox.SBox1.Caption.FadeActor;
        actor.repeat = false;
        actor.out = false;
        actor.warp();

        sMaxVisibleIconNum = max_visible_icon_num;
        if (sMaxVisibleIconNum == nil)
            sMaxVisibleIconNum = 5;

        initialize_sbox0(context, sAppendedSBox, template.Item, icons, sAppendedParent, extra_translate_page);
        
        if (template["BalloonTip"] != nil)
        {
            sAppendedBalloontip = template.BalloonTip.doCopy();
            sAppendedParent.appendChild(context, sAppendedBalloontip);
            sAppendedBalloontip.initialize(context);
            sAppendedBalloontip.visible = false;
        }

        sIsActivated = true;
        context.cursor_visible = true;

        if (initial_closed != nil && initial_closed)
            setClosed();

        sAppendedSBox.visible = true;
    }

    function remove(context, parent)
    {
        sIsActivated = nil;

        if (sAppendedSBox != nil)
        {
            if (parent != nil)
                parent.removeChild(context, sAppendedSBox);
            else
                sAppendedParent.removeChild(context, sAppendedSBox);
        }
        sAppendedSBox = nil;

        if (sAppendedTooltip != nil)
        {
            if (parent != nil)
                parent.removeChild(context, sAppendedTooltip);
            else
                sAppendedParent.removeChild(context, sAppendedTooltip);
        }
        sAppendedTooltip = nil;

        if (sAppendedBalloontip != nil)
        {
            if (sAppendedParent != nil)
                sAppendedParent.removeChild(context, sAppendedBalloontip);
        }
        sAppendedBalloontip = nil;

        sExtraTranslatePage = nil;
        sAppendedParent = nil;
        sMaxVisibleIconNum = nil;
    }

    function initialize_item_off(context, widget)
    {
        if (widget["imagei"] != nil)
        {
            var path = "image/gt5/icon/" + widget.icon.image_path;
            var basename = IO::Path::GetBaseName(path);
            var pos = basename.rfind(".dds", basename.size);

            if (pos >= 0)
            {
                var dir = IO::Path::GetDirName(path);
                path = dir + "/" + basename.substr(0, pos) + "_off.dds";
            }

            widget.imagei.image_path = path;
            widget.imagei.visible = false;
        }
    }

    function onFocusListBox(context, listbox, new_index, old_index)
    {
        if (sAppendedSBox == nil)
            return;

        var w = listbox.getItemWidget(new_index, context);

        if (w == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var tooltip = sAppendedTooltip;
        var balloontip = sAppendedBalloontip;

        sbox1.Caption.label.text = w.icon.caption;

        if (tooltip != nil)
            tooltip.face.value = w.icon.tooltip_txt;

        if (balloontip != nil)
            balloontip.set_value(context, w, w.icon.caption, 30);
    }

    function onFocusEnterListBox(context, listbox)
    {
        onFocusListBox(context, listbox, listbox.focus_index, nil);
        return EVENTRESULT_FILTER;
    }

    function onFocusLeaveListBox(context, listbox)
    {
        var tooltip = sAppendedTooltip;
        var balloontip = sAppendedBalloontip;

        if (tooltip != nil)
            tooltip.face.value = "";

        if (balloontip != nil)
            balloontip.reset_value();

        return EVENTRESULT_FILTER;
    }

    function onActivateListBox(context, listbox)
    {
        var index = listbox.focus_index;
        if (!listbox.getItemInsensitive(index))
        {
            var w = listbox.getItemWidget(index, context);
            w.icon.func(context);
        }
        
        return EVENTRESULT_FILTER;
    }

    function activated()
    {
        return sIsActivated;
    }

    function setFocus(context, index, check_canfocus)
    {
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var LBox = sbox1.ListBox;

        if (check_canfocus != nil && check_canfocus && !LBox.can_focus)
            return;

        sAppendedParent.setFocus(LBox);

        if (index != nil)
        {
            var last_idx = LBox.focus_index;
            LBox.focus_index = index;
            LBox.onFocus(context, LBox.focus_index, last_idx);
        }
    }

    function setFocusLast(context)
    {
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var LBox = sbox1.ListBox;

        var item_cnt = LBox.getItemCount();
        setFocus(context, item_cnt - 1);
    }

    function enableFocus(context)
    {
        if (sAppendedSBox == nil)
            return;

        var LBox = sAppendedSBox.SBox1.ListBox;
        LBox.can_focus = true;
    }

    function disableFocus(context)
    {
        if (sAppendedSBox == nil)
            return;

        var LBox = sAppendedSBox.SBox1.ListBox;
        LBox.can_focus = false;
    }

    function getFocusIndex()
    {
        if (sAppendedSBox == nil)
            return -1;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var LBox = sbox1.ListBox;

        return LBox.focus_index;
    }

    function closeAction(context)
    {
        sIsActivated = false;
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
        
        var tooltip = sAppendedTooltip;
        var balloontip = sAppendedBalloontip;

        var actor = sbox1.Caption.FadeActor;

        actor.out = true;
        sbox1.dec_arrow.visible = false;
        sbox1.inc_arrow.visible = false;

        sbox0.ScalarInterpolator.reverse = true;
        sbox0.ScalarInterpolator.start();

        var item = listbox.getItemWidget(listbox.focus_index, context);

        if (sMaxVisibleIconNum >= 0)
        {
            var a = listbox.w - item.w;
            a = a > 0 ? item.x / a : 0;

            listbox.keep_scroll_point = true;
            listbox.interpolate_ratio = 1.0;
            listbox.scroll_point = a;
            listbox.ScalarInterpolator.reverse = true;
            listbox.ScalarInterpolator.start();
            item.separator.visible = false;
        }

        if (tooltip != nil)
        {
            tooltip.FadeEffect.reverse = true;
            tooltip.FadeEffect.start();
        }

        if (balloontip != nil)
        {
            balloontip.reset_value();
            balloontip.visible = false;
        }

        var image = item["image"];

        if (image != nil)
        {
            if (image["Blink"] != nil)
                image.Blink.restart();
        }
        else if (item["Blink"] != nil)
        {
            item.Blink.restart();
        }

        context.cursor_visible = false;
        context.wait(0.8);
    }

    function shrinkAction(context)
    {
        sIsActivated = false;
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
        
        var tooltip = sAppendedTooltip;
        var balloontip = sAppendedBalloontip;

        var actor = sbox1.Caption.FadeActor;
    
        actor.out = true;
    
        var item = listbox.getItemWidget(listbox.focus_index, context);
        if (sMaxVisibleIconNum >= 0)
        {
            var a = listbox.w - item.w;
            a = a > 0 ? item.x / a : 0;

            listbox.keep_scroll_point = true;
            listbox.interpolate_ratio = 1.0;
            listbox.scroll_point = a;
            listbox.ScalarInterpolator.reverse = true;
            listbox.ScalarInterpolator.start();
            item.separator.visible = false;
        }

        if (tooltip != nil)
        {
            tooltip.FadeEffect.reverse = true;
            tooltip.FadeEffect.start();
        }

        if (balloontip != nil)
        {
            balloontip.reset_value();
            balloontip.visible = false;
        }


        var image = item["image"];
        if (image != nil)
        {
            if (image["Blink"] != nil)
                image.Blink.restart();
        }
        else if (item["Blink"] != nil)
            item.Blink.restart();

        context.wait(0.5);
    }

    function resetCloseAction(context, show_balloontip)
    {
        if (sAppendedSBox == nil)
            return;

        context.cursor_visible = true;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
        var balloontip = sAppendedBalloontip;

        var item_cnt = listbox.getItemCount();

        if (item_cnt <= sMaxVisibleIconNum)
        {
            listbox.dec_arrow.visible = false;
            listbox.inc_arrow.visible = false;
        }
        else
        {
            listbox.dec_arrow.visible = true;
            listbox.inc_arrow.visible = true;
        }

        sbox1.Caption.FadeActor.out = false;
        sbox1.Caption.FadeActor.warp();

        listbox.keep_alignment = false;
        listbox.alignment = 0.5;
        listbox.interpolate_ratio = 0.2;
        listbox.ScalarInterpolator.reverse = true;
        listbox.ScalarInterpolator.reset();

        if (balloontip != nil)
        {
            var w = listbox.getItemWidget(listbox.focus_index, context);
            balloontip.reset_value();

            if (show_balloontip == nil)
                show_balloontip = false;

            balloontip.visible = show_balloontip;
            balloontip.set_value(context, w, w.icon.caption, 30);
        }

        sIsActivated = true;
    }

    function hideAction(warp)
    {
        if (sAppendedSBox == nil)
            return;

        sIsActivated = false;
        var sbox0 = sAppendedSBox;
        var tooltip = sAppendedTooltip;
        var balloontip = sAppendedBalloontip;

        sbox0.ScalarInterpolator.reverse = true;
        sbox0.ScalarInterpolator.start();

        if (warp != nil && warp)
            sbox0.ScalarInterpolator.warp();

        if (tooltip != nil)
        {
            tooltip.FadeEffect.reverse = true;
            tooltip.FadeEffect.start();

            if (warp != nil && warp)
                tooltip.FadeEffect.warp();
        }

        if (balloontip != nil)
        {
            balloontip.reset_value();
            balloontip.visible = false;
        }
    }

    function appearAction(warp)
    {
        if (sAppendedSBox == nil)
            return;

        sIsActivated = true;

        var sbox0 = sAppendedSBox;

        if (sbox0 != nil)
        {
            var sbox1 = sbox0.SBox1;
            var listbox = sbox1.ListBox;

            var n = listbox.getItemCount();
            for (var i = 0; i < n; i++)
            {
                var w = listbox.getItemWidget(i);
                if (w != nil)
                {
                    if (i == 0)
                        w.separator.visible = false;
                    else
                        w.separator.visible = true;
                }
            }

            sbox0.ScalarInterpolator.reverse = false;
            sbox0.ScalarInterpolator.restart();

            if (warp != nil && warp)
                sbox0.ScalarInterpolator.warp();
            sbox0.visible = true;
        }

        var tooltip = sAppendedTooltip;
        if (tooltip != nil)
        {
            tooltip.FadeEffect.reverse = false;
            tooltip.FadeEffect.restart();

            if (warp != nil && warp)
                tooltip.FadeEffect.warp();
        }
    }

    function setClosed()
    {
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var tooltip = sAppendedTooltip;
        var balloontip = sAppendedBalloontip;

        sIsActivated = false;
        sbox0.y = 1080;
        sbox0.visible = false;
        sbox0.ScalarInterpolator.reverse = false;
        sbox0.ScalarInterpolator.reset();

        sbox1.Caption.FadeActor.out = false;
        sbox1.Caption.FadeActor.warp();

        if (tooltip != nil)
        {
            tooltip.FadeEffect.reverse = false;
            tooltip.FadeEffect.reset();
        }

        if (balloontip != nil)
        {
            balloontip.reset_value();
            balloontip.visible = false;
        }
    }

    function onEffectEnd_Sbox0ScalarInterpolator(context)
    {
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;

        if (sbox0.ScalarInterpolator.ramain_time == 0 && 
            sbox0.ScalarInterpolator.reverse == false)
        {
            var listbox = sbox0.SBox1::ListBox;
            var w = listbox.getItemWidget(listbox.focus_index, context);

            var tooltip = sAppendedTooltip;
            var balloontip = sAppendedBalloontip;

            if (tooltip != nil)
                tooltip.face.value = w.icon.tooltip_txt;

            if (balloontip != nil)
            {
                balloontip.reset_value();
                balloontip.visible = true;
                balloontip.set_value(context, w, w.icon.caption, 30);
            }
        }
    }

    function setIconDisplay(context, index, src_icon, ignore_text)
    {
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
        var tooltip = sAppendedTooltip;
    
        var dst_icon = listbox.getItemWidget(index, context);
        dst_icon.image.image_path = src_icon.image_path;
        dst_icon.image.doInitialize(context);

        if (ignore_text == nil || !ignore_text)
        {
            var caption = "";
            var tooltip_txt = "";

            if (sExtraTranslatePage != nil)
            {
                caption = context.translate(sAppendedParent, sExtraTranslatePage, "caption_" + src_icon.caption_key);
                tooltip_txt = context.translate(sAppendedParent, sExtraTranslatePage, "tooltip_" + src_icon.tooltip_key);
            }
            else
            {
                caption = context.translate(sAppendedParent, "caption_" + src_icon.caption_key);
                tooltip_txt = context.translate(sAppendedParent, "tooltip_" + src_icon.tooltip_key);
            }

            sbox1.Caption.label.text = caption;
            dst_icon.icon.caption = caption;

            if (tooltip != nil)
                tooltip.face.value = tooltip_txt;
            dst_icon.icon.tooltip_txt = tooltip_txt;
        }
    }

    function setIcon(context, index, caption_key, image, func, tooltip_key, active)
    {
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
        var tooltip = sAppendedTooltip;
    
        if (active != nil)
            listbox.setItemInsensitive(index, !active);

        var dst_icon = listbox.getItemWidget(index, context);
        dst_icon.image.image_path = "image/gt5/icon/" + image;
        dst_icon.image.doInitialize(context);
        
        var caption = "";
        var tooltip_txt = "";

        if (tooltip_key == nil)
            tooltip_key = caption_key;
        else
            tooltip_key = tooltip_key; // Wtf PD?

        if (sExtraTranslatePage != nil)
        {
            caption = context.translate(sAppendedParent, sExtraTranslatePage, "caption_" + caption_key);
            tooltip_txt = context.translate(sAppendedParent, sExtraTranslatePage, "tooltip_" + tooltip_key);
        }
        else
        {
            caption = context.translate(sAppendedParent, "caption_" + caption_key);
            tooltip_txt = context.translate(sAppendedParent, "tooltip_" + tooltip_key);
        }

        sbox1.Caption.label.text = caption;
        if (tooltip != nil)
            tooltip.face.value = tooltip_txt;

        dst_icon.icon.caption_key = caption_key;
        dst_icon.icon.caption = caption;
        dst_icon.icon.tooltip_txt = tooltip_txt;
        dst_icon.icon.func = func;
        dst_icon.icon.active = active;

        if (dst_icon["imagei"] != nil)
        {
            if (active != nil && !active)
            {
                initialize_item_off(context, dst_icon);
                dst_icon.imagei.visible = true;
            }
            else
                dst_icon.imagei.visible = false;
        }
    }

    function getItem(context, caption_key)
    {
        if (sAppendedSBox == nil)
            return nil;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
    
        var num = listbox.getItemCount();

        for (var i = 0; i < num; ++i)
        {
            var item = listbox.getItemWidget(i, context);
            if (item != nil && item.icon.caption_key == caption_key)
                return item;
        }

        return nil;
    }

    function get_item(context, index)
    {
        if (sAppendedSBox == nil)
            return nil;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
    
        return listbox.getItemWidget(index, context);
    }

    function getIcon(context, index)
    {
        if (sAppendedSBox == nil)
            return nil;

        var item = get_item(context, index);
        return item.icon;
    }

    function execIconAll(context, mtd, arg)
    {
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
    
        var num = listbox.getItemCount();
    
        for (var i = 0; i < num; ++i)
        {
            var item = listbox.getItemWidget(i, context);
            if (item != nil)
                (item.*mtd)(arg);
        }
    
        return;
    }

    function getTopSBox()
    {
        return sAppendedSBox;
    }

    function setActive(context, caption_key, active)
    {
        if (sAppendedSBox == nil)
            return;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;

        var num = listbox.getItemCount();

        var item = nil;
        var idx = nil;
        
        for (var i = 0; i < num; ++i)
        {
            item = listbox.getItemWidget(i, context);
            if (item != nil && item.icon.caption_key == caption_key)
            {
                idx = i;
                break;
            }
        }

        if (idx == nil)
            return;

        listbox.setItemInsensitive(idx, !active);

        item.icon.active = active;

        if (item["imagei"] != nil)
        {
            if (!active)
            {
                initialize_item_off(context, item);
                item.imagei.visible = true;
            }
            else
                item.imagei.visible = false;
        }
    }
}