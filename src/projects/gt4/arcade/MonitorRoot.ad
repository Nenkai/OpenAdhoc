module PROJECT::ROOT
{
    static watcher = nil;
    static course_selected = false;

    function onInitialize(context)
    {
        context.cursor_visible = false;
        network.raceMenuNotifySequence(7);

        watcher = main::menu::MScriptWatcher(context, onTick);
        watcher.interval = 15;
        watcher.append();
        network.netSync();
    }

    function onFinalize(context)
    {
        if (watcher != nil)
        {
            watcher.remove();
            watcher = nil;
        }
    }

    function showMessage(message)
    {
        Message::tooltip.value = message;
    }

    function onTick(context)
    {
        import main::network;

        var option = main::game.option;

        var member_num = network.raceMenuGamePlayers();
        var my_index = network.raceMenuMyIndex();

        for (var i = 0; i < member_num; i++)
        {
            if (i == my_index)
                continue;

            var sequence = network.raceMenuPeekSequence(i);

            if (sequence >= 8)
            {
                showMessage("");
                CourseRoot::current_crs = network.raceMenuPeekCourse(i);
                GameRoot::doGame(context);
                return;
            }
        }

        MatchingRoot::checkDisconnection(context);
    }
}