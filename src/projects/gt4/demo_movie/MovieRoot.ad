module DemoProject::MovieRoot
{
	function onInitialize(context)
	{
		context.cursor_visible = false;
		end_flg = false;
		var movie_name = main::game.next_menu_arg;
		if (movie_name == "opening")
		{
			var region = main::menu::MSystem::GetRegionCode(); // original var name was "case". Had to change it becuase the compiler got confused
			if (region == "us")
			{
				movie_name = "opening_us";
			}
			else if (region == "kr")
			{
				movie_name = "opening_kr";
			}
			else if (region == "cn")
			{
				movie_name = "opening_cn";
			}
			
			// Sets the audio profile. Either Mono/Stereo, or Dolby Digital ProLogic
			if (main::menu::MSystem::GetRegionCode() == "us")
				Mpeg.AC3 = 0;
			else if (main::game.option.enableAC3)
				Mpeg.AC3 = 1;
			else
				Mpeg.AC3 = 0;
	
			if (main::game.option.sound_type == "PROLOGIC2")
				Mpeg.audio_track = 2;
			else
				Mpeg.audio_track = 1;
            // Mpeg.interlace is not set here. This suggests that field-stacked video is expected unless otherwise specified
		}

		if (movie_name == "ending")
		{
			var region = main::menu::MSystem::GetRegionCode();
			if (region == "tw")
				movie_name = "ending_tw";
			else if (region == "us")
				movie_name = "ending_us";
			else if (region == "kr")
				movie_name = "ending_kr";
			else if (region == "cn")
				movie_name = "ending_cn";

			Mpeg.interlace = 0; // Sets the scan mode for typical progressive 25/30hz video.
            // It is a REQUIREMENT that this is set right before running Mpeg.movie_name = movie_name.
            // With the progressive menus patch this allows for clean and stable progressive video to be displayed on emulator,
            // which looks substantially better than the field-stacked 50/60 that the opening uses.
            // For modding purposes, it would be convenient to make the game use this mode for ALL movies,
            // so that creating custom ones does not require dealing with adapting the interlaced video
            // into field-stacked which can degrade the quality.
		}
		
		Mpeg.movie_name = movie_name;
		return EVENTRESULT_FILTER;
	}
	
	function onFinalize(context)
	{
		end_flg = nil;
		return EVENTRESULT_FILTER;
	}
	
	function end_page(context)
	{
		end_flg = true;
		if (main::game.major_menu_project == "gtmode")
			start_project(context, "gtmode");
		else
			start_project(context, "arcade");

		return EVENTRESULT_FILTER;
	}
	
    function skip(context)
    {
        if (MovieRoot.isClosed())
            return;

        if (!end_flg)
        {
            end_page(context);
        }

        main::game.menu_result = "terminate";
    }
	
    function onActivate(context)
    {
        skip(context);
        return EVENTRESULT_FILTER;
    }
	
    function onKeyPress(context, event, item)
    {
        if (event.keysym == PS2_PAD_CTRL_START)
        {
            skip(context);
            return EVENTRESULT_FILTER;
        }
    }
	
    function onCancel(context, event, item)
    {
        skip(context);
        return EVENTRESULT_FILTER;
    }
}

module DemoProject::MovieRoot::Mpeg
{
    function onMovieFinish(context)
    {
        if (MovieRoot.isClosed())
            return;

        if (!end_flg)
        {
            end_page(context);
        }
    }
}