













module EventPresentUtil
{
    class EventPresent
    {
        attribute present_id;
        attribute eventtype_id;
        attribute type_id;
        attribute category_id;
        attribute gameitem_id;
        attribute carcode;
        attribute messagecode;
        attribute function_name;
        attribute argument0;
        attribute argument1;
        attribute argument2;
        attribute argument3;
        attribute argument4;

        method __init__()
        {
            self.present_id = 0;
            self.eventtype_id = 0;
            self.type_id = 0;
            self.category_id = 0;
            self.gameitem_id = 0;
            self.carcode = "";
            self.messagecode = "";
            self.function_name = "";
            self.argument0 = "";
            self.argument1 = 0;
            self.argument2 = 0;
            self.argument3 = 0;
            self.argument4 = 0;
        }

        method __get_elem__(i)
        {
            if (i == nil)
                return;

            return self.getObjectAttribute(i);
        }

        method __set_elem__(i, val)
        {
            if (val == nil || val == "")
                return;

            self.setObjectAttribute(i, val);
        }

        function GetAttributeNames()
        {
            var attr_names = [];
            foreach (|var a, var v| in EventPresent)
            {
                if (v.is_attribute)
                    attr_names.push(a.toString());
            }

            return attr_names;
        }

        method setParam(columns, params)
        {
            for (var i = 0; i < columns.size; i++)
            {
                var column = columns[i];
                self.setObjectAttribute(column, params[i]);
            }
        }
    }

    function initializeEventPresent()
    {
        var event_present = GLOBAL_STATUS.user_profile.record.event_present;
        if (event_present.isInitialized())
            return;

        var res = main::pdistd::ReadFile("textdata/gt5/event_present.xml");
        var event_present_list = Array();

        if (res["result"] != main::pdistd::FileError::OK)
            return;
        else
        {
            var buf = res["buffer"];
            var xml = main::pdistd::MXml();
            xml.parse(buf);

            var dom = xml.result;
            var nodelist = dom["EventPresent"];
            if (nodelist == nil)
                return;

            var node = nodelist[0];
            nodelist = node["record"];
            if (nodelist == nil)
                return;

            for (var i = 0; i < nodelist.size; i++)
            {
                var node = nodelist[i];
                var _record = [];
                var attr_map = node.getAttributeMap();
                _record = [
                    attr_map["present_id"], attr_map["eventtype_id"], attr_map["type_id"], attr_map["category_id"], attr_map["gameitem_id"], 
                    attr_map["carcode"], attr_map["messagecode"], attr_map["function_name"], 
                    attr_map["argument0"], attr_map["argument1"], attr_map["argument2"], attr_map["argument3"], attr_map["argument4"], 
                ]
                event_present_list.push(_record);
            }
        }

        event_present.initialize(event_present_list);
    }

    function addInitialize104(instance)
    {
        var version = 3;
        var event_present = instance.event_present;

        if (instance.present_table_version >= version)
            return;

        var xml = main::pdistd::ReadFile("textdata/gt5/event_present_104.xml");
        var event_present_list = Array();

        if (xml["result"] != main::pdistd::FileError::OK)
            return;
        else
        {
            var buf = xml["buffer"];
            xml = main::pdistd::MXml();
            xml.parse(buf);

            var dom = xml.result;
            var nodelist = dom["EventPresent"];
            if (nodelist == nil)
                return;

            var node = nodelist[0];
            nodelist = node["record"];
            if (nodelist == nil)
                return;

            for (var i = 0; i < nodelist.size; i++)
            {
                var node = nodelist[i];
                var _record = [];
                var attr_map = node.getAttributeMap();
                _record = [
                    attr_map["present_id"], attr_map["eventtype_id"], attr_map["type_id"], attr_map["category_id"], attr_map["gameitem_id"], 
                    attr_map["carcode"], attr_map["messagecode"], attr_map["function_name"], 
                    attr_map["argument0"], attr_map["argument1"], attr_map["argument2"], attr_map["argument3"], attr_map["argument4"], 
                ]
                event_present_list.push(_record);
            }
        }

        var res = event_present.initialize104(event_present_list);
        if (res)
            instance.present_table_version = version;
    }

    function addInitialize107(instance)
    {
        var version = 7;
        var event_present = instance.event_present;

        if (instance.present_table_version >= version)
            return;

        var xml = main::pdistd::ReadFile("textdata/gt5/event_present_107.xml");
        var event_present_list = readFile(xml);
        var res = event_present.initialize107(event_present_list);
        if (res)
            instance.present_table_version = version;
    }

    function addInitialize108(instance)
    {
        var version = 9;
        var event_present = instance.event_present;

        if (instance.present_table_version >= version)
            return;

        var xml = main::pdistd::ReadFile("textdata/gt5/gameitem_category_108.xml");
        var category_list = GameItemData::getInitCategoryDataFromXML(xml);
        var res = GameItemUtil::ItemBox::initialize108(category_list);
        if (res)
            instance.present_table_version = version;
    }

    function addInitialize110(instance)
    {
        var version = 10;
        var event_present = instance.event_present;

        if (instance.present_table_version >= version)
            return;

        var xml = main::pdistd::ReadFile("textdata/gt5/event_present_110.xml");
        var event_present_list = readFile(xml);
        if (event_present_list == nil)
            return;

        var res = event_present.initialize107(event_present_list);
        if (res)
            instance.present_table_version = version;
    }

    function addInitialize200(instance)
    {
        var version = 11;
        var event_present = instance.event_present;

        if (instance.present_table_version >= version)
            return;
        var res = GameItemUtil::ItemBox::initialize200();
        if (res)
            instance.present_table_version = version;
    }

    function addInitialize201(instance)
    {
        var version = 12;
        var event_present = instance.event_present;

        if (instance.present_table_version >= version)
            return;

        var xml = main::pdistd::ReadFile("textdata/gt5/event_present_201.xml");
        var event_present_list = readFile(xml);
        if (event_present_list == nil)
            return;

        var res = event_present.initialize107(event_present_list);
        if (res)
            instance.present_table_version = version;
    }

    function addInitialize202(instance)
    {
        var version = 14;
        var event_present = instance.event_present;

        if (instance.present_table_version >= version)
            return;

        var xml = main::pdistd::ReadFile("textdata/gt5/gameitem_category_202.xml");
        var category_list = GameItemData::getInitCategoryDataFromXML(xml);
        var res = GameItemUtil::ItemBox::initialize108(category_list);

        var present_xml = main::pdistd::ReadFile("textdata/gt5/event_present_202.xml");
        var event_present_list = readFile(present_xml);
        if (event_present_list == nil)
            return;

        var res2 = event_present.initialize107(event_present_list);
        if (res && res2)
            instance.present_table_version = version;
    }

    function readFile(xml)
    {
        var event_present_list = Array();

        if (xml["result"] != main::pdistd::FileError::OK)
            return nil;
        else
        {
            var buf = xml["buffer"];
            xml = main::pdistd::MXml();
            xml.parse(buf);

            var dom = xml.result;
            var nodelist = dom["EventPresent"];
            if (nodelist == nil)
                return nil;

            var node = nodelist[0];
            nodelist = node["record"];
            if (nodelist == nil)
                return nil;

            for (var i = 0; i < nodelist.size; i++)
            {
                var node = nodelist[i];
                var _record = [];
                var attr_map = node.getAttributeMap();
                _record = [
                    attr_map["present_id"], attr_map["eventtype_id"], attr_map["type_id"], attr_map["category_id"], attr_map["gameitem_id"], 
                    attr_map["carcode"], attr_map["messagecode"], attr_map["function_name"], 
                    attr_map["argument0"], attr_map["argument1"], attr_map["argument2"], attr_map["argument3"], attr_map["argument4"], 
                ]
                event_present_list.push(_record);
            }
        }

        return event_present_list;
    }
}