module PROJECT::ROOT
{
	#include "rgb.ad"

	function onInitialize(context)
	{
		info::FileList::Init(context);
		ROOT.focus_widget = info::Button;
	}
	
	function onFinalize(context)
	{
		info::FileList::Destroy(context);
	}
}

module PROJECT::ROOT::info::FileList
{
	static mark = -1;

	function Init(context)
	{
		context.cursor_visible = true;
	
		FileList.setItemTemplate(context, template::FileNew);
		FileList.setItemCount(colors.size);
	
		FileList.visible_callback = visible_callback;
		FileList.update_callback = update_callback;
		FileList.focus_callback = focus_callback;
	
		FileList.magnify_ratio = 1.0;
		FileList.repeat = false;
		FileList.alignment = 0.5;
		FileList.step_min = 1;
		FileList.step_max = 3;
		FileList.focus_active = true;
	}
	
	function Destroy(context)
	{
		mark.value = -1;
	}

	function setup_widget(i, w)
	{
		var ca = colors[i];
	
		w["veil"].opacity = 1.0;
		w["text"].text = ca[3];
		w["select"].visible = ca[4];
	
		var c = main::menu::MColorObject();
		c.r = ca[0] / 255.0;
		c.g = ca[1] / 255.0;
		c.b = ca[2] / 255.0;
	
		w["color"].setColor(c);
	}

	function focus_callback(context, new_index, old_index)
	{
		print "new %{new_index} old %{old_index}\n";
	}
	
	function visible_callback(context, index)
	{
		for (var i = 0; i < index.size; i++)
		{
			var visible = FileList.getItemVisible(index[i]);
			if (visible)
			{
				var w = FileList.getItemWidget(index[i], context);
				setup_widget(index[i], w);
				FileList.setItemUpdate(index[i], 3);
			}
			else
			{

			}
		}
	}
	
	function update_callback(context, index)
	{
		for (var i = 0; i < index.size; i++)
		{
			var w = FileList.getItemWidget(index[i]);
			if (w != nil)
			{
				var veil = w["veil"];
				veil.opacity -= 0.1;
	
				if (veil.opacity <= 0.0)
				{
					veil.opacity = 0.0;
					FileList.setItemUpdate(index[i], 0);
				}
				else
				{
					FileList.setItemUpdate(index[i], 3);
				}
			}
		}
	}


	function set_select(i, sel)
	{
		colors[i][4].value = sel;
	
		var w = FileList.getItemWidget(i);
		if (w != nil)
			w["select"].visible = sel;
	}

	function select_callback(context, select_index)
	{
		if (colors[select_index][4])
		{
			var w = FileList.getItemWidget(select_index);
			if (w != nil)
			{
				var child = w.getDeepCopy();
				child.x = -20.0;
				child.y = -20.0;
	
				var drag_icon = template::Separator.getDeepCopy();
				drag_icon.appendChild(child);
	
				FileList.enterDragMode(context, drag_icon);
			}
		}
		else
		{
			var state = context.getUpdateContext().getPadButtonState(0);
	
			if ((state & 0x100) && mark >= 0)
			{
				var first = mark;
				var last = select_index;
	
				if (select_index < mark)
				{
					first = select_index;
					last = mark;
				}
	
				var i = first;
				for (var i = first; i <= last; ++i)
				{
					set_select(i, 1);
				}
			}
			else
			{
				set_select(select_index, 1);
				mark.value = select_index;
			}
		}
	}

	function drop_callback(context, drag_index, drop_index)
	{
		set_select(drag_index, 0);
	
		print "old %{drag_index} new %{drop_index}\n";

		if (drag_index < drop_index)
			--drop_index;
	
		colors.move(drag_index, drop_index);
	
		FileList.focus_index = drop_index;
		FileList.postRedraw();
		FileList.leaveDragMode(context);
	}
	
	function onKeyPress(context, event)
	{
		// BUG (?): There is no explicit return here, which is really strange
		if (event.keysym == PS2_PAD_CTRL_CROSS)
		{
			if (FileList.drag_index >= 0)
				drop_callback(context, FileList.drag_index, FileList.focus_index);
			else
				select_callback(context, FileList.focus_index);

			/* return */ EVENTRESULT_STOP;
		}
		else if (event.keysym == PS2_PAD_CTRL_CIRCLE)
		{
			if (FileList.drag_index >= 0)
			{
				FileList.focus_index = FileList.drag_index;
				FileList.leaveDragMode(context);
			}
			else
			{
				set_select(FileList.focus_index, 0);
				mark.value = -1;
				/* return */ EVENTRESULT_STOP;
				
			}
		}
		else if (event.keysym == PS2_PAD_CTRL_L1)
		{
			print "%{FileList.focus_index}\n";
			/* return */ EVENTRESULT_STOP;
		}
		else
			/* return */ EVENTRESULT_CONTINUE;
	}
}

module PROJECT::ROOT::info::Button
{
	function onActivate(context)
	{
		context.startPage(ModelView);
		/* return */ true;
	}
}

module PROJECT::ROOT::info::Button0
{
	function onActivate(context)
	{
		info::FileList.setItemCount(10);
		/* return */ true;
	}
}

module PROJECT::ROOT::info::Button1
{
	function onActivate(context)
	{
		info::FileList.setItemCount(colors.size);
		/* return */ true;
	}
}