module PhotoShootProject::ConfirmDialog
{
	static result = false;
	static original_y = nil;

	function open(context, type, str)
	{
		import Dialog::Buttons::Yes
		import Dialog::Buttons::No
		import Dialog::Buttons::OK
	
		switch (type)
		{
			case 0:
			{
				Yes.visible = false;
				No.visible = false;
				OK.visible = true;
				break;
			}
			case 1:
			{
				Yes.visible = true;
				No.visible = true;
				OK.visible = false;
				break;
			}
		}
	
		original_y = Dialog.y;
		Dialog.y = 480.0;
		Dialog::message.text = str;
		context.pushPage(ConfirmDialog);
	
		switch (type)
		{
			case 0:
			{
				ConfirmDialog.setFocus(OK);
				break;
			}
			case 1:
			{
				ConfirmDialog.setFocus(Yes);
				break;
			}
		}
	
		if (!Dialog.interpolateY(original_y, 0.4))
			context.sync();
		else
		{
			result = false;
			var update_context = context.getUpdateContext();
			update_context.enterEventLoop();
			var r = result;
			result = nil;
			return r;
		}
	}

	function close(context)
	{
		ConfirmDialog.setFocus(nil);
	
		var target_y;
		if (result != nil)
			target_y = -Dialog.h;
		else
			target_y = 480.0;
	
		if (!Dialog.interpolateY(target_y, 0.4))
			context.sync();
		else
		{
			context.closePage(ConfirmDialog);
			var update_context = context.getUpdateContext();
			update_context.leaveEventLoop();
		}
		Dialog.y = original_y;
		original_y = nil;
		Dialog::message.text = nil;
	}

	function onCancel(context, event, item)
	{
		main::sound.play("cancel");
		result = nil;
		close(context);
		result = false;
		return EVENTRESULT_FILTER;
	}
}

module PhotoShootProject::ConfirmDialog::Dialog
{
	function Resize(w, h)
	{
		var shadow_x = Dialog::bg.x;
		var shadow_y = Dialog::bg.y;
		Dialog.w = w;
		Dialog.h = h;
		Title.w = w - shadow_x;
		Buttons.y = h - Buttons.h - shadow_y;
		Buttons.w = w - shadow_x;
		Buttons::Arrangement();
		var mx = message.x - messagebg.x;
		var my = message.y - messagebg.y;
		messagebg.y = Title.h;
		messagebg.w = w - shadow_x;
		messagebg.h = Buttons.y - Title.h;
		message.x = messagebg.x + mx;
		message.y = messagebg.y + my;
		message.w = messagebg.w - (mx * 2);
		message.h = messagebg.h - (my * 2);
		Centering();
	}


	function Centering()
	{
		Dialog.x = (ConfirmDialog.w - Dialog.w) / 2.0;
		Dialog.y = (ConfirmDialog.h - Dialog.h) / 2.0;
	}
}

module PhotoShootProject::ConfirmDialog::Dialog::Buttons
{
	function Arrangement()
	{
		var d = No.x - (Yes.x + Yes.w);
		var w = Yes.w + No.w + d;
		Yes.x = (Buttons.w - w) / 2.0;
		No.x = Yes.x + Yes.w + d;
		OK.x = (Buttons.w - OK.w) / 2.0;
	}
}

module PhotoShootProject::ConfirmDialog::Dialog::Buttons::Yes
{
	function onActivate(context, event, item)
	{
		main::sound.play("ok");
		result = true;
		close(context);
		return EVENTRESULT_FILTER;
	}
}

module PhotoShootProject::ConfirmDialog::Dialog::Buttons::No
{
	function onActivate(context, event, item)
	{
		main::sound.play("cancel");
		result = nil;
		close(context);
		result = false;
		return EVENTRESULT_FILTER;
	}
}

module PhotoShootProject::ConfirmDialog::Dialog::Buttons::OK
{
	function onActivate(context, event, item)
	{
		main::sound.play("ok");
	
		result = 1;
		close(context);
	
		return EVENTRESULT_FILTER;
	}
}