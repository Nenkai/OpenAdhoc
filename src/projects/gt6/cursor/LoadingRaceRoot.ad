













module ROOT
{
    static sCourseCode = nil;
    static sEventBG = nil;
    static sEventFlag = nil;
    static sEventText = nil;
    static sEventLogo = nil;
    static sStartTime = nil;

    method setup(course_code, bg, flag, event_text, logo)
    {
        Flag::SceneFace.setResourceAllocator(main::ORG, 0);
        sCourseCode = course_code;
        sEventBG = bg;
        sEventFlag = flag;
        sEventText = event_text;
        sEventLogo = logo;
    }

    function onPageOutEnd(context)
    {
        context.wait(0.5);

        if (EventTitle.is_enable || !EventTitle2.is_enable)
        {
            var label = EventTitle::EventName;
            var bbox = label.getBoundingBox();
            
            ParticleFace::ParticleSpark::ScalarInterpolator.start_value = bbox.x;
            ParticleFace::ParticleSpark::ScalarInterpolator.end_value = bbox.x + bbox.w;
            EventTitle::EventName::EffectWipe.blind_width = bbox.w;
        }

        var scene_face = Flag::SceneFace;
        scene_face.execCommand("setGlobalMotionSpeed 1.0");
        scene_face.execCommand("resetSchedule");

        if (EventTitle.is_enable || !EventTitle2.is_enable)
        {
            EventTitle::ScalarInterpolator.start();
            EventTitle::ModeLogo::image::ScalarInterpolatorY.start();
            EventTitle::ModeLogo::image::ScalarInterpolatorOpacity.start();
            EventTitle::EventName::EffectWipe::ScalarInterpolator.start();
        }
        else
        {
            EventTitle2::ScalarInterpolator.start();
            EventTitle2::ModeLogo::image::ScalarInterpolatorY.start();
            EventTitle2::ModeLogo::image::ScalarInterpolatorOpacity.start();
            EventTitle2::EventName::text::ScalarInterpolatorY.start();
            EventTitle2::EventName::text::ScalarInterpolatorOpacity.start();
        }

        ParticleFace::ParticleSpark::ScalarInterpolator.start();
        ParticleFace::ParticleSpark::BoolInterpolator.start();

        CourseLogo::VectorInterpolator.start();
        CourseLogo::ScalarInterpolatorBegin.start();

        Flag::SceneFace::BoolInterpolator.start();

        sStartTime = pdistd::GetSystemTimeMicroSecond() + 7000000;
    }

    function sync(delay_sec)
    {
        if (delay_sec != nil)
            sStartTime = pdistd::GetSystemTimeMicroSecond() + (delay_sec * 1000000);
        
        while (sStartTime != nil && pdistd::GetSystemTimeMicroSecond() < sStartTime)
            yield;
    }

    method onInitialize(context)
    {
        Base::Blur.visible = false;

        if (sEventBG == "ONLINE_ROOM")
        {
            Base.visible = false;
            OnlineBase.visible = true;
            QuickMatchBase.visible = false;
            EventTitle2::ModeLogo::image::StrokePoint.is_enable = true;
        }
        else if (sEventBG == "QUICK_MATCH")
        {
            Base.visible = false;
            OnlineBase.visible = false;
            QuickMatchBase.visible = true;
            EventTitle2::ModeLogo::image::StrokePoint.is_enable = true;
        }
        else if (sEventBG == "ACADEMY")
        {
            Base.visible = true;
            Base::Blur.visible = true;
            OnlineBase.visible = false;
            QuickMatchBase.visible = false;
            EventTitle2::ModeLogo::image::StrokePoint.is_enable = false;
        }
        else
        {
            Base.visible = true;
            Base::bg.image_path = "piece/gt6/bridge/%{sEventBG}.img";
            OnlineBase.visible = false;
            QuickMatchBase.visible = false;
            EventTitle2::ModeLogo::image::StrokePoint.is_enable = false;
        }

        var logo = gtengine::MSpecDB::getCourseRow(sCourseCode).Logo;
        CourseLogo::image.image_path = "piece/gt6/course_logo_L/%{logo}.img";

        var mode_logo = sEventBG == "ACADEMY" ? "GTacademy" : "gta";
        if (sEventLogo != "")
            mode_logo = sEventLogo;

        if (EventTitle.is_enable || !EventTitle2.is_enable)
        {
            ParticleFace.is_enable = true;
            EventTitle::EventName.text = sEventText;
            EventTitle::ModeLogo::image.image_path = "/image/gt6/quick_menu/Mode_Logo_%s.dds".format(mode_logo);
        }
        else
        {
            ParticleFace.is_enable = false;
            EventTitle2::EventName::text.text = sEventText;
            EventTitle2::ModeLogo::image.image_path = "/image/gt6/quick_menu/Mode_Logo_%s.dds".format(mode_logo);

        }

        var scene_face = Flag::SceneFace;
        scene_face.setSimpleRenderer(true);
        scene_face.setClearColorBuffer(false);

        var scene = "";

        switch (sEventFlag)
        {
            case "white":
                scene = "gtAssociationFlag";
                break;

            case "black":
                scene = "gtBlackFlag";
                break;

            case "academy":
                scene = "gtAcademyFlag";
                break;

            case "license":
                scene = "gtLicenseGrid";
                break;

            case "coffee":
                scene = "gtWhiteFlag";
                break;

            default:
                scene = "gtAssociationFlag";
                break;
        }

        SceneFaceUtil::loadScene(scene_face, scene);
        scene_face.setClearDepthBuffer(false);
        scene_face.execCommand("resetSchedule");
        scene_face.execCommand("setGlobalMotionSpeed 0.0");
    }

    method onFinalize(context)
    {
        var scene_face = Flag::SceneFace;
        scene_face.execCommand("clearAllModel");

        sCourseCode = nil;
        sEventBG = nil;
        sEventFlag = nil;
        sEventText = nil;
        sEventLogo = nil;
        sStartTime = nil;

        Base::bg.image_path = "";
        QuickMatchBase::bg.image_path = "";
    }

    method onPageInStart(context)
    {
        Base::ScalarInterpolator.start();
        OnlineBase::ScalarInterpolator.start();
        QuickMatchBase::ScalarInterpolator.start();
        CourseLogo::ScalarInterpolatorEnd.start();
        var scene_face = Flag::SceneFace;
        scene_face.execCommand("setGlobalMotionSpeed 1.0");
        scene_face.execCommand("resetSchedule");
    }
}