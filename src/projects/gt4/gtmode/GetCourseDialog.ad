








module PROJECT::ROOT
{
#ifdef GT4O_US_BETA
    static course;
#else
    static course = nil;
#endif

    function setFadeActor(widget)
    {
        var actor = main::menu::MFadeActor(widget, 1.0);
        actor.repeat = true;
        actor.period = 0.25;
        widget.actor = actor;
    }

    function setMoveActor(widget)
    {
        var actor = main::menu::MMoveActor(widget, widget.x, PS2_SCREEN_H_F);
        widget.actor = actor;
        widget.actor.ratio = 0.2;
    }

    function setFadeActorRoot(root)
    {
        var actor = main::menu::MFadeActor(root, 1.0);
        actor.repeat = false;
        actor.period = 0.5;
        root.actor = actor;
    }

    function onLoad(context)
    {
        setFadeActor(Dialog::OK::bgf);
        setMoveActor(Dialog);
        setFadeActorRoot(ROOT);
    }

    function open_motion(context)
    {
        var ratio = context.cursor_speed_ratio;
        Dialog.actor.ratio = 0.2 * ratio;
        Dialog.actor.destinationY = PS2_SCREEN_H_F;
        Dialog.actor.out = true;
        Dialog.actor.warp();
        Dialog::OK::bgf.actor.period = 0.25 / ratio;

        ROOT.actor.period = 0.5 / ratio;
        ROOT.actor.out = true;
        ROOT.actor.warp();
        context.pushPage(ROOT);
        Dialog.actor.out = false;
        GetCourseDialog.actor.out = false;
    }

    function close_motion(context)
    {
        Dialog.actor.destinationY = -Dialog.h;
        Dialog.actor.out = true;
        ROOT.actor.out = true;
        context.sync(0.5);
        context.closePage(ROOT);
    }

    function open(context, message, crs)
    {
        Dialog::OK::label.adjustScale();
        Dialog::Message.text = message;
        course = crs;
        ROOT.setFocus(Dialog::OK);
        open_motion(context);
        context.getUpdateContext().enterEventLoop();
    }

    function close(context)
    {
        ROOT.setFocus(nil);
        close_motion(context);
        Dialog::Message.text = nil;
        context.getUpdateContext().leaveEventLoop();
    }

    function onInitialize(context)
    {
        Dialog::bg.image_path = "piece/crs_pict/" + course + ".img";
        Dialog::bg.doInitialize(context);

        main::sound.play("next");
    }

    function onTerminate(context)
    {
        course = nil;
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        close(context, 0);

        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Dialog::OK
{
    function onActivate(context, event, item)
    {
        main::sound.play("ok");
        close(context);
        return EVENTRESULT_FILTER;
    }
}