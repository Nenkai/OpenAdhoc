module PROJECT::ROOT
{
	function onInitialize(context)
	{
		LoadReplayRoot.visible = true;
	
		enterPage(context, LoadReplayRoot, hidden::Title::title.doCopy());
	
		LoadReplayRoot.appendChild(context, Template::Normal::Scroll.doCopy());
	
		Template::setListActivate(onListActivate);
		Template::setListFocusEnter(nil);
		Template::setListFocusLeave(nil);
		Template::setListCancel(nil);
	
		selectFolder_ = 0; /* From project */
		hidden.visible = false;
	
		hideReplayItem(LoadReplayRoot);
	
		init(context);
	
		Template::setExitActivate(commandExit);
		Template::setOptionActivate(commandOption);
	}

	function onFinalize(context)
	{
		var scroll = LoadReplayRoot["Scroll"];
	
		if (scroll != nil)
			LoadReplayRoot.removeChild(context, scroll);
	
		leavePage(context, LoadReplayRoot);
	}

	function onCancel(context)
	{
		main::sound.play("cancel");
		exit(context);
		return 2;
	}
	
	function exit(context)
	{
		start_page(context, nil);
		main::menu::MMemoryCardManager::setAction(0);
	}

	function init(context)
	{
		context.cursor_visible = true;
	
		initCommon(context, LoadReplayRoot);
		initFolders(context);
		initCommands(context);
		initList(context);
	
		setDragable(0);
		setAliasFileMode(0);
		setHasNewFile(0);
	
		manager = nil;
	
		var slot = currentSlot();
		var mode = main::game.next_menu_arg;
	
		print("mode == %{mode}\n");
	
		manager = main::menu::MMemoryCardManager(mode, slot);
	
		LoadReplayRoot.setFocus(getList());
	
		manager.start();
	}


	function currentSlot()
	{
		return main::game.option.replay_memory_card_slot;
	}
	
	static folders_ = ["Replay"];
	
	function initFolders(context)
	{
		initFolderCommon(context, folders_);
		getFolderVBox()["Replay"].can_focus = false;
	}

	function commandDummy(context)
	{
		print("dummy");
	}
	
	function commandOption(context)
	{
		print("option!");
		var slot = currentSlot();
		ReplaySlotDialog::open(context);
		if (slot != currentSlot())
			init(context);
	}

	function commandExit(context)
	{
		print("exit");
		exit(context);
	}
	
	function initCommands(context)
	{
	}
	
	function initList(context)
	{
		initListCommon(context, hidden::ReplayItem);
	}
	
	function setupWidget(context, i, w)
	{
		return setupWidgetReplay(context, i, w);
	}

	function onListActivate(context, event)
	{
		var list = getList();
	
		if (list.focus_index < 0)
			return;
	
		manager.requestPause();
		main::sound.play("ok");
	
		var file = getFile(getList().focus_index);
	
		manager.waitPause();
	
		if (file != nil)
		{
			setProgress(context, manager.progress);
			openProgressDialog(context, translateMc(context, "now_loading"));
			var r = file.load(manager);
			closeProgressDialog(context);
			if (handleLoadResult(context, r))
			{
				main::sound.play("ok");
				context.sync(0.5);
				start_page(context, nil);
				manager = nil;
				main::menu::MMemoryCardManager::setAction(1);
			}
		}
	
		if (manager != nil)
			manager.restart();
	}
}