module ROOT
{
    hidden.visible = false;

    attribute popup;
    attribute closed = false;
    attribute result;

    method open(context)
    {
        self.result = nil;

        self.closed = false;
        self.popup = main::SequenceUtil::ModalPage(context, ROOT);
        self.popup.open();

        return self.result;
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;
        ContextMain.event_mask = 0x05;
        ContextMain.disableInput();

        FadeActor.on_effect_end = function (context)
        {
            if (ROOT.popup != nil)
            {
                ROOT.popup.close();
                ROOT.popup = nil;
            }

            ContextMain.enableInput();
        }

        FadeActor.out = true;
    }

    method onInitialize(context)
    {
        var style_list = [
            context.translate(ROOT, "EFFECT_CROSS_FADE"),
            context.translate(ROOT, "EFFECT_SLIDE"),
            context.translate(ROOT, "EFFECT_ZOOM")
        ];

        var option_menu = aStyle::OptionMenu;
        OptionMenuUtil::initialize(context, ROOT, option_menu, hidden::OptionMenuItem, style_list);

        var style = System::Math::clamp(GAME_STATUS.user_profile.option.slideshow_style, 0, style_list.size);
        option_menu.setIndex(context, style);

        var sec_unit = " " + context.translate(ROOT, "SEC");

        var slider = aInterval::slider;
        var interval = System::Math::clamp(GAME_STATUS.user_profile.option.slideshow_interval, slider.min, slider.max);
        slider.value = interval;
        slider.unit_text = sec_unit;
        slider.setup(context);

        slider = aTransition::slider;
        var transition = System::Math::clamp(GAME_STATUS.user_profile.option.slideshow_transition, slider.min, slider.max);
        slider.value = transition;
        slider.unit_text = sec_unit;
        slider.setup(context);

        var imagetype_list = [
            context.translate(ROOT, "IMAGE_ALL"),
            context.translate(ROOT, "IMAGE_2D_ONLY"),
            context.translate(ROOT, "IMAGE_3D_ONLY")
        ];

        option_menu = aImageType::OptionMenu;
        OptionMenuUtil::initialize(context, ROOT, option_menu, hidden::OptionMenuItem, imagetype_list);
        var imagetype = System::Math::clamp(GAME_STATUS.user_profile.option.slideshow_imagetype, 0, imagetype_list.size);
        option_menu.setIndex(context, imagetype);

        var bgm = GAME_STATUS.user_profile.option.slideshow_bgm ? 0 : 1;
        var radiobox = aBgm::RadioBox;
        radiobox.setup([
            [radiobox.VBox::HBox::On::RadioButton, true],
            [radiobox.VBox::HBox::Off::RadioButton, false]
        ], bgm);

        var repeat = GAME_STATUS.user_profile.option.slideshow_repeat ? 0 : 1;
        radiobox = aRepeat::RadioBox;
        radiobox.setup([
            [radiobox.VBox::HBox::On::RadioButton, true],
            [radiobox.VBox::HBox::Off::RadioButton, false]
        ], repeat);

        var shuffle = GAME_STATUS.user_profile.option.slideshow_shuffle ? 0 : 1;
        radiobox = aShuffle::RadioBox;
        radiobox.setup([
            [radiobox.VBox::HBox::On::RadioButton, true],
            [radiobox.VBox::HBox::Off::RadioButton, false]
        ], shuffle);

        ROOT.setFocus(Popup::Pane::FootRow::CancelOK::OK);
        context.pushEvent(menu::MScriptEvent(context, ROOT, "postInitialize"));

        return EVENTRESULT_FILTER;
    }

    method postInitialize(context)
    {
        SaveDataUtilGT5::checkSaveEveryWhere(context);
    }

    method onFinalize(context)
    {
        var needSave = false;

        if (GAME_STATUS.user_profile.option.slideshow_style != aStyle::OptionMenu.index)
        {
            GAME_STATUS.user_profile.option.slideshow_style = aStyle::OptionMenu.index;
            needSave = true;
        }

        if (GAME_STATUS.user_profile.option.slideshow_interval != aInterval::slider.value)
        {
            GAME_STATUS.user_profile.option.slideshow_interval = aInterval::slider.value;
            needSave = true;
        }

        if (GAME_STATUS.user_profile.option.slideshow_transition != aTransition::slider.value)
        {
            GAME_STATUS.user_profile.option.slideshow_transition = aTransition::slider.value;
            needSave = true;
        }

        if (GAME_STATUS.user_profile.option.slideshow_imagetype != aImageType::OptionMenu.index)
        {
            GAME_STATUS.user_profile.option.slideshow_imagetype = aImageType::OptionMenu.index;
            needSave = true;
        }

        if (GAME_STATUS.user_profile.option.slideshow_bgm != aBgm::RadioBox.getSelectedButtonValue())
        {
            GAME_STATUS.user_profile.option.slideshow_bgm = aBgm::RadioBox.getSelectedButtonValue();
            needSave = true;
        }

        if (GAME_STATUS.user_profile.option.slideshow_repeat != aRepeat::RadioBox.getSelectedButtonValue())
        {
            GAME_STATUS.user_profile.option.slideshow_repeat = aRepeat::RadioBox.getSelectedButtonValue();
            needSave = true;
        }

        if (GAME_STATUS.user_profile.option.slideshow_shuffle != aShuffle::RadioBox.getSelectedButtonValue())
        {
            GAME_STATUS.user_profile.option.slideshow_shuffle = aShuffle::RadioBox.getSelectedButtonValue();
            needSave = true;
        }

        if (needSave)
            SaveDataUtilGT5::saveEveryWhere(context);

        OptionMenuUtil::finalize(context, aImageType::OptionMenu);
        OptionMenuUtil::finalize(context, aStyle::OptionMenu);
    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        ROOT.setFocus(Popup::Pane::FootRow::CancelOK::Cancel);

        return EVENTRESULT_FILTER;
    }

    module Popup::Pane
    {
        module FootRow::CancelOK
        {
            module Cancel
            {
                method onActivate(context)
                {
                    main::sound.play("ok");
                    ROOT.close(context);

                    return EVENTRESULT_FILTER;
                }

                method onCancel(context)
                {
                    main::sound.play("cancel");
                    ROOT.close(context);

                    return EVENTRESULT_FILTER;
                }
            }

            module OK
            {
                method onActivate(context)
                {
                    main::sound.play("ok");

                    ROOT.result = [
                        "style" : aStyle::OptionMenu.index,
                        "interval" : aInterval::slider.value,
                        "transition" : aTransition::slider.value,
                        "imagetype" : aImageType::OptionMenu.index,
                        "bgm" : aBgm::RadioBox.getSelectedButtonValue(),
                        "repeat" : aRepeat::RadioBox.getSelectedButtonValue(),
                        "shuffle" : aShuffle::RadioBox.getSelectedButtonValue()
                    ];

                    ROOT.close(context);

                    return EVENTRESULT_FILTER;
                }    
            }
        }    
    }
}