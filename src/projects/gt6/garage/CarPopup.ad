













module ROOT
{
    attribute mgarage_;
    attribute mgarage_car_;
    attribute popup_;
    attribute is_stockcar_;
    attribute result_need_update_;
    attribute result_blanked_;
    attribute result_update_thumb_;
    attribute result_need_save_;
    attribute on_favorite_list_;

    method open(context, mgarage_car, mgarage, is_stockcar, on_favorite_list)
    {
        self.mgarage_car_ = mgarage_car;
        self.mgarage_ = mgarage;

        self.is_stockcar_ = is_stockcar != nil ? is_stockcar : true;
        self.on_favorite_list_ = on_favorite_list != nil ? on_favorite_list : false;
        self.result_need_update_ = false;
        self.result_blanked_ = false;
        self.result_update_thumb_ = false;
        self.result_need_save_ = false;
    
        self.DialogFrame.appear();

        self.popup_ = SequenceUtil::ModalPage(context, ROOT);
        self.popup_.open();

        var res = [self.result_need_update_, self.result_blanked_, self.result_update_thumb_, self.result_need_save_];
        self.result_need_update_ = nil;
        self.result_blanked_ = nil;
        return res;
    }

    method close(context)
    {
        if (self.popup_ != nil)
        {
            var delay_time = self.DialogFrame.hide();
            self.popup_.close(delay_time);
            self.popup_ = nil;
        }

        ContextMain.enableInput();
    }

    method onInitialize(context)
    {
        var garage_id = self.mgarage_car_.garage_id;
        var cp = self.mgarage_.getCar(garage_id);

        var tuner_label = SPECDB.executeQuery1R1C("SELECT TunerString FROM TUNER WHERE ID=?", [self.mgarage_car_.tuner]);
        var country_label = SPECDB.executeQuery1R1C("SELECT code FROM COUNTRY WHERE ID=?", [self.mgarage_car_.country]);

        var country_str = country_label != "-" ? country_label : "pdi";

        DialogFrame::Pane::Body::CarView::Riding.visible = false;
        DialogFrame::Pane::Body::CarView::Favorite.visible = false;
        DialogFrame::Pane::Body::CarView::CarName.text = self.mgarage_car_.short_name;
        DialogFrame::Pane::Body::CarView::CarName.DealerName.text = manager.translate("TunerName", tuner_label);
        DialogFrame::Pane::Body::CarView::CarName.Dealer.image_path = "piece/gt6/tunner_logo_M/%s.img".format(tuner_label);
        DialogFrame::Pane::Body::CarView::Flag.image_path = "piece/gt6/flag_menu/%s.img".format(country_str.upcase());
        DialogFrame::Pane::Body::CarView::Country.text = manager.translate("Country", country_str.upcase());

        self.updateThumbnail(context);
        self.updateButtons(context);
    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        self.close(context);
        return EVENTRESULT_FILTER;
    }

    method updateButtons(context)
    {
        DialogFrame::Pane::Body::Buttons::Ride.update();
        DialogFrame::Pane::Body::Buttons::Transfer.update();
        DialogFrame::Pane::Body::Buttons::Favorite.update();
        DialogFrame::Pane::Body::Buttons::Sell.update();
    }

    method updateThumbnail(context)
    {
        var thumb_type = self.is_stockcar_ ? GarageUtil::Thumbnail::Type::Stockyard : GarageUtil::Thumbnail::Type::Garage;
        var image_path = GarageUtil::Thumbnail::getPath(self.mgarage_car_.garage_id, thumb_type, GarageUtil::Thumbnail::Size::L);

        if (pdistd::Exist(image_path))
        {
            DialogFrame::Pane::Body::CarView::CarImage.image_path = "";
            DialogFrame::Pane::Body::CarView::CarImage.image_path = image_path;
            DialogFrame::Pane::Body::CarView::CarImageNotFound.visible = false;
        }
        else
        {
            DialogFrame::Pane::Body::CarView::CarImage.image_path = "";
            DialogFrame::Pane::Body::CarView::CarImageNotFound.visible = true;
        }
    }

    method removeThumbnail(context)
    {
        var thumb_type = self.is_stockcar_ ? GarageUtil::Thumbnail::Type::Stockyard : GarageUtil::Thumbnail::Type::Garage;
        
        var image_path_l = GarageUtil::Thumbnail::getPath(self.mgarage_car_.garage_id, thumb_type, GarageUtil::Thumbnail::Size::L);
        pdistd::RemoveFile(image_path_l);

        var image_path_s = GarageUtil::Thumbnail::getPath(self.mgarage_car_.garage_id, thumb_type, GarageUtil::Thumbnail::Size::S);
        pdistd::RemoveFile(image_path_s);
    }

    module DialogFrame::Pane::Body::Buttons
    {
        module Ride
        {
            method update(context)
            {
                if (!ROOT.is_stockcar_)
                {
                    var is_riding = ROOT.mgarage_car_.garage_id == GAME_STATUS.user_profile.garage.getRidingGarageId();
                    DialogFrame::Pane::Body::CarView::Riding.visible = is_riding;
                    
                    self.insensitive = is_riding;
                    self.visible = true;
                }
                else
                {
                    self.visible = false;
                }
            }

            method onActivate(context)
            {
                main::sound.play("ok");
                Function::rideCar(context, ROOT.mgarage_car_);
                ROOT.updateButtons(context);
                ROOT.result_need_update_ = true;
                ROOT.result_need_save_ = true;
                return EVENTRESULT_FILTER;
            }
        }

        module Transfer
        {
            method update(context)
            {
                if (!ROOT.is_stockcar_)
                {
                    var is_riding = ROOT.mgarage_car_.garage_id == GAME_STATUS.user_profile.garage.getRidingGarageId();

                    self.insensitive = is_riding;
                }
                else
                {
                    self.insensitive = false;
                }

                var lockey = ROOT.is_stockcar_ ? "Label_MoveToGarage" : "Label_MoveToStockyard";
                self.label.text = manager.translate(CarSelectPopup, lockey);
                self.label_i.text = self.label.text;
            }

            method onActivate(context)
            {
                main::sound.play("ok");

                if (ROOT.is_stockcar_)
                {
                    if (StockyardUtil::transferToGarage(context, ROOT.mgarage_car_))
                    {
                        ROOT.result_need_update_ = true;
                        ROOT.result_blanked_ = true;
                        ROOT.close(context);
                    }
                    else
                    {
                        main::sound.play("disable");
                        ERROR(context, "CommonGTMode", "ERROR_GARAGE_FULL");
                    }
                }
                else
                {
                    if (StockyardUtil::transferToStockyard(context, ROOT.mgarage_car_))
                    {
                        ROOT.result_need_update_ = true;
                        ROOT.result_blanked_ = true;
                        ROOT.close(context);
                    }
                    else
                    {
                        main::sound.play("disable");
                        ERROR(context, "CommonGTMode", "ERROR_STOCKYARD_FULL");
                    }
                }

                return EVENTRESULT_FILTER;
            }
        }

        module Favorite
        {
            method update(context, favorite)
            {
                if (!ROOT.is_stockcar_)
                {
                    if (favorite == nil)
                    {
                        var ref_mgarage_car = GAME_STATUS.user_profile.garage.referGarageCar(ROOT.mgarage_car_.garage_id);
                        favorite = ref_mgarage_car.favorite;
                    }

                    DialogFrame::Pane::Body::CarView::Favorite.visible = favorite;
                    var lockey = favorite ? "Label_RemoveFavorite" : "Label_AddFavorite";
                    self.label.text = manager.translate(CarSelectPopup, lockey);
                    self.label_i.text = self.label.text;
                    self.insensitive = false;
                    self.visible = true;
                }
                else
                {
                    self.visible = false;
                }
            }

            method onActivate(context)
            {
                main::sound.play("ok");

                var ref_mgarage_car = GAME_STATUS.user_profile.garage.referGarageCar(ROOT.mgarage_car_.garage_id);
                var favorite = !ref_mgarage_car.favorite;

                if (Function::setFavorite(context, ROOT.mgarage_car_.garage_id, favorite, true))
                {
                    OK(context, "Gallery", favorite ? "MSG_ADD_FAVORITE" : "MSG_REMOVE_FAVORITE");
                    self.update(context, favorite);

                    if (ROOT.on_favorite_list_)
                    {
                        ROOT.result_blanked_ = !favorite;
                        ROOT.result_need_update_ = true;
                    }
                    else
                    {
                        ROOT.result_need_update_ = true;
                    }

                    ROOT.result_need_save_ = true;
                }

                return EVENTRESULT_FILTER;
            }
        }

        module Capture
        {
            method update(context) { }

            method onActivate(context)
            {
                main::sound.play("ok");
                Function::captureThumbnail(context, ROOT.mgarage_, ROOT.is_stockcar_, ROOT.mgarage_car_, CarSelectPopup::SceneFaceForCapture);
                ROOT.updateThumbnail(context);
                ROOT.result_update_thumb_ = true;
                return EVENTRESULT_FILTER;
            }
        }

        module Sell
        {
            method update(context) 
            { 
                if (!ROOT.is_stockcar_)
                {
                    var is_riding = ROOT.mgarage_car_.garage_id == GAME_STATUS.user_profile.garage.getRidingGarageId();
                    Sell.insensitive = is_riding;
                }
                else
                {
                    self.insensitive = false;
                }
            }

            method onActivate(context)
            {
                main::sound.play("ok");
                
                if (Function::sell(context, ROOT.mgarage_, ROOT.mgarage_car_))
                {
                    ContextMain.disableInput();
                    ContextMain.filterKeyEvent();

                    if (ROOT.is_stockcar_)
                        GAME_STATUS.user_profile.garage_stockyard_carcount = ROOT.mgarage_.getCarCount();

                    ROOT.removeThumbnail(context);
                    ROOT.result_need_save_ = true;
                    ROOT.result_blanked_ = true;
                    ROOT.result_need_update_ = true;
                    ROOT.close(context);
                }

                return EVENTRESULT_FILTER;
            }
        }
    }
}