module PROJECT::ROOT
{
    static mission_options = [];
    mission_options.push("AUTOMATIC");
    mission_options.push("MANUAL");

    static assist_options = [];
    assist_options.push("ON");
    assist_options.push("OFF");

    static tire_options = [];
    tire_options.push("STREET");
    tire_options.push("SPORTS");
    tire_options.push("ARCADE");
    tire_options.push("RACING");

    hidden.visible = false;

    function initialize_optionmenu(context, optionmenu, options)
    {
        var vbox = optionmenu["popup"]["vbox"];
        var num  = options.size;
        

        for (var i = 0; i < num; i++)
        {
            var item = hidden::Item.doCopy();
            item["label"].text = context.translate(PregridRoot, options[i]);
            item.name = options[i];
            vbox.appendChild(item);
        }

        optionmenu.applyAppend(context);
    }

    function onLoadInitialize(context)
    {
        initialize_optionmenu(context, Pane::Mission::OptionMenu, mission_options);
        initialize_optionmenu(context, Pane::Assist::OptionMenu,  assist_options);
        initialize_optionmenu(context, Pane::Tire::OptionMenu,    tire_options);
    }

    static original_x = Pane.x;

    function open(context)
    {
        context.pushPage(SettingPopup);
        Pane.x = PS2_SCREEN_W_F;
        while (!Pane.interpolateX(original_x, 0.3))
            context.sync();
    }

    function close(context)
    {
        while (!Pane.interpolateX(PS2_SCREEN_W_F, 0.3))
            context.sync();

        context.closePage(SettingPopup);
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        close(context);
		return EVENTRESULT_FILTER
    }

    function apply_setting()
    {
        var car = main::menu::MCarGarage(main::game.car_code);
        main::game.manual = (Pane::Mission::OptionMenu.index == 1);

        if (Pane::Assist::OptionMenu.index == 0)
            main::game.assist_type = 1;
        else
            main::game.assist_type = 0;

        var tire_selectable = car.isTireSelectable();
        if (tire_selectable)
            main::game.tire_type = ["low", "high", "medium", "racing"][Pane::Tire::OptionMenu.index];
        else
            main::game.tire_type = "unselectable";
    }

    function onInitialize(context)
    {
        var car = main::menu::MCarGarage(main::game.car_code);

        var mission_selectable = !car.isAutomaticOnly();
        if (mission_selectable)
        {
            Pane::Mission::OptionMenu.setIndex(context, 0);
            Pane::Mission::OptionMenu.insensitive = false;
        }
        else
		{
            Pane::Mission::OptionMenu.insensitive = true;
		}

        var tire_selectable = car.isTireSelectable();
        if (tire_selectable)
        {
            Pane::Tire::OptionMenu.setInsensitive(context, [false, false, false, true]);
            Pane::Tire::OptionMenu.insensitive = false;
            Pane::Tire::OptionMenu.setIndex(context, default_tire);
        }
        else
        {
            Pane::Tire::OptionMenu.setInsensitive(context, [true, true, true, false]);
            Pane::Tire::OptionMenu.insensitive = true;
            Pane::Tire::OptionMenu.setIndex(context, 3);
        }

        if (mission_selectable)
            SettingPopup.setFocus(Pane::Mission::OptionMenu);
        else
            SettingPopup.setFocus(Pane::Assist::OptionMenu);
    }

    function onFinalize(context)
    {
    }
}

module PROJECT::ROOT::Pane::OK
{
    function onActivate(context, event)
    {
        main::sound.play("ok");
        apply_setting();
        close(context);
        return EVENTRESULT_FILTER;
    }
}